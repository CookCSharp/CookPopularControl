<pc:SideBarWindow x:Name="DemoMainWindow"
                  x:Class="MvvmTestDemo.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
                  xmlns:local="clr-namespace:MvvmTestDemo"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:pc="https://Chance.CookPopularControl/2021/xaml"
                  xmlns:prism="http://prismlibrary.com/"
                  xmlns:view="clr-namespace:MvvmTestDemo.DemoViews"
                  mc:Ignorable="d"
                  d:DataContext="{Binding Source={d:DesignInstance Type={x:Type local:MainWindowViewModel}}}"
                  prism:ViewModelLocator.AutoWireViewModel="True"
                  ResizeMode="CanResizeWithGrip"
                  WindowStartupLocation="CenterScreen"
                  Title="CookPopularControl"
                  Width="1000"
                  Height="800">

    <!--<pc:SideBarWindow.DataContext>
        <prism:ContainerProvider Type="{x:Type local:MainWindowViewModel}" />
    </pc:SideBarWindow.DataContext>-->

    <behavior:Interaction.Triggers>
        <behavior:EventTrigger EventName="Loaded">
            <behavior:InvokeCommandAction Command="{Binding ViewLoadedCommand}" />
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="Closing">
            <behavior:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="IsShowSideBarChanged">
            <behavior:InvokeCommandAction Command="{Binding ShowSideBarCommand}" />
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="SettingClick">
            <behavior:InvokeCommandAction Command="{Binding SettingClickCommand}" />
        </behavior:EventTrigger>

        <behavior:EventTrigger EventName="SizeChanged">
            <behavior:InvokeCommandAction Command="{Binding ViewSizeChangedCommand}" />
        </behavior:EventTrigger>
    </behavior:Interaction.Triggers>

    <pc:SideBarWindow.ClientTitleBarAdditionalContent>
        <Button pc:FrameworkElementBaseAttached.IconGeometry="{StaticResource HomePageGeometry}"
                pc:FrameworkElementBaseAttached.IconHeight="18" pc:FrameworkElementBaseAttached.IconWidth="18"
                Command="{Binding HomePageCommand}"
                Style="{StaticResource WindowIconButtonStyle}"
                ToolTip="主页" />
    </pc:SideBarWindow.ClientTitleBarAdditionalContent>

    <Grid>
        <Grid Visibility="Visible">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ListBox x:Name="listBox" Grid.Column="0"
                     ItemsSource="{Binding ControlNamesList}"
                     SelectedIndex="{Binding DemoViewsSelectedIndex, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                     SelectionMode="Single"
                     Width="0"
                     FontSize="14" FontWeight="Normal">
                <behavior:Interaction.Triggers>
                    <behavior:EventTrigger EventName="SelectionChanged">
                        <behavior:InvokeCommandAction Command="{Binding DemoViewsSelectedCommand}" />
                    </behavior:EventTrigger>
                    <behavior:DataTrigger Binding="{Binding ElementName=DemoMainWindow, Path=IsShowSideBar}" Value="True">
                        <behavior:ControlStoryboardAction ControlStoryboardOption="Play">
                            <behavior:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="listBox" Storyboard.TargetProperty="Width"
                                                     From="0" To="150" Duration="0:0:0.5" />
                                </Storyboard>
                            </behavior:ControlStoryboardAction.Storyboard>
                        </behavior:ControlStoryboardAction>
                    </behavior:DataTrigger>
                    <behavior:DataTrigger Binding="{Binding ElementName=DemoMainWindow, Path=IsShowSideBar}" Value="False">
                        <behavior:ControlStoryboardAction ControlStoryboardOption="Play">
                            <behavior:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="listBox" Storyboard.TargetProperty="Width"
                                                     From="150" To="0" Duration="0:0:0.5" />
                                </Storyboard>
                            </behavior:ControlStoryboardAction.Storyboard>
                        </behavior:ControlStoryboardAction>
                    </behavior:DataTrigger>
                </behavior:Interaction.Triggers>
            </ListBox>
            <ContentControl Grid.Column="1" Content="{Binding ControlContent}" />
        </Grid>
        <view:ScrollViewerDemo Visibility="Collapsed" />

        <!--  接收BubbleMessage的容器  -->
        <ScrollViewer VerticalScrollBarVisibility="Hidden"
                      Margin="0,10,10,10" HorizontalAlignment="Right" VerticalAlignment="Top">
            <StackPanel pc:NotifyMessageBase.IsParentElement="True" pc:NotifyMessageBase.ParentElementToken="MainWindowToken" HorizontalAlignment="Right" />
        </ScrollViewer>
    </Grid>

</pc:SideBarWindow>
