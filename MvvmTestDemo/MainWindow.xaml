<pc:SideBarWindow x:Name="DemoMainWindow"
                  x:Class="MvvmTestDemo.MainWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:local="clr-namespace:MvvmTestDemo"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:pc="https://Chance.CookPopularControl/2021/xaml"
                  xmlns:prism="http://prismlibrary.com/"
                  xmlns:useCtl="clr-namespace:MvvmTestDemo.UserControls"
                  xmlns:view="clr-namespace:MvvmTestDemo.DemoViews"
                  mc:Ignorable="d"
                  Title="CookPopularControl"
                  Height="800"
                  d:DataContext="{Binding Source={d:DesignInstance Type={x:Type local:MainWindowViewModel}}}"
                  prism:ViewModelLocator.AutoWireViewModel="True"
                  ResizeMode="CanResizeWithGrip"
                  WindowStartupLocation="CenterScreen"
                  WindowState="Normal">

    <!--<pc:SideBarWindow.DataContext>
        <prism:ContainerProvider Type="{x:Type local:MainWindowViewModel}" />
    </pc:SideBarWindow.DataContext>-->

    <behavior:Interaction.Triggers>
        <behavior:EventTrigger EventName="Loaded">
            <behavior:InvokeCommandAction Command="{Binding ViewLoadedCommand}" />
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="Closing">
            <behavior:InvokeCommandAction Command="{Binding WindowClosingCommand}" />
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="IsShowSideBarChanged">
            <behavior:InvokeCommandAction Command="{Binding ShowSideBarCommand}" />
        </behavior:EventTrigger>
        <behavior:EventTrigger EventName="SettingClick">
            <behavior:InvokeCommandAction Command="{Binding SettingClickCommand}" />
        </behavior:EventTrigger>

        <behavior:EventTrigger EventName="SizeChanged">
            <behavior:InvokeCommandAction Command="{Binding ViewSizeChangedCommand}" />
        </behavior:EventTrigger>
    </behavior:Interaction.Triggers>

    <pc:SideBarWindow.ClientTitleBarAdditionalContent>
        <StackPanel HorizontalAlignment="Right" Orientation="Horizontal">
            <Button Command="{Binding HomePageCommand}"
                    ToolTip="主页"
                    pc:FrameworkElementBaseAttached.IconGeometry="{StaticResource HomePageGeometry}"
                    pc:FrameworkElementBaseAttached.IconHeight="18" pc:FrameworkElementBaseAttached.IconWidth="18"
                    Style="{StaticResource WindowIconButtonStyle}" />
            <ToggleButton x:Name="themeTb"
                          ToolTip="主题"
                          pc:FrameworkElementBaseAttached.IconGeometry="{StaticResource ThemeGeometry}"
                          pc:FrameworkElementBaseAttached.IconHeight="16" pc:FrameworkElementBaseAttached.IconWidth="16"
                          Style="{StaticResource WindowIconToggleButtonStyle}" />
        </StackPanel>
    </pc:SideBarWindow.ClientTitleBarAdditionalContent>

    <Grid>
        <Grid Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ListBox x:Name="listBox" Grid.Column="0"
                     Width="0"
                     FontSize="14" FontWeight="Normal"
                     pc:FrameworkElementBaseAttached.CornerRadius="0" pc:ScrollBarAssistant.HorizontalScrollBarHeight="8"
                     pc:ScrollBarAssistant.VerticalScrollBarWidth="8"
                     ItemsSource="{Binding ControlNamesList}"
                     SelectedIndex="{Binding DemoViewsSelectedIndex, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}"
                     SelectionMode="Single">
                <behavior:Interaction.Triggers>
                    <behavior:EventTrigger EventName="SelectionChanged">
                        <behavior:InvokeCommandAction Command="{Binding DemoViewsSelectedCommand}" />
                    </behavior:EventTrigger>
                    <behavior:DataTrigger Binding="{Binding ElementName=DemoMainWindow, Path=IsShowSideBar}" Value="True">
                        <behavior:ControlStoryboardAction ControlStoryboardOption="Play">
                            <behavior:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="listBox" Storyboard.TargetProperty="Width"
                                                     From="0" To="150" Duration="0:0:0.5" />
                                </Storyboard>
                            </behavior:ControlStoryboardAction.Storyboard>
                        </behavior:ControlStoryboardAction>
                    </behavior:DataTrigger>
                    <behavior:DataTrigger Binding="{Binding ElementName=DemoMainWindow, Path=IsShowSideBar}" Value="False">
                        <behavior:ControlStoryboardAction ControlStoryboardOption="Play">
                            <behavior:ControlStoryboardAction.Storyboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="listBox" Storyboard.TargetProperty="Width"
                                                     From="150" To="0" Duration="0:0:0.5" />
                                </Storyboard>
                            </behavior:ControlStoryboardAction.Storyboard>
                        </behavior:ControlStoryboardAction>
                    </behavior:DataTrigger>
                </behavior:Interaction.Triggers>
            </ListBox>
            <ContentControl Grid.Column="1" Content="{Binding ControlContent}" />
        </Grid>
        <view:ProgressBarDemo Visibility="Visible" />

        <!--  接收BubbleMessage的容器  -->
        <ScrollViewer Margin="0,10,10,10"
                      HorizontalAlignment="Right" VerticalAlignment="Top"
                      VerticalScrollBarVisibility="Hidden">
            <StackPanel HorizontalAlignment="Right" pc:NotifyMessageBase.IsParentElement="True" pc:NotifyMessageBase.ParentElementToken="MainWindowToken" />
        </ScrollViewer>

        <pc:ExtendPopup AllowsTransparency="True" HorizontalOffset="10"
                        IsOpen="{Binding ElementName=themeTb, Path=IsChecked}"
                        Placement="Left"
                        PlacementTarget="{Binding ElementName=themeTb}"
                        StaysOpen="False" VerticalOffset="30">
            <Border Width="160" Height="180"
                    Background="White"
                    Margin="5"
                    Effect="{StaticResource ShadowEffectDepth0}">
                <ListView pc:ScrollBarAssistant.HorizontalScrollBarHeight="0" pc:ScrollBarAssistant.VerticalScrollBarWidth="0"
                          ItemsSource="{Binding ThemeBrushs}"
                          ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                          ScrollViewer.VerticalScrollBarVisibility="Disabled"
                          SelectedIndex="{Binding SelectedThemeIndex}">
                    <behavior:Interaction.Triggers>
                        <behavior:EventTrigger EventName="SelectionChanged">
                            <behavior:InvokeCommandAction Command="{Binding SwitchAppThemeCommand}" />
                        </behavior:EventTrigger>
                    </behavior:Interaction.Triggers>
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="StartStoryboard">
                                                <DoubleAnimation Storyboard.TargetName="rec"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                 To="1.1" Duration="0:0:0.25" />
                                                <DoubleAnimation Storyboard.TargetName="rec"
                                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                                                 To="1.1" Duration="0:0:0.25" />
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <pc:Badge Margin="10,10,0,10" Direction="RightBottom" IsShowBadge="{TemplateBinding IsSelected}">
                                            <pc:Badge.Element>
                                                <Border Width="16" Height="16"
                                                        Background="Red" CornerRadius="8">
                                                    <Path Width="12" Height="12"
                                                          Data="{StaticResource CheckGeometry}"
                                                          Fill="White"
                                                          Stretch="Uniform" />
                                                </Border>
                                            </pc:Badge.Element>
                                            <Rectangle x:Name="rec"
                                                       Width="40" Height="40"
                                                       Fill="{Binding Brush}"
                                                       RenderTransformOrigin="0.5,0.5">
                                                <Rectangle.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                    </TransformGroup>
                                                </Rectangle.RenderTransform>
                                            </Rectangle>
                                        </pc:Badge>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource StartStoryboard}" />
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <RemoveStoryboard BeginStoryboardName="BeginStoryboard" />
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListView.ItemContainerStyle>
                </ListView>
            </Border>
        </pc:ExtendPopup>
    </Grid>

</pc:SideBarWindow>
