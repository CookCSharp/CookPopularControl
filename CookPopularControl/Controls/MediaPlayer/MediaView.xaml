<UserControl x:Class="CookPopularControl.Controls.MediaPlayer.MediaView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:player="clr-namespace:CookPopularControl.Controls.MediaPlayer"
             xmlns:commonConverters="clr-namespace:CookPopularControl.Communal.Converters"
             xmlns:toolConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters"
             xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
             xmlns:simpleGrid="clr-namespace:CookPopularControl.Controls.Panels"
             xmlns:button="clr-namespace:CookPopularControl.Controls.Button"
             mc:Ignorable="d" x:Name="userMedia"
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid x:Name="ParentGrid" Cursor="Arrow" Background="Transparent" MouseLeave="ParentGrid_MouseLeave" MouseMove="ParentGrid_MouseMove">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="80"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0">
            <MediaElement x:Name="mediaElement" Volume="{Binding ElementName=volumeSlider,Path=Value}" 
                          LoadedBehavior="Manual"
                          Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=player:MediaPlayer},Path=CurrentUri}"
                          MediaOpened="mediaElement_MediaOpened" MediaEnded="mediaElement_MediaEnded" MediaFailed="mediaElement_MediaFailed"/>
            <!--<Border.Background>
                <VisualBrush TileMode="None" Viewport="0,0,2,2" Viewbox="0,0,10,10" 
                             AlignmentX="Center" AlignmentY="Center" Stretch="Uniform"
                             ViewboxUnits="RelativeToBoundingBox" ViewportUnits="RelativeToBoundingBox">
                    <VisualBrush.Visual>
                        <Border Background="#77FFFFFF">
                            <TextBlock Text="厨子播放器" FontFamily="{StaticResource RobotoFonts}" FontWeight="DemiBold"/>
                        </Border>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Border.Background>-->
        </Border>
        <Grid Grid.Row="1" x:Name="controlGrid" Background="#33FFFFFF" Visibility="{Binding IsControlOpen,Converter={toolConverters:BooleanToVisibilityConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition />
            </Grid.RowDefinitions>
            <Slider Grid.Row="0" x:Name="playSlider" Width="{Binding TemplatedParent}" Cursor="Hand"
                    Foreground="{DynamicResource PrimaryColorTheme}"
                    attached:ThumbAttached.ThumbWidth="13" attached:ThumbAttached.ThumbHeight="13"
                    Thumb.DragStarted="playSlider_DragStarted" Thumb.DragCompleted="playSlider_DragCompleted" 
                    PreviewMouseLeftButtonDown="playSlider_PreviewMouseLeftButtonDown" PreviewMouseLeftButtonUp="playSlider_PreviewMouseLeftButtonUp"/>
            <simpleGrid:SimpleGrid Grid.Row="1">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="10,0">
                    <Button x:Name="last" Click="Last_Click" ToolTip="上一集" 
                            Foreground="{DynamicResource PrimaryColorTheme}"
                            Style="{DynamicResource ButtonTransparentIconStyle}"
                            attached:FrameworkElementBaseAttached.IconGeometry="{StaticResource LastEpisodeGeometry}"/>
                    <ToggleButton x:Name="play_pause" Click="PlayPause_Control" IsChecked="False" ToolTip="播放"
                                  Style="{DynamicResource ToggleButtonDoubbleTransparentIconStyle}"
                                  button:ToggleButtonAssistant.UnCheckedGeometry="{StaticResource PlayGeometry}"
                                  button:ToggleButtonAssistant.OnCheckedGeometry="{StaticResource PauseGeometry}"/>
                    <Button x:Name="stop" Click="Restart_Click" ToolTip="重放"
                            Foreground="{DynamicResource PrimaryColorTheme}"
                            Style="{DynamicResource ButtonTransparentIconStyle}"
                            attached:FrameworkElementBaseAttached.IconGeometry="{StaticResource RestartGeometry}"/>
                    <Button x:Name="next" Click="Next_Click" ToolTip="下一集"
                            Foreground="{DynamicResource PrimaryColorTheme}"
                            Style="{DynamicResource ButtonTransparentIconStyle}"
                            attached:FrameworkElementBaseAttached.IconGeometry="{StaticResource NextEpisodeGeometry}"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                    <TextBlock x:Name="currentTime" Text="{Binding ElementName=playSlider,Path=Value,Converter={commonConverters:DoubleToTimeSpan},Mode=OneWay}" Foreground="{DynamicResource PrimaryColorTheme}" FontSize="16"/>
                    <TextBlock Text="/" Foreground="{DynamicResource PrimaryColorTheme}" FontSize="16" Margin="5,0,5,0"/>
                    <TextBlock x:Name="totalTime" Text="{Binding ElementName=playSlider,Path=Maximum,Converter={commonConverters:DoubleToTimeSpan},Mode=OneWay}" Foreground="{DynamicResource PrimaryColorTheme}" FontSize="16"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0">
                    <ToggleButton x:Name="volume" Width="30" ToolTip="音量"
                                  Foreground="{DynamicResource PrimaryColorTheme}" 
                                  Style="{DynamicResource ToggleButtonDoubbleTransparentIconStyle}"
                                  MouseEnter="volume_MouseEnter" MouseLeave="volume_MouseLeave" Click="Volume_Click"
                                  button:ToggleButtonAssistant.UnCheckedGeometry="{StaticResource VolumeMediumGeometry}"
                                  button:ToggleButtonAssistant.OnCheckedGeometry="{StaticResource VolumeOffGeometry}"/>
                    <TextBlock x:Name="playSpeed" Text="{Binding ElementName=speedSlider,Path=SelectedItem,Converter={commonConverters:StringToPlaySpeedConverter}}"
                               Foreground="{DynamicResource PrimaryColorTheme}"
                               Width="40" TextAlignment="Center" VerticalAlignment="Center" Margin="10,0"
                               MouseEnter="playSpeed_MouseEnter" MouseLeave="playSpeed_MouseLeave" ToolTip="倍速"/>
                    <ToggleButton x:Name="fullScreent" Click="FullScreent_Click" ToolTip="全屏"
                                  Foreground="{DynamicResource PrimaryColorTheme}"
                                  Style="{DynamicResource ToggleButtonDoubbleTransparentIconStyle}"
                                  attached:FrameworkElementBaseAttached.IconWidth="22"
                                  attached:FrameworkElementBaseAttached.IconHeight="22"
                                  button:ToggleButtonAssistant.UnCheckedGeometry="{StaticResource FullScreenGeometry}"
                                  button:ToggleButtonAssistant.OnCheckedGeometry="{StaticResource ExitFullScreenGeometry}"/>

                </StackPanel>
            </simpleGrid:SimpleGrid>
            <Popup IsOpen="{Binding IsVolumeOpen}" StaysOpen="True" HorizontalOffset="-1" VerticalOffset="-5" AllowsTransparency="True" 
                   Placement="Top" PlacementTarget="{Binding ElementName=volume}" PopupAnimation="Slide">
                <Grid x:Name="volume_grid" Width="30" Background="#909090" MouseLeave="VolumePopup_MouseLeave">
                    <StackPanel>
                        <TextBlock x:Name="volume_value" Text="50" TextAlignment="Center" FontSize="14" Foreground="White" Margin="0,5"/>
                        <Slider x:Name="volumeSlider" Minimum="0" Maximum="1" Value="0.5" SmallChange="1" Height="200" 
                                Orientation="Vertical" Foreground="#FFFFFF" ValueChanged="VolumeSlider_ValueChanged"
                                attached:ThumbAttached.ThumbWidth="13" attached:ThumbAttached.ThumbHeight="13"/>
                    </StackPanel>
                </Grid>
            </Popup>
            <Popup IsOpen="{Binding IsSpeedOpen}" StaysOpen="True" VerticalOffset="-5" AllowsTransparency="True" 
                   PopupAnimation="Slide" Placement="Top" PlacementTarget="{Binding ElementName=playSpeed}">
                <Grid x:Name="speed_grid" Width="40" Height="210" Background="#909090" MouseLeave="SpeedPopup_MouseLeave">
                    <ListBox x:Name="speedSlider" ItemsSource="{Binding PlaySpeeds}"
                             HorizontalContentAlignment="Center" IsSynchronizedWithCurrentItem="True" 
                             SelectionChanged="speedSelection_SelectionChanged"
                             SelectedIndex="2" BorderThickness="0">
                        <ListBox.ItemContainerStyle>
                            <Style TargetType="{x:Type ListBoxItem}">
                                <Setter Property="Foreground" Value="#FFFFFF" />
                                <Setter Property="Height" Value="30" />
                                <Setter Property="BorderThickness" Value="0"></Setter>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </Grid>
            </Popup>
        </Grid>
        <Border Visibility="{Binding ElementName=play_pause,Path=IsChecked,Converter={toolConverters:BooleanToVisibilityReConverter}}">
            <simpleGrid:SimpleGrid Cursor="Arrow">
                <Image Source="/CookPopularControl;component/Resources/Images/MediaPlayerBackground.png" Stretch="Uniform"/>
                <ToggleButton Width="60" Height="60" Style="{DynamicResource ToggleButtonTransparentIconStyle}"
                              Click="PlayPause_Control" IsChecked="{Binding ElementName=play_pause,Path=IsChecked,Mode=TwoWay}"
                              attached:FrameworkElementBaseAttached.IconWidth="60"
                              attached:FrameworkElementBaseAttached.IconHeight="60"
                              attached:ButtonBaseAttached.IsShowRipple="False"
                              attached:FrameworkElementBaseAttached.IconGeometry="{DynamicResource PlayGeometry}"/>
            </simpleGrid:SimpleGrid>
        </Border>
    </Grid>
    
</UserControl>
