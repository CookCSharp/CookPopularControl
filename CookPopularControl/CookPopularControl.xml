<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CookPopularControl</name>
    </assembly>
    <members>
        <member name="T:CookPopularControl.Communal.ButtonBaseAttached">
            <summary>
            提供<see cref="T:System.Windows.Controls.Primitives.ButtonBase"/>的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.ButtonBaseAttached.IsShowRippleProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.ButtonBaseAttached.IsShowRippleProperty"/>是否显示按钮点击的波纹效果
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.DataGridViewAttached">
            <summary>
            提供<see cref="T:System.Windows.Controls.DataGrid"/>与<see cref="T:System.Windows.Controls.GridView"/>的附加属性基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.DataGridViewAttached.ColumnMinWidthProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.DataGridViewAttached.ColumnMinWidthProperty"/>标识列项最小宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.DataGridViewAttached.ColumnHeaderHeightProperty">
            <summary>
            标识ColumnHeader的高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.DataGridViewAttached.ColumnHeaderPaddingProperty">
            <summary>
            标识ColumnHeader的内容的内边距
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.FrameworkElementBaseAttached">
            <summary>
            提供WPF控件附加属性的基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.FrameworkElementBaseAttached.IconMarginProperty">
            <summary>
            提供<see cref="F:CookPopularControl.Communal.FrameworkElementBaseAttached.IconMarginProperty"/>的附加属性
            </summary>
            <remarks>Icon与Content的间距</remarks>
        </member>
        <member name="F:CookPopularControl.Communal.FrameworkElementBaseAttached.StayDecimalPlaceProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.FrameworkElementBaseAttached.StayDecimalPlaceProperty"/>标识保留几位小数
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.SelectorAttached">
            <summary>
            提供具有Items子项控件的附加属性基类
            </summary>
            <remarks>适用于ListBox, ListView，ComboBox</remarks>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemsListBackgroundProperty">
            <summary>
            标识<see cref="F:CookPopularControl.Communal.SelectorAttached.ItemsListBackgroundProperty"/>提供下拉列表的背景色附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemMouseOverBackgroundProperty">
            <summary>
            标识<see cref="F:CookPopularControl.Communal.SelectorAttached.ItemMouseOverBackgroundProperty"/>提供子项的背景色附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemSelectedBackgroundProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.ItemSelectedBackgroundProperty"/>标识子项选中的后背景色附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.SelectorItemTypeProperty">
            <summary>
            标识<see cref="F:CookPopularControl.Communal.SelectorAttached.SelectorItemTypeProperty"/>子项类型的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemWidthProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.ItemWidthProperty"/>标识子项的宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemHeightProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.ItemHeightProperty"/>标识子项的高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemControlWidthProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.ItemControlWidthProperty"/>标识Selector子项控件的宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.ItemControlHeightProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.ItemControlHeightProperty"/>标识Selector子项控件的高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.IsItemCheckedEvent">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.IsItemCheckedEvent"/>标识子项ItemCheck是否选中的事件
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.IsButtonDeleteItemProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.IsButtonDeleteItemProperty"/>用于触发Button的Click事件
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.IsItemDeleteEvent">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.IsItemDeleteEvent"/>标识是否删除该项的事件
            </summary>
        </member>
        <member name="M:CookPopularControl.Communal.SelectorAttached.GetIconFill(System.Windows.DependencyObject)">
            当使用Icon时，在设置的ItemsSource每个子项中必须含有属性GeometryData,属于<see cref="T:System.Windows.Media.Geometry"/>
            因为ComboBoxItem.Template中Path的绑定方式为Content.GeometryData
            *
        </member>
        <member name="F:CookPopularControl.Communal.SelectorAttached.IsPreviewImageProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.SelectorAttached.IsPreviewImageProperty"/>表示是否可以预览图片
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.SelectorItem">
            <summary>
            当ListBoxItem的子项显示Icon或Image或Gif时必须使用该类，方可加入ItemsSource
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.TextElementAttached">
            <summary>
            <see cref="T:CookPopularControl.Communal.TextElementAttached"/>表示可输入文本控件的附加属性基类
            </summary>
            <remarks>包括TextBox、TextBlock、RichTextBox、PasswordBox、ComboBox等</remarks>
        </member>
        <member name="F:CookPopularControl.Communal.TextElementAttached.PlaceHolderProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.TextElementAttached.PlaceHolderProperty"/>提供占位符内容
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.TextElementAttached.PlaceHolderBrushProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.TextElementAttached.PlaceHolderBrushProperty"/>占位符内容文本颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.TextElementAttached.IsAddClearButtonProperty">
            <summary>
            <see cref="F:CookPopularControl.Communal.TextElementAttached.IsAddClearButtonProperty"/>表示是否增加清除文本内容按钮
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.ThumbAttached">
            <summary>
            提供<see cref="T:System.Windows.Controls.Primitives.Thumb"/>的附加属性基类
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.ControlBorderBehavior">
            <summary>
            提供控件边框的行为动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.PasswordBoxBehavior">
            <summary>
            提供<see cref="T:System.Windows.Controls.PasswordBox"/>输入密码时的光标行为
            </summary>
        </member>
        <member name="M:CookPopularControl.Communal.PasswordBoxBehavior.SetCursorPosition(System.Windows.Controls.PasswordBox,System.Int32,System.Int32)">
            <summary>
            设置光标焦点
            </summary>
            <param name="pwd">控件</param>
            <param name="start">起始位置</param>
            <param name="length">长度</param>
        </member>
        <member name="T:CookPopularControl.Communal.ControlCommands">
            <summary>
            统一所有控件中所用到的命令(方便管理)
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.ControlCommands.SortByCategoryCommand">
            <summary>
            按照类别排序
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.ControlCommands.SortByNameCommand">
            <summary>
            按照名称排序
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.ShowDefaultCloseButtonConverter">
            <summary>
            <see cref="T:System.Windows.Controls.TabControl"/>标题面板大小转换器
            </summary>
        </member>
        <member name="M:CookPopularControl.Communal.ShowDefaultCloseButtonConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            [0] is owning tabcontrol ShowDefaultCloseButton value.
            [1] is owning tabcontrol FixedHeaderCount value.
            [2] is item LogicalIndex
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Communal.TabControlHeaderSizeConverter">
            <summary>
            <see cref="T:System.Windows.Controls.TabControl"/>标题面板大小转换器
            </summary>
        </member>
        <member name="M:CookPopularControl.Communal.TabControlHeaderSizeConverter.Convert(System.Object[],System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            第一个值通常是父控件可用的大小 
            第二个值来自于<see cref="F:CookPopularControl.Controls.Dragables.DragableItemsControl.ItemsPresenterWidthProperty"/>
            额外的值应该是相邻子项大小(宽度或高度)，这将影响(减少)可用大小
            </summary>
            <param name="values"></param>
            <param name="targetType"></param>
            <param name="parameter"></param>
            <param name="culture"></param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Communal.TextFieldClearButtonVisibilityConverter">
            <summary>
            文本清除按钮
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.RoutedPropertySingleEventArgs`1">
            <summary>
            表示单个项变化的路由信息和事件数据
            </summary>
            <typeparam name="TSingle"></typeparam>
        </member>
        <member name="M:CookPopularControl.Communal.Data.RoutedPropertySingleEventArgs`1.InvokeEventHandler(System.Delegate,System.Object)">
            <summary>
            This method is used to perform the proper type casting in order to
            call the type-safe RoutedPropertySingleEventHandler delegate for the IsCheckedChangedEvent event.
            </summary>
            <param name="genericHandler">The handler to invoke.</param>
            <param name="genericTarget">The current object along the event's route.</param>
            <returns>Nothing.</returns>
        </member>
        <member name="T:CookPopularControl.Communal.Data.AlertorState">
            <summary>
            警报器状态
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.BadgeDirection">
            <summary>
            <see cref="T:CookPopularControl.Controls.Badge"/>位置
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.ControlBorderAnimationType">
            <summary>
            表示<see cref="P:CookPopularControl.Communal.ControlBorderBehavior.AnimationType"/>枚举类型
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.ControlBorderAnimationType.Thickness">
            <summary>
            同时变化
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.ControlBorderAnimationType.OrderThickness">
            <summary>
            下,右,上,左有序变化
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.ControlBorderAnimationType.Path">
            <summary>
            路径
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.EmptyHeaderSizingHint">
            <summary>
            Provide a hint for how the header should size itself if there are no tabs left (and a Window is still open).
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.EmptyHeaderSizingHint.Collapse">
            <summary>
            The header size collapses to zero along the correct axis.
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.EmptyHeaderSizingHint.PreviousTab">
            <summary>
            The header size remains that of the last tab prior to the tab header becoming empty.
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.DotLoadingTrack">
            <summary>
            加载缓动画类型
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.DotLoadingTrack.Circle">
            <summary>
            圆
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.DotLoadingTrack.Line">
            <summary>
            直线
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.DotLoadingTrack.Pendulum">
            <summary>
            钟摆
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.PopupAnimationX">
            <summary>
            通知消息的弹出动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.PopupPosition">
            <summary>
            表示弹出控件的弹出位置；
            由两部分组成，水平+垂直，总共9个弹出方向
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.SelectorItemType">
            <summary>
            Selector子项类型
            </summary>
            <remarks>都是基于文本</remarks>
        </member>
        <member name="F:CookPopularControl.Communal.Data.SelectorItemType.Default">
            <summary>
            只有文本
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.SelectorItemType.CheckBox">
            <summary>
            包含CheckBox
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.SelectorItemType.Icon">
            <summary>
            包含IconGeometry
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.SizeGrip">
            <summary>
            标识<see cref="!:DragableControls"/>的方位控制
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.TabEmptiedResponse.CloseWindowOrLayoutBranch">
            <summary>
            Allow the Window to be closed automatically.
            </summary>
        </member>
        <member name="F:CookPopularControl.Communal.Data.TabEmptiedResponse.DoNothing">
            <summary>
            The window will not be closed by the <see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>, probably meaning the implementor will close the window manually
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.LocationReportException">
            <summary>
            提供<see cref="T:CookPopularControl.Controls.Dragables.LocationReport"/>关于<see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.Data.NotifyMessageInfo">
            <summary>
            通知消息附带的信息类
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.MessageIcon">
            <summary>
            消息图标
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.MessageIconBrush">
            <summary>
            消息图标颜色
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.PopupPosition">
            <summary>
            消息通知的弹出位置
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.PopupAnimation">
            <summary>
            消息在打开时如何显示动画
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.IsShowCloseButton">
            <summary>
            是否显示关闭按钮
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.IsAutoClose">
            <summary>
            消息是否自动关闭
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.Duration">
            <summary>
            消息持续时间
            </summary>
            <remarks>单位:s</remarks>
        </member>
        <member name="P:CookPopularControl.Communal.Data.NotifyMessageInfo.ActionBeforeClose">
            <summary>
            消息关闭前触发的方法
            </summary>
        </member>
        <member name="T:CookPopularControl.Communal.ViewModel.HeaderedItemViewModel">
            <summary>
            Helper class to create view models, particularly for tool/MDI windows.
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.ViewModel.MediaViewModel.IsVolumeOpen">
            <summary>                                            
            VolumePopup是否打开                                  
            </summary>                                           
        </member>
        <member name="P:CookPopularControl.Communal.ViewModel.MediaViewModel.IsSpeedOpen">
            <summary>
            SpeedPopup是否打开
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.ViewModel.MediaViewModel.IsControlOpen">
            <summary>
            ControlPopup是否打开
            </summary>
        </member>
        <member name="P:CookPopularControl.Communal.ViewModel.MediaViewModel.PlaySpeeds">
            <summary>
            播放速度列表
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.AdornerBase">
            <summary>
            将装饰器绑定到元素的基类
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.AnimationPath">
            <summary>
            提供<see cref="T:System.Windows.Media.Geometry"/>的路径动画控件
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationPath._storyboard">
            <summary>
            动画面板
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationPath._pathLength">
            <summary>
            动画路径长度
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPath.PathLength">
            <summary>
            Geometry路径长度
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPath.Duration">
            <summary>
            动画持续时间
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPath.RepeatBehavior">
            <summary>
            指定动画的重复行为
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPath.IsPlay">
            <summary>
            动画是否播放
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.AnimationTilePanel">
            <summary>
            标识类似瓦片的动画面板
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationTilePanel.ItemWidthProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.AnimationTilePanel.ItemWidth"/>的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationTilePanel.ItemHeightProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.AnimationTilePanel.ItemHeight"/>的附加属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BlockBarBase">
            <summary>
            表示块状的基类
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.BlockBarBase.BlockCount">
            <summary>
            块状数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BlockBarBase.BlockCountProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.BlockBarBase.BlockCount"/>依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.BlockBarBase.Value">
            <summary>
            当前值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BlockBarBase.ValueProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.BlockBarBase.Value"/>依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.BlockBarBase.BlockMargin">
            <summary>
            相邻块状之间的间距
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BlockBarBase.BlockMarginProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.BlockBarBase.BlockMargin"/>依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BlockBarCircle">
            <summary>
            表示圆形块
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BlockBarImage">
            <summary>
            图片块
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BlockBarImage.ImageSourceProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.BlockBarImage.ImageSource"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BlockBarRect">
            <summary>
            表示矩形块状
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BorderAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.Border"/>附加属性类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BorderAssistant.IsCircularProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.BorderAssistant.IsCircularProperty"/>标识是否满圆角
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ButtonAssist">
            <summary>
            提供<see cref="T:System.Windows.Controls.Button"/>的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ButtonAssist.GifStreamProperty">
            <summary>
            提供<see cref="T:System.IO.Stream"/>的Gif图像
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ButtonAssist.ProgressBarStyleProperty">
            <summary>
            <see cref="T:System.Windows.Controls.ProgressBar"/>的样式
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ButtonAssist.ProgressBarBrushProperty">
            <summary>
            <see cref="T:System.Windows.Controls.ProgressBar"/>的Value位置的前置背景色
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.RadioButtonAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.RadioButton"/>的附加属性基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RadioButtonAssistant.CircleDiameterProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.RadioButtonAssistant.CircleDiameterProperty"/>标识点的半径大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RadioButtonAssistant.CheckedBrushProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.RadioButtonAssistant.CheckedBrushProperty"/>标识选中的填充背景色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RadioButtonAssistant.IsFillFullyProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.RadioButtonAssistant.IsFillFullyProperty"/>标识是否全部填充
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RadioButtonAssistant.HeaderProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.RadioButtonAssistant.HeaderProperty"/>标识可填充的任意元素
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.SwitchControl">
            <summary>
            表示开关控件
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.SwitchControl.SwitchContent">
            <summary>
            文本
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.SwitchControl.SwitchOpenBackground">
            <summary>
            打开的背景颜色
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.SwitchControl.SwicthCloseBackground">
            <summary>
            关闭的背景颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ToggleButtonAssistant.UnCheckedGeometryProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ToggleButtonAssistant.OnCheckedElementProperty"/>表示未选中时的图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ToggleButtonAssistant.OnCheckedGeometryProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ToggleButtonAssistant.OnCheckedGeometryProperty"/>表示选中时的图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ToggleButtonAssistant.OnCheckedElementProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ToggleButtonAssistant.OnCheckedElementProperty"/>表示翻转的Content
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ToggleButtonAssistant.IsAddCheckedAnimationProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ToggleButtonAssistant.OnCheckedElementProperty"/>表示点击时是否增加动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.CarouselView">
            <summary>
            旋转视图容器
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CarouselView.ImageItemWidth">
            <summary>
            ImageItem的宽度
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CarouselView.ImageItemHeight">
            <summary>
            ImageItem的长度
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ImageAnimation">
            <summary>
            ImageAnimation.xaml 的交互逻辑
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.ImageAnimation.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.NullFillType">
            <summary>
            <![CDATA[CheckBox.IsChecked=Null]]>时填充类型
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NullFillType.Rectangle">
            <summary>
            ■
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NullFillType.Line">
            <summary>
            ➖
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.CheckBoxAssistant">
            <summary>
            <see cref="T:System.Windows.Controls.CheckBox"/>的附加基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CheckBoxAssistant.BoxSizeProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.CheckBoxAssistant.BoxSizeProperty"/>提供选中框大小的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CheckBoxAssistant.FillBrushProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.CheckBoxAssistant.FillBrushProperty"/>提供填充颜色的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CheckBoxAssistant.NullFillTypeProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.CheckBoxAssistant.NullFillTypeProperty"/>提供<![CDATA[CheckBox.IsChecked=Null]]>时填充类型(■，✔,➖)的附加属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ColorPicker">
            <summary>
            颜色选择器
            </summary>
            <remarks>参考<see cref="T:System.Windows.Forms.ColorDialog"/></remarks>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ColorPanelWidth">
            <summary>
                颜色选取面板宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ColorPanelHeight">
            <summary>
                颜色选取面板高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker._isOnDragging">
            <summary>
            是否在拖动小球
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker._isNeedUpdatePicker">
            <summary>
            是否需要更新小球位置
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker._pickerCurrentPosition">
            <summary>
            颜色选择面板<see cref="F:CookPopularControl.Controls.ColorPicker.ElementColorPanel"/>中颜色选择器<see cref="F:CookPopularControl.Controls.ColorPicker.ElementBorderPicker"/>的坐标位置
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.SelectedBrush">
            <summary>
            选中的颜色(包含透明度)
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.SelectedBrushProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.SelectedBrush"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.SelectedBrushWithoutOpacity">
            <summary>
            选中色(不包含透明度)
            </summary>
            <remarks>透明度100%</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.SelectedBrushWithoutOpacityProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.SelectedBrushWithoutOpacity"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.ColorPanelBackground">
            <summary>
            颜色选择器面板的主背景色
            </summary>
            <remarks><see cref="F:CookPopularControl.Controls.ColorPicker.ElementColorPanel"/></remarks>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ColorPanelBackgroundProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.ColorPanelBackground"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.HexColor">
            <summary>
            十六进制颜色表示
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.HexColorProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.HexColor"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.ChannelA">
            <summary>
            透明度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ChannelAProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.ChannelA"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.ChannelR">
            <summary>
            红色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ChannelRProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.ChannelR"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.ChannelG">
            <summary>
            绿色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ChannelGProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.ChannelG"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ColorPicker.ChannelB">
            <summary>
            蓝色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.ChannelBProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.ColorPicker.ChannelB"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.ColorPicker.UpdateColorWhenDrag(System.Windows.Point)">
            <summary>
            拖动时更新颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ColorPicker.SelectedBrushChangedEvent">
            <summary>
            <see cref="!:SelectedColorChangedEvent"/>标识颜色选择事件
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.HslColor">
            <summary>
            使用HSL(Hue, Saturation, Lightness )来描绘颜色而不是RGB (Red, Green, Blue)
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.HslColor.Hue">
            <summary>
            色度[0°,360°)
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.HslColor.Saturation">
            <summary>
            饱和度[0,1]
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.HslColor.Lightness">
            <summary>
            亮度[0,1]
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.HslColor.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Class constructor.
            </summary>
            <param name="hue"></param>
            <param name="saturation"></param>
            <param name="lightness"></param>
        </member>
        <member name="M:CookPopularControl.Controls.HslColor.RGBToHSL(System.Nullable{System.Windows.Media.Color})">
            <summary>
            将RGB转为HSL
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.HslColor.HSLToRGB(CookPopularControl.Controls.HslColor)">
            <summary>
            将HSL转为RGB
            </summary>
            <param name="hslColor"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.HslColor.GetPixelColor">
            <summary>
            获取鼠标点所在位置的颜色
            </summary>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.ComboBoxAssistant">
            <summary>
            表示<see cref="T:System.Windows.Controls.ComboBox"/>的附加属性帮助类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ComboBoxAssistant.DropDownButtonFillProperty">
            <summary>
            标识<see cref="F:CookPopularControl.Controls.ComboBoxAssistant.DropDownButtonFillProperty"/>提供下拉按钮的背景色附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ComboBoxAssistant.IsClickDownProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ComboBoxAssistant.IsClickDownProperty"/>标识点击<see cref="T:System.Windows.Controls.ComboBox"/>显示下拉列表
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ComboBoxAssistant.ComboBoxPopupListShadowProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ComboBoxAssistant.ComboBoxPopupListShadowProperty"/>标识下拉列表阴影效果 
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ComboBoxAssistant.IsShowDropDownButtonProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ComboBoxAssistant.IsShowDropDownButtonProperty"/>标识是否显示DropDownButton 
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.CalendarAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.Calendar"/>的附加属性基类
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Clock">
            <summary>
            时钟
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Clock.CurrentTime">
            <summary>
            当前时间
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Clock.CurrentTimeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Clock.CurrentTime"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Clock.InitClockDial">
            <summary>
            初始化钟盘数据
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Clock.GetRadian(System.Windows.Point)">
            <summary>
            由鼠标点得出指针转到哪个象限(以中心为原点，按照数学中ⅠⅡⅢⅣ)来确定位置，从而得到旋转弧度
            </summary>
            <param name="point"></param>
            <returns>旋转弧度</returns>
        </member>
        <member name="M:CookPopularControl.Controls.Clock.CalculateCurrentTime">
            <summary>
            计算调整后的时间
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ClockAssistant">
            <summary>
            时钟辅助类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ClockAssistant.IsAddConfirmButtonProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ClockAssistant.IsAddConfirmButtonProperty"/>标识是否增加确定按钮
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.TimePicker">
            <summary>
            时间选择器
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TimePicker.CurrentTimeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.TimePicker.CurrentTime"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.Branch.GetFirstProportion">
            <summary>
            Gets the proportional size of the first item, between 0 and 1, where 1 would represent the entire size of the branch.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.AccessorExtension.Query(CookPopularControl.Controls.Layout)">
            <summary>
            Begin a query of layout content, returning an accessor for examining the children.
            </summary>
            <param name="layout"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.AccessorExtension.Visit``1(CookPopularControl.Controls.Dragables.LayoutAccessor,``0,System.Action{``0,CookPopularControl.Controls.Dragables.BranchAccessor},System.Action{``0,CookPopularControl.Controls.Dragables.DragableTabControl},System.Action{``0,System.Object})">
            <summary>
            Helper method for <see cref="M:CookPopularControl.Controls.Dragables.LayoutAccessor.Visit(System.Action{CookPopularControl.Controls.Dragables.BranchAccessor},System.Action{CookPopularControl.Controls.Dragables.DragableTabControl},System.Action{System.Object})"/> which allows a context to be passed through.
            </summary>
            <typeparam name="TContext"></typeparam>
            <param name="layoutAccessor"></param>
            <param name="context"></param>
            <param name="branchVisitor"></param>
            <param name="tabablzControlVisitor"></param>
            <param name="contentVisitor"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.AccessorExtension.Visit``1(CookPopularControl.Controls.Dragables.BranchAccessor,``0,CookPopularControl.Communal.Data.BranchItem,System.Action{``0,CookPopularControl.Controls.Dragables.BranchAccessor},System.Action{``0,CookPopularControl.Controls.Dragables.DragableTabControl},System.Action{``0,System.Object})">
            <summary>
            Helper method for <see cref="M:CookPopularControl.Controls.Dragables.BranchAccessor.Visit(CookPopularControl.Communal.Data.BranchItem,System.Action{CookPopularControl.Controls.Dragables.BranchAccessor},System.Action{CookPopularControl.Controls.Dragables.DragableTabControl},System.Action{System.Object})"/> which allows a context to be passed through.
            </summary>
            <typeparam name="TContext"></typeparam>
            <param name="branchAccessor"></param>
            <param name="context"></param>
            <param name="childItem"></param>
            <param name="branchVisitor"></param>
            <param name="tabablzControlVisitor"></param>
            <param name="contentVisitor"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.BranchAccessor.Visit(CookPopularControl.Communal.Data.BranchItem,System.Action{CookPopularControl.Controls.Dragables.BranchAccessor},System.Action{CookPopularControl.Controls.Dragables.DragableTabControl},System.Action{System.Object})">
            <summary>
            Visits the content of the first or second side of a branch, according to its content type.  No more than one of the provided <see cref="T:System.Action"/>
            callbacks will be called.  
            </summary>
            <param name="childItem"></param>
            <param name="childBranchVisitor"></param>
            <param name="childTabablzControlVisitor"></param>
            <param name="childContentVisitor"></param>
            <returns></returns>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.BranchResult.Branch">
            <summary>
            The new branch.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.BranchResult.TabablzControl">
            <summary>
            The new tab control.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.DefaultInterLayoutClient">
            <summary>
            Provides a simple implementation of <see cref="T:CookPopularControl.Controls.Dragables.IInterLayoutClient"/>, but only really useful if 
            <see cref="T:System.Windows.Controls.TabItem"/> instances are specified in XAML.  If you are binding via ItemsSource then
            you most likely want to create your own implementation of <see cref="T:CookPopularControl.Controls.Dragables.IInterLayoutClient"/>.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.LayoutAccessor">
            <summary>
            Provides information about the <see cref="P:CookPopularControl.Controls.Dragables.LayoutAccessor.Layout"/> instance.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.LayoutAccessor.BranchAccessor">
            <summary>
            <see cref="P:CookPopularControl.Controls.Dragables.LayoutAccessor.BranchAccessor"/> and <see cref="!:TabablzControl"/> are mutually exclusive, according to whether the layout has been split, or just contains a tab control.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.LayoutAccessor.DragableTabControl">
            <summary>
            <see cref="P:CookPopularControl.Controls.Dragables.LayoutAccessor.BranchAccessor"/> and <see cref="!:TabablzControl"/> are mutually exclusive, according to whether the layout has been split, or just contains a tab control.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.LayoutAccessor.Visit(System.Action{CookPopularControl.Controls.Dragables.BranchAccessor},System.Action{CookPopularControl.Controls.Dragables.DragableTabControl},System.Action{System.Object})">
            <summary>
            Visits the content of the layout, according to its content type.  No more than one of the provided <see cref="T:System.Action"/>
            callbacks will be called.  
            </summary>        
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.LayoutAccessor.TabablzControls">
            <summary>
            Gets all the Tabablz controls in a Layout, regardless of location.
            </summary>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.LocationReport">
            <summary>
            Provides information about where a tab control is withing a layout structure.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.LocationReport.ParentBranch">
            <summary>
            Gets the parent branch if this is a leaf. If the <see cref="P:CookPopularControl.Controls.Dragables.LocationReport.TabablzControl"/> is directly under the <see cref="P:CookPopularControl.Controls.Dragables.LocationReport.RootLayout"/> will be <c>null</c>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.LocationReport.IsLeaf">
            <summary>
            Idicates if this is a leaf in a branch. <c>True</c> if <see cref="P:CookPopularControl.Controls.Dragables.LocationReport.ParentBranch"/> is not null.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.PositionMonitor">
            <summary>
            Consumers can provide a position monitor to receive updates regarding the location of an item.    
            </summary>
            <remarks>
            A <see cref="T:CookPopularControl.Controls.Dragables.PositionMonitor"/> can be used to listen to  changes 
            instead of routed events, which can be easier in a MVVM scenario.
            </remarks>
        </member>
        <member name="E:CookPopularControl.Controls.Dragables.PositionMonitor.LocationChanged">
            <summary>
            Raised when the X,Y coordinate of a <see cref="!:DragablzItem"/> changes.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.StackPositionMonitor">
            <summary>
            A linear position monitor simplifies the montoring of the order of items, where they are laid out
            horizontally or vertically (typically via a <see cref="T:CookPopularControl.Controls.Dragables.StackOrganiser"/>.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.AddLocationHint">
            <summary>
            Specifies where an item should appear when added to tab control, as the headers order do not
            specifically correlate to the order of the the source items.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.AddLocationHint.First">
            <summary>
            Display item in the first position.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.AddLocationHint.Last">
            <summary>
            Display item in the first position.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.AddLocationHint.Prior">
            <summary>
            Display an item prior to the selected, or specified item.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.AddLocationHint.After">
            <summary>
            Display an item after the selected, or specified item.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableItem.ContentRotateTransformAngleProperty">
            <summary>
            Allows item content to be rotated (in suppported templates), typically for use in a vertical/side tab.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableItem.IsCustomThumbProperty">
            <summary>
            <see cref="T:CookPopularControl.Controls.Dragables.DragableItem" /> templates contain a thumb, which is used to drag the item around.
            For most scenarios this is fine, but by setting this flag to <value>true</value> you can define
            a custom thumb in your content, without having to override the template.  This can be useful if you
            have extra content; such as a custom button that you want the user to be able to interact with (as usually
            the default thumb will handle mouse interaction).
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.DragableItemsControl">
            <summary>
            Items control which typically uses a canvas and 
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableItemsControl.AddToSource(System.Object,CookPopularControl.Controls.Dragables.AddLocationHint)">
            <summary>
            Adds an item to the underlying source, displaying in a specific position in rendered control.
            </summary>
            <param name="item"></param>
            <param name="addLocationHint"></param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableItemsControl.AddToSource(System.Object,System.Object,CookPopularControl.Controls.Dragables.AddLocationHint)">
            <summary>
            Adds an item to the underlying source, displaying in a specific position in rendered control.
            </summary>
            <param name="item"></param>
            <param name="nearItem"></param>
            <param name="addLocationHint"></param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableItemsControl.MoveItem(CookPopularControl.Controls.Dragables.MoveItemRequest)">
            <summary>
            Move an item in the rendered layout.
            </summary>
            <param name="moveItemRequest"></param>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.DragableTabControl">
            <summary>
            扩展选项卡控件支持选项卡重新定位、拖放
            使用常用的WPF技术来跨选项卡持久化可视树
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.#ctor">
            <summary>
            Default constructor.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.GetLoadedInstances">
            <summary>
            Helper method which returns all the currently loaded instances.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.CloseItem(System.Object)">
            <summary>
            Helper method to close all tabs where the item is the tab's content (helpful with MVVM scenarios)
            </summary>
            <remarks>
            In MVVM scenarios where you don't want to bind the routed command to your ViewModel,
            with this helper method and embedding the DragableTabControl in a UserControl, you can keep
            the View-specific dependencies out of the ViewModel.
            </remarks>
            <param name="tabContentItem">An existing Tab item content (a ViewModel in MVVM scenarios) which is backing a tab control</param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.AddItem(System.Object,System.Object,CookPopularControl.Controls.Dragables.AddLocationHint)">
            <summary>
            Helper method to add an item next to an existing item.
            </summary>
            <remarks>
            Due to the organisable nature of the control, the order of items may not reflect the order in the source collection.  This method
            will add items to the source collection, managing their initial appearance on screen at the same time. 
            If you are using a <see cref="P:CookPopularControl.Controls.Dragables.InterTabController.InterTabClient"/> this will be used to add the item into the source collection.
            </remarks>
            <param name="item">New item to add.</param>
            <param name="nearItem">Existing object/tab item content which defines which tab control should be used to add the object.</param>
            <param name="addLocationHint">Location, relative to the <paramref name="nearItem"/> object</param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.SelectItem(System.Object)">
            <summary>
            Finds and selects an item.
            </summary>
            <param name="item"></param>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.ShowDefaultCloseButton">
            <summary>
            标识是否应显示默认关闭按钮  
            如果手动关闭可执行<see cref="F:CookPopularControl.Controls.Dragables.DragableTabControl.CloseItemCommand"/>命令
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.ShowDefaultAddButton">
            <summary>
            标识是否应该显示默认的添加按钮
            使用<see cref="F:CookPopularControl.Controls.Dragables.DragableTabControl.AddItemCommand"/>可以添加<see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.HeaderPrefixContent"/> or <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.HeaderSuffixContent"/>
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.IsHeaderPanelVisible">
            <summary>
            标识<see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>的标头是否可见,默认True
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.AddLocationHint">
            <summary>
            获取或设置在标题中添加子项位置
            </summary>
            <remarks>
            标题项的逻辑顺序可能与源项的内容不匹配，
            所以这个属性允许控制新项应该出现在哪里
            </remarks>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.FixedHeaderCount">
            <summary>
            Allows a the first adjacent tabs to be fixed (no dragging, and default close button will not show).
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.InterTabController">
            <summary>
            An <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.InterTabController"/> must be provided to enable tab tearing. Behaviour customisations can be applied
            vie the controller.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.NewItemFactory">
            <summary>
            Allows a factory to be provided for generating new items. Typically used in conjunction with <see cref="F:CookPopularControl.Controls.Dragables.DragableTabControl.AddItemCommand"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.NewItemFactoryProperty">
            <summary>
            Allows a factory to be provided for generating new items. Typically used in conjunction with <see cref="F:CookPopularControl.Controls.Dragables.DragableTabControl.AddItemCommand"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.IsEmpty">
            <summary>
            Indicates if there are no current tab items.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.IsEmptyChangedEvent">
            <summary>
            Raised when <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.IsEmpty"/> changes.
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.Dragables.DragableTabControl.IsEmptyChanged">
            <summary>
            Event handler to list to <see cref="F:CookPopularControl.Controls.Dragables.DragableTabControl.IsEmptyChangedEvent"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.ClosingItemCallback">
            <summary>
            Optionally allows a close item hook to be bound in.  If this propety is provided, the func must return true for the close to continue.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.ClosingItemCallbackProperty">
            <summary>
            Optionally allows a close item hook to be bound in.  If this propety is provided, the func must return true for the close to continue.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidateOrphanedItems">
            <summary>
            Set to <c>true</c> to have tabs automatically be moved to another tab is a window is closed, so that they arent lost.
            Can be useful for fixed/persistant tabs that may have been dragged into another Window.  You can further control
            this behaviour on a per tab item basis by providing <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidatingOrphanedItemCallback" />.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidateOrphanedItemsProperty">
            <summary>
            Set to <c>true</c> to have tabs automatically be moved to another tab is a window is closed, so that they arent lost.
            Can be useful for fixed/persistant tabs that may have been dragged into another Window.  You can further control
            this behaviour on a per tab item basis by providing <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidatingOrphanedItemCallback" />.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidatingOrphanedItemCallback">
            <summary>
            Assuming <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidateOrphanedItems"/> is set to <c>true</c>, consolidation of individual
            tab items can be cancelled by providing this call back and cancelling the <see cref="T:CookPopularControl.Communal.Data.ItemActionCallbackArgs`1"/>
            instance.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidatingOrphanedItemCallbackProperty">
            <summary>
            Assuming <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.ConsolidateOrphanedItems"/> is set to <c>true</c>, consolidation of individual
            tab items can be cancelled by providing this call back and cancelling the <see cref="T:CookPopularControl.Communal.Data.ItemActionCallbackArgs`1"/>
            instance.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.IsDraggingWindow">
            <summary>
            Readonly dependency property which indicates whether the owning <see cref="T:System.Windows.Window"/> is currently dragged 
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.IsDraggingWindowChangedEvent">
            <summary>
            Event indicating <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.IsDraggingWindow"/> has changed.
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.Dragables.DragableTabControl.IsDraggingWindowChanged">
            <summary>
            Event indicating <see cref="P:CookPopularControl.Controls.Dragables.DragableTabControl.IsDraggingWindow"/> has changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.GetIsClosingAsPartOfDragOperation(System.Windows.Window)">
            <summary>
            Helper method which can tell you if a <see cref="T:System.Windows.Window"/> is being automatically closed due
            to a user instigated drag operation (typically when a single tab is dropped into another window.
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.IsClosingAsPartOfDragOperationProperty">
            <summary>
            Temporarily set by the framework if a users drag opration causes a Window to close (e.g if a tab is dragging into another tab).
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.DragableTabControl.EmptyHeaderSizingHint">
            <summary>
            Provide a hint for how the header should size itself if there are no tabs left (and a Window is still open).
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Dragables.DragableTabControl.EmptyHeaderSizingHintProperty">
            <summary>
            Provide a hint for how the header should size itself if there are no tabs left (and a Window is still open).
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.AddToSource(System.Object)">
            <summary>
            Adds an item to the source collection.  If the InterTabController.InterTabClient is set that instance will be deferred to.
            Otherwise an attempt will be made to add to the <see cref="!:ItemsSource" /> property, and lastly <see cref="!:Items"/>.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.RemoveFromSource(System.Object)">
            <summary>
            Removes an item from the source collection.  If the InterTabController.InterTabClient is set that instance will be deferred to.
            Otherwise an attempt will be made to remove from the <see cref="!:ItemsSource" /> property, and lastly <see cref="!:Items"/>.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.GetOrderedHeaders">
            <summary>
            Gets the header items, ordered according to their current visual position in the tab header.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.OnApplyTemplate">
            <summary>
            Called when <see cref="M:System.Windows.FrameworkElement.ApplyTemplate"/> is called.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.OnSelectionChanged(System.Windows.Controls.SelectionChangedEventArgs)">
            <summary>
            update the visible child in the ItemsHolder
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.OnItemsChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            when the items change we remove any generated panel children and add any new ones as necessary
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.OnKeyDown(System.Windows.Input.KeyEventArgs)">
            <summary>
            Provides class handling for the <see cref="E:System.Windows.ContentElement.KeyDown"/> routed event that occurs when the user presses a key.
            </summary>
            <param name="e">Provides data for <see cref="T:System.Windows.Input.KeyEventArgs"/>.</param>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.OnCreateAutomationPeer">
            <summary>
            Provides an appropriate automation peer implementation for this control
            as part of the WPF automation infrastructure.
            </summary>
            <returns>The type-specific System.Windows.Automation.Peers.AutomationPeer implementation.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.UpdateSelectedItem">
            <summary>
            generate a ContentPresenter for the selected item
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.CreateChildContentPresenter(System.Object)">
            <summary>
            create the child ContentPresenter for the given item (could be data or a TabItem)
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.DragableTabControl.FindChildContentPresenter(System.Object)">
            <summary>
            Find the CP for the given object.  data could be a TabItem or a piece of data
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.IInterLayoutClient">
            <summary>
            Implementors should provide a mechanism to provide a new host control which contains a new <see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.IInterLayoutClient.GetNewHost(System.Object,CookPopularControl.Controls.Dragables.DragableTabControl)">
            <summary>
            Provide a new host control and tab into which will be placed into a newly created layout branch.
            </summary>
            <param name="partition">Provides the partition where the drag operation was initiated.</param>
            <param name="source">The source control where a dragging operation was initiated.</param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.Dragables.IInterTabClient">
            <summary>
            Implementors should provide mechanisms for providing new windows and closing old windows.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.IInterTabClient.GetNewHost(CookPopularControl.Controls.Dragables.IInterTabClient,System.Object,CookPopularControl.Controls.Dragables.DragableTabControl)">
            <summary>
            Provide a new host window so a tab can be teared from an existing window into a new window.
            </summary>
            <param name="interTabClient"></param>
            <param name="partition">Provides the partition where the drag operation was initiated.</param>
            <param name="source">The source control where a dragging operation was initiated.</param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Dragables.IInterTabClient.TabEmptiedHandler(CookPopularControl.Controls.Dragables.DragableTabControl,System.Windows.Window)">
            <summary>
            Called when a tab has been emptied, and thus typically a window needs closing.
            </summary>
            <param name="tabControl"></param>
            <param name="window"></param>
            <returns></returns>
        </member>
        <member name="P:CookPopularControl.Controls.Dragables.InterTabController.Partition">
            <summary>
            The partition allows on or more tab environments in a single application.  Only tabs which have a tab controller
            with a common partition will be allowed to have tabs dragged between them.  <c>null</c> is a valid partition (i.e global).
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExpanderAssistant.ExpanderHeaderWidthProperty">
            <summary>
            表示当<see cref="F:System.Windows.Controls.ExpandDirection.Left"/>或者<see cref="F:System.Windows.Controls.ExpandDirection.Right"/>时<see cref="T:System.Windows.Controls.Expander"/>的标头宽度附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExpanderAssistant.ExpanderHeaderHeightProperty">
            <summary>
            表示当<see cref="F:System.Windows.Controls.ExpandDirection.Down"/>或者<see cref="F:System.Windows.Controls.ExpandDirection.Up"/>时<see cref="T:System.Windows.Controls.Expander"/>的标头高度附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExpanderAssistant.ExpanderHeaderBackgroundProperty">
            <summary>
            表示<see cref="P:System.Windows.Controls.HeaderedContentControl.Header"/>的背景色附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExpanderAssistant.ExpandedGeometryProperty">
            <summary>
            当<see cref="P:System.Windows.Controls.Expander.IsExpanded"/>为<c>True</c>时图标附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExpanderAssistant.CollapsedGeometryProperty">
            <summary>
            当<see cref="P:System.Windows.Controls.Expander.IsExpanded"/>为<c>False</c>时图标附加属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.AutoGroupingText">
            <summary>
            文本自动分组
            </summary>
            <remarks>
            将文本按照某个符号自动分组
            </remarks>
        </member>
        <member name="P:CookPopularControl.Controls.AutoGroupingText.Symbol">
            <summary>
            标头后所带符号,形如"Title:"
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AutoGroupingText.SymbolProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.AutoGroupingText.Symbol"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AutoGroupingText.Text">
            <summary>
            文本，格式形如"Title1:Content1 Title2:Content2"
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AutoGroupingText.TextProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.AutoGroupingText.Text"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AutoGroupingText.HeaderWidthProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.AutoGroupingText.HeaderWidth"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.NumericUpDown">
            <summary>
            表示显示数值的 Windows 数字显示框（也称作 up-down 控件）。
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.Value">
            <summary>
            当前值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.ValueProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.Value"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.Maximum">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.MaximumProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.Maximum"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.Minimum">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.MinimumProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.Minimum"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.Increment">
            <summary>
            获取或设置单击向上或向下按钮时，数字显示框（也称作 up-down 控件）递增或递减的值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.IncrementProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.Increment"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.IsReadOnly">
            <summary>
            是否只读
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.IsReadOnlyProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.IsReadOnly"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.ValueFormat">
            <summary>
            表示要显示数字的格式
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.ValueFormatProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.ValueFormat"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.NumericUpDown.IsShowUpDownButton">
            <summary>
            是否显示UpDownButton
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDown.IsShowUpDownButtonProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.NumericUpDown.IsShowUpDownButton"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.NumericUpDownAssistant">
            <summary>
            表示<see cref="T:CookPopularControl.Controls.NumericUpDown"/>的附加属性类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDownAssistant.UpDownButtonMarginProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.NumericUpDownAssistant.UpDownButtonMarginProperty"/>表示UpDownButton的边距
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NumericUpDownAssistant.UpDownButtonBrushProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.NumericUpDownAssistant.UpDownButtonBrushProperty"/>表示UpDownButton的填充颜色
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.SearchBar">
            <summary>
            搜索框
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.SearchBar.Content">
            <summary>
            搜索内容
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.SearchBar.ContentProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.SearchBar.Content"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.SearchBar.IsAutoSearch">
            <summary>
            是否开启自动查询
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.SearchBar.IsAutoSearchProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.SearchBar.IsAutoSearch"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.SearchBar.StartSearchEvent">
            <summary>
            <see cref="F:CookPopularControl.Controls.SearchBar.StartSearchEvent"/>标识搜索事件 
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.TextPath">
            <summary>
            自定义绘制文本
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TextPath.Data">
            <summary>
            获取或设置用于指定所要绘制的形状的<see cref="T:System.Windows.Media.Geometry"/>
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TextPath.DataProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.TextPath.Data"/>依赖属性。
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TextPath.Text">
            <summary>
            获取或设置用于指定所要绘制的文本
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TextPath.TextProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.TextPath.Text"/>依赖属性。
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TextPath.FillImageSourceProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TextPath.FillImageSourceProperty"/>标识填充的图片资源附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TextPath.DrawingRecProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TextPath.DrawingRecProperty"/>标识获取或设置在其中绘制图像的区域
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TextPath.DrawingBrushProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TextPath.DrawingBrushProperty"/>标识填充IconGeometry的画刷
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DataGridAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.DataGrid"/>的附加属性基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.IsApplyDefaultStyleProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.IsApplyDefaultStyleProperty"/>标识<see cref="T:System.Windows.Controls.DataGridCell"/>是否引用CookPopularControl的默认样式
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.IsRegisterSelectAllProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.IsRegisterSelectAllProperty"/>标识注册全选与取消全选事件
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.IsShowSerialNumberProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.IsShowSerialNumberProperty"/>是否显示排序
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.IsShowThicknessProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.IsShowThicknessProperty"/>标识是否显示线框
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.IsEnableEditWithoutFocusedProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.IsEnableEditWithoutFocusedProperty"/>标识允许使用单击后在<see cref="T:System.Windows.Controls.DataGrid"/>的<see cref="T:System.Windows.Controls.DataGridCell"/>内部编辑组件。
            </summary>
            <remarks>不需要先获取单元格焦点</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.TextColumnStyleProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.TextColumnStyleProperty"/>标识<see cref="T:System.Windows.Controls.DataGridCell"/>默认文本样式
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DataGridAssistant.TextColumnEditingStyleProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.DataGridAssistant.TextColumnStyleProperty"/>标识<see cref="T:System.Windows.Controls.DataGridCell"/>编辑时文本样式
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DataGridCellSingleClickBase">
            <summary>
            单击进行编辑<see cref="T:System.Windows.Controls.DataGridCell"/>的基类
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.DataGridCellSingleClickBase.PrepareCellForEdit(System.Windows.FrameworkElement,System.Windows.RoutedEventArgs)">
            <summary>
            单击直接进行编辑，不需要先获取DataGridCell的焦点
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.GridLinesAssistant">
            <summary>
            提供<see cref="P:System.Windows.Controls.Grid.ShowGridLines"/>的辅助类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.GridLinesAssistant.ShowBorderProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.GridLinesAssistant.ShowBorderProperty"/>标识是否显示外边框
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.GroupBoxAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.GroupBox"/>的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.GroupBoxAssistant.HeaderHorizontalAlignmentProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.GroupBoxAssistant.HeaderHorizontalAlignmentProperty"/>标识Header的水平方位
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.GroupBoxAssistant.HeaderBackgroundProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.GroupBoxAssistant.HeaderBackgroundProperty"/>标识Header的背景颜色
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.TrayIcon">
            <summary>
            托盘图标
            </summary>
            <summary>
            Contains declarations of WPF dependency properties
            and events.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.Shell_NotifyIcon(CookPopularControl.Controls.NotifyCommand,CookPopularControl.Controls.TrayIconData@)">
            <summary>
            Creates, updates or deletes the taskbar icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon._singleClickTimerAction">
            <summary>
            An action that is being invoked if the <see cref="F:CookPopularControl.Controls.TrayIcon._singleClickTimer"/> fires.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon._singleClickTimer">
            <summary>
            A timer that is used to differentiate between single and double clicks.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon._balloonCloseTimer">
            <summary>
            A timer that is used to close open balloon tooltips.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.IsTaskbarIconCreated">
            <summary>
            Indicates whether the taskbar icon has been created or not.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.DoubleClickWaitTime">
            <summary>
            The time we should wait for a double click.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.SupportsCustomToolTips">
            <summary>
            Indicates whether custom tooltips are supported, which depends
            on the OS. Windows Vista or higher is required in order to
            support this feature.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.IsPopupOpen">
            <summary>
            Checks whether a non-tooltip popup is currently opened.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.CustomPopupPosition">
            <summary>
            Specify a custom popup position
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnMouseEvent(CookPopularControl.Controls.MouseEvent)">
            <summary>
            Processes mouse events, which are bubbled through the class' routed events, trigger certain actions (e.g. show a popup), or both.
            </summary>
            <param name="me">Event flag</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnToolTipChange(System.Boolean)">
            <summary>
            Displays a custom tooltip, if available. This method is only
            invoked for Windows Vista and above.
            </summary>
            <param name="visible">Whether to show or hide the tooltip.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnBalloonToolTipChanged(System.Boolean)">
            <summary>
            Bubbles events if a balloon ToolTip was displayed
            or removed.
            </summary>
            <param name="visible">Whether the ToolTip was just displayed
            or removed.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.DoSingleClickAction(System.Object)">
            <summary>
            Performs a delayed action if the user requested an action
            based on a single click of the left mouse.<br/>
            This method is invoked by the <see cref="F:CookPopularControl.Controls.TrayIcon._singleClickTimer"/>.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.CloseBalloonCallback(System.Object)">
            <summary>
            Timer-invoke event which closes the currently open balloon and
            resets the <see cref="P:CookPopularControl.Controls.TrayIcon.CustomBalloon"/> dependency property.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ShowTrayPopup(CookPopularCSharpToolkit.Windows.Interop.InteropValues.POINT)">
            <summary>
            Displays the <see cref="P:CookPopularControl.Controls.TrayIcon.TrayPopup"/> control if it was set.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ShowContextMenu(CookPopularCSharpToolkit.Windows.Interop.InteropValues.POINT)">
            <summary>
            Displays the <see cref="T:System.Windows.Controls.ContextMenu"/> if it was set.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.Is``1(``0,``0[])">
            <summary>
            Checks a list of candidates for equality to a given
            reference value.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value">The evaluated value.</param>
            <param name="candidates">A liste of possible values that are
            regarded valid.</param>
            <returns>True if one of the submitted <paramref name="candidates"/>
            matches the evaluated value. If the <paramref name="candidates"/>
            parameter itself is null, too, the method returns false as well,
            which allows to check with null values, too.</returns>
            <exception cref="T:System.ArgumentNullException">If <paramref name="candidates"/>
            is a null reference.</exception>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.CloseBalloon">
            <summary>
            Closes the current <see cref="P:CookPopularControl.Controls.TrayIcon.CustomBalloon"/>, if the
            property is set.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.GetDispatcher(System.Windows.Threading.DispatcherObject)">
            <summary>
            Returns a dispatcher for multi-threaded scenarios
            </summary>
            <returns>Dispatcher</returns>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.WriteIconData(CookPopularControl.Controls.TrayIconData@,CookPopularControl.Controls.NotifyCommand)">
            <summary>
            Updates the taskbar icons with data provided by a given
            <see cref="T:CookPopularControl.Controls.TrayIconData"/> instance.
            </summary>
            <param name="data">Configuration settings for the NotifyIcon.</param>
            <param name="command">Operation on the icon (e.g. delete the icon).</param>
            <returns>True if the data was successfully written.</returns>
            <remarks>See Shell_NotifyIcon documentation on MSDN for details.</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.WriteIconData(CookPopularControl.Controls.TrayIconData@,CookPopularControl.Controls.NotifyCommand,CookPopularControl.Controls.IconDataMembers)">
            <summary>
            Updates the taskbar icons with data provided by a given
            <see cref="T:CookPopularControl.Controls.TrayIconData"/> instance.
            </summary>
            <param name="data">Configuration settings for the NotifyIcon.</param>
            <param name="command">Operation on the icon (e.g. delete the icon).</param>
            <param name="flags">Defines which members of the <paramref name="data"/>
            structure are set.</param>
            <returns>True if the data was successfully written.</returns>
            <remarks>See Shell_NotifyIcon documentation on MSDN for details.</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnTaskbarCreated">
            <summary>
            Recreates the taskbar icon if the whole taskbar was recreated (e.g. because Explorer was shut down).
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.CreateTrayIcon">
            <summary>
            Creates the taskbar icon. This message is invoked during initialization,
            if the taskbar is restarted, and whenever the icon is displayed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RemoveTrayIcon">
            <summary>
            Closes the taskbar icon if required.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.IsDisposed">
            <summary>
            Set to true as soon as <c>Dispose</c> has been invoked.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.EnsureNotDisposed">
            <summary>
            Checks if the object has been disposed and
            raises a <see cref="T:System.ObjectDisposedException"/> in case
            the <see cref="P:CookPopularControl.Controls.TrayIcon.IsDisposed"/> flag is true.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnExit(System.Object,System.EventArgs)">
            <summary>
            Disposes the class if the application exits.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.Finalize">
            <summary>
            This destructor will run only if the <see cref="M:CookPopularControl.Controls.TrayIcon.Dispose"/>
            method does not get called. This gives this base class the
            opportunity to finalize.
            <para>
            Important: Do not provide destructor in types derived from this class.
            </para>
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.Dispose">
            <summary>
            Disposes the object.
            </summary>
            <remarks>This method is not virtual by design. Derived classes
            should override <see cref="M:CookPopularControl.Controls.TrayIcon.Dispose(System.Boolean)"/>.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.Dispose(System.Boolean)">
            <summary>
            Closes the tray and releases all resources.
            </summary>
            <summary>
            <c>Dispose(bool disposing)</c> executes in two distinct scenarios.
            If disposing equals <c>true</c>, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            </summary>
            <param name="disposing">If disposing equals <c>false</c>, the method
            has been called by the runtime from inside the finalizer and you
            should not reference other objects. Only unmanaged resources can
            be disposed.</param>
            <remarks>Check the <see cref="P:CookPopularControl.Controls.TrayIcon.IsDisposed"/> property to determine whether
            the method has already been called.</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ShowCustomBalloon(System.Windows.UIElement,System.Windows.Controls.Primitives.PopupAnimation,System.Nullable{System.Int32})">
            <summary>
            Shows a custom control as a tooltip in the tray location.
            </summary>
            <param name="balloon"></param>
            <param name="animation">An optional animation for the popup.</param>
            <param name="timeout">The time after which the popup is being closed.
            Submit null in order to keep the balloon open indefinitely
            </param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="balloon"/>
            is a null reference.</exception>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.GetTrayLocation">
            <summary>
            Gets the position of the system tray.
            </summary>
            <returns>Tray coordinates.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.GetPopupTrayPosition">
            <summary>
            Returns the location of the system tray
            </summary>
            <returns>Point</returns>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.GetSystemTaskBarPosition">
            <summary>
            Updates the system taskbar position
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ResetBalloonCloseTimer">
            <summary>
            Resets the closing timeout, which effectively
            keeps a displayed balloon message open until
            it is either closed programmatically through
            <see cref="M:CookPopularControl.Controls.TrayIcon.CloseBalloon"/> or due to a new
            message being displayed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ShowBalloonTip(System.String,System.String,CookPopularControl.Controls.BalloonIcon)">
            <summary>
            Displays a balloon tip with the specified title,
            text, and icon in the taskbar for the specified time period.
            </summary>
            <param name="title">The title to display on the balloon tip.</param>
            <param name="message">The text to display on the balloon tip.</param>
            <param name="symbol">A symbol that indicates the severity.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ShowBalloonTip(System.String,System.String,System.Drawing.Icon,System.Boolean)">
            <summary>
            Displays a balloon tip with the specified title,
            text, and a custom icon in the taskbar for the specified time period.
            </summary>
            <param name="title">The title to display on the balloon tip.</param>
            <param name="message">The text to display on the balloon tip.</param>
            <param name="customIcon">A custom icon.</param>
            <param name="largeIcon">True to allow large icons (Windows Vista and later).</param>
            <exception cref="T:System.ArgumentNullException">If <paramref name="customIcon"/>
            is a null reference.</exception>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.HideBalloonTip">
            <summary>
            Hides a balloon ToolTip, if any is displayed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ShowBalloonTip(System.String,System.String,CookPopularControl.Controls.BalloonFlags,System.IntPtr)">
            <summary>
            Invokes <see cref="M:CookPopularControl.Controls.TrayIcon.Shell_NotifyIcon(CookPopularControl.Controls.NotifyCommand,CookPopularControl.Controls.TrayIconData@)"/> in order to display
            a given balloon ToolTip.
            </summary>
            <param name="title">The title to display on the balloon tip.</param>
            <param name="message">The text to display on the balloon tip.</param>
            <param name="flags">Indicates what icon to use.</param>
            <param name="balloonIconHandle">A handle to a custom icon, if any, or
            <see cref="F:System.IntPtr.Zero"/>.</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.CategoryName">
            <summary>
            Category name that is set on designer properties.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayPopupResolvedPropertyKey">
            <summary>
            TrayPopupResolved Read-Only Dependency Property
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayPopupResolvedProperty">
            <summary>
            A read-only dependency property that returns the <see cref="T:System.Windows.Controls.Primitives.Popup"/>
            that is being displayed in the taskbar area based on a user action.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.TrayPopupResolved">
            <summary>
            Gets the TrayPopupResolved property. Returns
            a <see cref="T:System.Windows.Controls.Primitives.Popup"/> which is either the
            <see cref="P:CookPopularControl.Controls.TrayIcon.TrayPopup"/> control itself or a
            <see cref="T:System.Windows.Controls.Primitives.Popup"/> control that contains the
            <see cref="P:CookPopularControl.Controls.TrayIcon.TrayPopup"/>.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.SetTrayPopupResolved(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Provides a secure method for setting the TrayPopupResolved property.  
            This dependency property indicates ....
            </summary>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayToolTipResolvedPropertyKey">
            <summary>
            TrayToolTipResolved Read-Only Dependency Property
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayToolTipResolvedProperty">
            <summary>
            A read-only dependency property that returns the <see cref="T:System.Windows.Controls.ToolTip"/>
            that is being displayed.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.TrayToolTipResolved">
            <summary>
            Gets the TrayToolTipResolved property. Returns 
            a <see cref="T:System.Windows.Controls.ToolTip"/> control that was created
            in order to display either <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTip"/>
            or <see cref="P:CookPopularControl.Controls.TrayIcon.ToolTipText"/>.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.SetTrayToolTipResolved(System.Windows.Controls.ToolTip)">
            <summary>
            Provides a secure method for setting the <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTipResolved"/>
            property.  
            </summary>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.CustomBalloonPropertyKey">
            <summary>
            CustomBalloon Read-Only Dependency Property
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.CustomBalloonProperty">
            <summary>
            Maintains a currently displayed custom balloon.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.CustomBalloon">
            <summary>
            A custom popup that is being displayed in the tray area in order
            to display messages to the user.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.SetCustomBalloon(System.Windows.Controls.Primitives.Popup)">
            <summary>
            Provides a secure method for setting the <see cref="P:CookPopularControl.Controls.TrayIcon.CustomBalloon"/> property.  
            </summary>
            <param name="value">The new value for the property.</param>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.Icon">
            <summary>
            Gets or sets the icon to be displayed. This is not a
            dependency property - if you want to assign the property
            through XAML, please use the <see cref="P:CookPopularControl.Controls.TrayIcon.IconSource"/>
            dependency property.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.IconSource">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.IconSourceProperty"/>
            dependency property:<br/>
            Resolves an image source and updates the <see cref="P:CookPopularControl.Controls.TrayIcon.Icon" /> property accordingly.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.IconSourceProperty">
            <summary>
            Resolves an image source and updates the <see cref="P:CookPopularControl.Controls.TrayIcon.Icon" /> property accordingly.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.IconSourcePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:CookPopularControl.Controls.TrayIcon.IconSourceProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnIconSourcePropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnIconSourcePropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:CookPopularControl.Controls.TrayIcon.IconSourceProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:CookPopularControl.Controls.TrayIcon.IconSource"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.ToolTipText">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.ToolTipTextProperty"/>
            dependency property:<br/>
            A tooltip text that is being displayed if no custom <see cref="T:System.Windows.Controls.ToolTip"/>
            was set or if custom tooltips are not supported.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.ToolTipTextProperty">
            <summary>
            A tooltip text that is being displayed if no custom <see cref="T:System.Windows.Controls.ToolTip"/>
            was set or if custom tooltips are not supported.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ToolTipTextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:CookPopularControl.Controls.TrayIcon.ToolTipTextProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnToolTipTextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnToolTipTextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:CookPopularControl.Controls.TrayIcon.ToolTipTextProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:CookPopularControl.Controls.TrayIcon.ToolTipText"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.TrayToolTip">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.TrayToolTipProperty"/>
            dependency property:<br/>
            A custom UI element that is displayed as a tooltip if the user hovers over the taskbar icon.
            Works only with Vista and above. Accordingly, you should make sure that
            the <see cref="P:CookPopularControl.Controls.TrayIcon.ToolTipText"/> property is set as well.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayToolTipProperty">
            <summary>
            A custom UI element that is displayed as a tooltip if the user hovers over the taskbar icon.
            Works only with Vista and above. Accordingly, you should make sure that
            the <see cref="P:CookPopularControl.Controls.TrayIcon.ToolTipText"/> property is set as well.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.TrayToolTipPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:CookPopularControl.Controls.TrayIcon.TrayToolTipProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnTrayToolTipPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnTrayToolTipPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:CookPopularControl.Controls.TrayIcon.TrayToolTipProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTip"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.CreateCustomToolTip">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.ToolTip"/> control that either
            wraps the currently set <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTip"/>
            control or the <see cref="P:CookPopularControl.Controls.TrayIcon.ToolTipText"/> string.<br/>
            If <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTip"/> itself is already
            a <see cref="T:System.Windows.Controls.ToolTip"/> instance, it will be used directly.
            </summary>
            <remarks>We use a <see cref="T:System.Windows.Controls.ToolTip"/> rather than
            <see cref="T:System.Windows.Controls.Primitives.Popup"/> because there was no way to prevent a
            popup from causing cyclic open/close commands if it was
            placed under the mouse. ToolTip internally uses a Popup of
            its own, but takes advance of Popup's internal <see cref="P:System.Windows.UIElement.IsHitTestVisible"/>
            property which prevents this issue.</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.WriteToolTipSettings">
            <summary>
            Sets tooltip settings for the class depending on defined
            dependency properties and OS support.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.TrayPopup">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.TrayPopupProperty"/>
            dependency property:<br/>
            A control that is displayed as a popup when the taskbar icon is clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayPopupProperty">
            <summary>
            A control that is displayed as a popup when the taskbar icon is clicked.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.TrayPopupPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:CookPopularControl.Controls.TrayIcon.TrayPopupProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnTrayPopupPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnTrayPopupPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:CookPopularControl.Controls.TrayIcon.TrayPopupProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:CookPopularControl.Controls.TrayIcon.TrayPopup"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.CreatePopup">
            <summary>
            Creates a <see cref="T:System.Windows.Controls.ToolTip"/> control that either
            wraps the currently set <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTip"/>
            control or the <see cref="P:CookPopularControl.Controls.TrayIcon.ToolTipText"/> string.<br/>
            If <see cref="P:CookPopularControl.Controls.TrayIcon.TrayToolTip"/> itself is already
            a <see cref="T:System.Windows.Controls.ToolTip"/> instance, it will be used directly.
            </summary>
            <remarks>We use a <see cref="T:System.Windows.Controls.ToolTip"/> rather than
            <see cref="T:System.Windows.Controls.Primitives.Popup"/> because there was no way to prevent a
            popup from causing cyclic open/close commands if it was
            placed under the mouse. ToolTip internally uses a Popup of
            its own, but takes advance of Popup's internal <see cref="P:System.Windows.UIElement.IsHitTestVisible"/>
            property which prevents this issue.</remarks>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.MenuActivation">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.MenuActivationProperty"/>
            dependency property:<br/>
            Defines what mouse events display the context menu.
            Defaults to <see cref="F:CookPopularControl.Controls.PopupActivationMode.RightClick"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.MenuActivationProperty">
            <summary>
            Defines what mouse events display the context menu.
            Defaults to <see cref="F:CookPopularControl.Controls.PopupActivationMode.RightClick"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.PopupActivation">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.PopupActivationProperty"/>
            dependency property:<br/>
            Defines what mouse events trigger the <see cref="P:CookPopularControl.Controls.TrayIcon.TrayPopup" />.
            Default is <see cref="F:CookPopularControl.Controls.PopupActivationMode.LeftClick" />.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.PopupActivationProperty">
            <summary>
            Defines what mouse events trigger the <see cref="P:CookPopularControl.Controls.TrayIcon.TrayPopup" />.
            Default is <see cref="F:CookPopularControl.Controls.PopupActivationMode.LeftClick" />.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.VisibilityPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:System.Windows.UIElement.VisibilityProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnVisibilityPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnVisibilityPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:System.Windows.UIElement.VisibilityProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="T:System.Windows.Visibility"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.UpdateDataContext(System.Windows.FrameworkElement,System.Object,System.Object)">
            <summary>
            Updates the <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/> of a given
            <see cref="T:System.Windows.FrameworkElement"/>. This method only updates target elements
            that do not already have a data context of their own, and either assigns
            the <see cref="P:System.Windows.FrameworkElement.DataContext"/> of the NotifyIcon, or the
            NotifyIcon itself, if no data context was assigned at all.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.DataContextPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnDataContextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnDataContextPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles changes of the <see cref="F:System.Windows.FrameworkElement.DataContextProperty"/> dependency property. As
            WPF internally uses the dependency property system and bypasses the
            <see cref="P:System.Windows.FrameworkElement.DataContext"/> property wrapper, updates of the property's value
            should be handled here.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.ContextMenuPropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            A static callback listener which is being invoked if the
            <see cref="F:System.Windows.FrameworkElement.ContextMenuProperty"/> dependency property has
            been changed. Invokes the <see cref="M:CookPopularControl.Controls.TrayIcon.OnContextMenuPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)"/>
            instance method of the changed instance.
            </summary>
            <param name="d">The currently processed owner of the property.</param>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.OnContextMenuPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Releases the old and updates the new <see cref="T:System.Windows.Controls.ContextMenu"/> property
            in order to reflect both the NotifyIcon's <see cref="P:System.Windows.FrameworkElement.DataContext"/>
            property and have the <see cref="F:CookPopularControl.Controls.TrayIcon.ParentTrayIconProperty"/> assigned.
            </summary>
            <param name="e">Provides information about the updated property.</param>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.DoubleClickCommand">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.DoubleClickCommandProperty"/>
            dependency property:<br/>
            Associates a command that is being executed if the tray icon is being
            double clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.DoubleClickCommandProperty">
            <summary>
            Associates a command that is being executed if the tray icon is being
            double clicked.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.DoubleClickCommandParameter">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.DoubleClickCommandParameterProperty"/>
            dependency property:<br/>
            Command parameter for the <see cref="P:CookPopularControl.Controls.TrayIcon.DoubleClickCommand"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.DoubleClickCommandParameterProperty">
            <summary>
            Command parameter for the <see cref="P:CookPopularControl.Controls.TrayIcon.DoubleClickCommand"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.DoubleClickCommandTarget">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.DoubleClickCommandTargetProperty"/>
            dependency property:<br/>
            The target of the command that is fired if the notify icon is double clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.DoubleClickCommandTargetProperty">
            <summary>
            The target of the command that is fired if the notify icon is double clicked.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.LeftClickCommand">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.LeftClickCommandProperty"/>
            dependency property:<br/>
            Associates a command that is being executed if the tray icon is being
            left-clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.LeftClickCommandProperty">
            <summary>
            Associates a command that is being executed if the tray icon is being
            double clicked.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.LeftClickCommandParameter">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.LeftClickCommandParameterProperty"/>
            dependency property:<br/>
            Command parameter for the <see cref="P:CookPopularControl.Controls.TrayIcon.LeftClickCommand"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.LeftClickCommandParameterProperty">
            <summary>
            Command parameter for the <see cref="P:CookPopularControl.Controls.TrayIcon.LeftClickCommand"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.LeftClickCommandTarget">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.LeftClickCommandTargetProperty"/>
            dependency property:<br/>
            The target of the command that is fired if the notify icon is clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.LeftClickCommandTargetProperty">
            <summary>
            The target of the command that is fired if the notify icon is clicked.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TrayIcon.NoLeftClickDelay">
            <summary>
            A property wrapper for the <see cref="F:CookPopularControl.Controls.TrayIcon.NoLeftClickDelayProperty"/>
            dependency property:<br/>
            Set to true to make left clicks work without delay.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.NoLeftClickDelayProperty">
            <summary>
            Set to true to make left clicks work without delay.
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayLeftMouseDown">
            <summary>
            Occurs when the user presses the left mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayLeftMouseDownEvent">
            <summary>
            TrayLeftMouseDown Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayLeftMouseDownEvent">
            <summary>
            A helper method to raise the TrayLeftMouseDown event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayLeftMouseDownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayLeftMouseDown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayRightMouseDown">
            <summary>
            Occurs when the presses the right mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayRightMouseDownEvent">
            <summary>
            TrayRightMouseDown Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayRightMouseDownEvent">
            <summary>
            A helper method to raise the TrayRightMouseDown event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayRightMouseDownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayRightMouseDown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayMiddleMouseDown">
            <summary>
            Occurs when the user presses the middle mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayMiddleMouseDownEvent">
            <summary>
            TrayMiddleMouseDown Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMiddleMouseDownEvent">
            <summary>
            A helper method to raise the TrayMiddleMouseDown event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMiddleMouseDownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMiddleMouseDown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayLeftMouseUp">
            <summary>
            Occurs when the user releases the left mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayLeftMouseUpEvent">
            <summary>
            TrayLeftMouseUp Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayLeftMouseUpEvent">
            <summary>
            A helper method to raise the TrayLeftMouseUp event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayLeftMouseUpEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayLeftMouseUp event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayRightMouseUp">
            <summary>
            Occurs when the user releases the right mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayRightMouseUpEvent">
            <summary>
            TrayRightMouseUp Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayRightMouseUpEvent">
            <summary>
            A helper method to raise the TrayRightMouseUp event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayRightMouseUpEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayRightMouseUp event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayMiddleMouseUp">
            <summary>
            Occurs when the user releases the middle mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayMiddleMouseUpEvent">
            <summary>
            TrayMiddleMouseUp Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMiddleMouseUpEvent">
            <summary>
            A helper method to raise the TrayMiddleMouseUp event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMiddleMouseUpEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMiddleMouseUp event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayMouseDoubleClick">
            <summary>
            Occurs when the user double-clicks the taskbar icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayMouseDoubleClickEvent">
            <summary>
            TrayMouseDoubleClick Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMouseDoubleClickEvent">
            <summary>
            A helper method to raise the TrayMouseDoubleClick event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMouseDoubleClickEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMouseDoubleClick event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayMouseMove">
            <summary>
            Occurs when the user moves the mouse over the taskbar icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayMouseMoveEvent">
            <summary>
            TrayMouseMove Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMouseMoveEvent">
            <summary>
            A helper method to raise the TrayMouseMove event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayMouseMoveEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayMouseMove event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayBalloonTipShown">
            <summary>
            Occurs when a balloon ToolTip is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayBalloonTipShownEvent">
            <summary>
            TrayBalloonTipShown Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayBalloonTipShownEvent">
            <summary>
            A helper method to raise the TrayBalloonTipShown event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayBalloonTipShownEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayBalloonTipShown event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayBalloonTipClosed">
            <summary>
            Occurs when a balloon ToolTip was closed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayBalloonTipClosedEvent">
            <summary>
            TrayBalloonTipClosed Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayBalloonTipClosedEvent">
            <summary>
            A helper method to raise the TrayBalloonTipClosed event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayBalloonTipClosedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayBalloonTipClosed event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayBalloonTipClicked">
            <summary>
            Occurs when the user clicks on a balloon ToolTip.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayBalloonTipClickedEvent">
            <summary>
            TrayBalloonTipClicked Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayBalloonTipClickedEvent">
            <summary>
            A helper method to raise the TrayBalloonTipClicked event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayBalloonTipClickedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayBalloonTipClicked event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayContextMenuOpen">
            <summary>
            Bubbled event that occurs when the context menu of the taskbar icon is being displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayContextMenuOpenEvent">
            <summary>
            TrayContextMenuOpen Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayContextMenuOpenEvent">
            <summary>
            A helper method to raise the TrayContextMenuOpen event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayContextMenuOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayContextMenuOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.PreviewTrayContextMenuOpen">
            <summary>
            Tunneled event that occurs when the context menu of the taskbar icon is being displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.PreviewTrayContextMenuOpenEvent">
            <summary>
            PreviewTrayContextMenuOpen Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayContextMenuOpenEvent">
            <summary>
            A helper method to raise the PreviewTrayContextMenuOpen event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayContextMenuOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayContextMenuOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayPopupOpen">
            <summary>
            Bubbled event that occurs when the custom popup is being opened.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayPopupOpenEvent">
            <summary>
            TrayPopupOpen Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayPopupOpenEvent">
            <summary>
            A helper method to raise the TrayPopupOpen event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayPopupOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayPopupOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.PreviewTrayPopupOpen">
            <summary>
            Tunneled event that occurs when the custom popup is being opened.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.PreviewTrayPopupOpenEvent">
            <summary>
            PreviewTrayPopupOpen Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayPopupOpenEvent">
            <summary>
            A helper method to raise the PreviewTrayPopupOpen event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayPopupOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayPopupOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayToolTipOpen">
            <summary>
            Bubbled event that occurs when the custom ToolTip is being displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayToolTipOpenEvent">
            <summary>
            TrayToolTipOpen Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayToolTipOpenEvent">
            <summary>
            A helper method to raise the TrayToolTipOpen event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayToolTipOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayToolTipOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.PreviewTrayToolTipOpen">
            <summary>
            Tunneled event that occurs when the custom ToolTip is being displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.PreviewTrayToolTipOpenEvent">
            <summary>
            PreviewTrayToolTipOpen Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayToolTipOpenEvent">
            <summary>
            A helper method to raise the PreviewTrayToolTipOpen event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayToolTipOpenEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayToolTipOpen event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.TrayToolTipClose">
            <summary>
            Bubbled event that occurs when a custom tooltip is being closed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.TrayToolTipCloseEvent">
            <summary>
            TrayToolTipClose Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayToolTipCloseEvent">
            <summary>
            A helper method to raise the TrayToolTipClose event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseTrayToolTipCloseEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the TrayToolTipClose event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="E:CookPopularControl.Controls.TrayIcon.PreviewTrayToolTipClose">
            <summary>
            Tunneled event that occurs when a custom tooltip is being closed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.PreviewTrayToolTipCloseEvent">
            <summary>
            PreviewTrayToolTipClose Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayToolTipCloseEvent">
            <summary>
            A helper method to raise the PreviewTrayToolTipClose event.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePreviewTrayToolTipCloseEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PreviewTrayToolTipClose event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.AddPopupOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the PopupOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RemovePopupOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the PopupOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.PopupOpenedEvent">
            <summary>
            PopupOpened Attached Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaisePopupOpenedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the PopupOpened event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.AddToolTipOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the ToolTipOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RemoveToolTipOpenedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the ToolTipOpened attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.ToolTipOpenedEvent">
            <summary>
            ToolTipOpened Attached Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseToolTipOpenedEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the ToolTipOpened event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.AddToolTipCloseHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the ToolTipClose attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RemoveToolTipCloseHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the ToolTipClose attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.ToolTipCloseEvent">
            <summary>
            ToolTipClose Attached Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseToolTipCloseEvent(System.Windows.DependencyObject)">
            <summary>
            A static helper method to raise the ToolTipClose event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.AddBalloonShowingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the BalloonShowing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RemoveBalloonShowingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the BalloonShowing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.BalloonShowingEvent">
            <summary>
            BalloonShowing Attached Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseBalloonShowingEvent(System.Windows.DependencyObject,CookPopularControl.Controls.TrayIcon)">
            <summary>
            A static helper method to raise the BalloonShowing event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
            <param name="source">The <see cref="T:CookPopularControl.Controls.TrayIcon"/> instance that manages the balloon.</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.AddBalloonClosingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Adds a handler for the BalloonClosing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be added</param>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RemoveBalloonClosingHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <summary>
            Removes a handler for the BalloonClosing attached event
            </summary>
            <param name="element">UIElement or ContentElement that listens to the event</param>
            <param name="handler">Event handler to be removed</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.BalloonClosingEvent">
            <summary>
            BalloonClosing Attached Routed Event
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.RaiseBalloonClosingEvent(System.Windows.DependencyObject,CookPopularControl.Controls.TrayIcon)">
            <summary>
            A static helper method to raise the BalloonClosing event on a target element.
            </summary>
            <param name="target">UIElement or ContentElement on which to raise the event</param>
            <param name="source">The <see cref="T:CookPopularControl.Controls.TrayIcon"/> instance that manages the balloon.</param>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIcon.ParentTrayIconProperty">
            <summary>
            An attached property that is assigned to displayed UI elements (balloons, tooltips, context menus), and
            that can be used to bind to this control. The attached property is being derived, so binding is
            quite straightforward:
            <code>
            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=(tb:TrayIcon.ParentTrayIcon).ToolTipText}" />
            </code>
            </summary>  
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.GetParentTrayIcon(System.Windows.DependencyObject)">
            <summary>
            Gets the ParentTrayIcon property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIcon.SetParentTrayIcon(System.Windows.DependencyObject,CookPopularControl.Controls.TrayIcon)">
            <summary>
            Sets the ParentTrayIcon property.  This dependency property 
            indicates ....
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.WindowMessageSink">
            <summary>
            Receives messages from the taskbar icon through
            window messages of an underlying helper window.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowMessageSink.CallbackMessageId">
            <summary>
            The ID of messages that are received from the the
            taskbar icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowMessageSink._taskbarRestartMessageId">
            <summary>
            The ID of the message that is being received if the
            taskbar is (re)started.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowMessageSink._isDoubleClick">
            <summary>
            Used to track whether a mouse-up event is just
            the aftermath of a double-click and therefore needs
            to be suppressed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowMessageSink._messageHandler">
            <summary>
            A delegate that processes messages of the hidden
            native window that receives window messages. Storing
            this reference makes sure we don't loose our reference
            to the message window.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.WindowMessageSink.WindowId">
            <summary>
            Window class ID.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.WindowMessageSink.MessageWindowHandle">
            <summary>
            Handle for the message window.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.WindowMessageSink.Version">
            <summary>
            The version of the underlying icon. Defines how
            incoming messages are interpreted.
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.WindowMessageSink.ChangeToolTipStateRequest">
            <summary>
            The custom tooltip should be closed or hidden.
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.WindowMessageSink.MouseEventReceived">
            <summary>
            Fired in case the user clicked or moved within
            the taskbar icon area.
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.WindowMessageSink.BalloonToolTipChanged">
            <summary>
            Fired if a balloon ToolTip was either displayed
            or closed (indicated by the boolean flag).
            </summary>
        </member>
        <member name="E:CookPopularControl.Controls.WindowMessageSink.TaskbarCreated">
            <summary>
            Fired if the taskbar was created or restarted. Requires the taskbar
            icon to be reset.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.#ctor(CookPopularControl.Controls.NotifyIconVersion)">
            <summary>
            Creates a new message sink that receives message from
            a given taskbar icon.
            </summary>
            <param name="version"></param>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.CreateEmpty">
            <summary>
            Creates a dummy instance that provides an empty
            pointer rather than a real window handler.<br/>
            Used at design time.
            </summary>
            <returns>WindowMessageSink</returns>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.CreateMessageWindow">
            <summary>
            Creates the helper message window that is used
            to receive messages from the taskbar icon.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.OnWindowMessageReceived(System.IntPtr,System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Callback method that receives messages from the taskbar area.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.ProcessWindowMessage(System.UInt32,System.IntPtr,System.IntPtr)">
            <summary>
            Processes incoming system messages.
            </summary>
            <param name="msg">Callback ID.</param>
            <param name="wParam">If the version is <see cref="F:CookPopularControl.Controls.NotifyIconVersion.Vista"/>
            or higher, this parameter can be used to resolve mouse coordinates.
            Currently not in use.</param>
            <param name="lParam">Provides information about the event.</param>
        </member>
        <member name="P:CookPopularControl.Controls.WindowMessageSink.IsDisposed">
            <summary>
            Set to true as soon as <c>Dispose</c> has been invoked.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.Dispose">
            <summary>
            Disposes the object.
            </summary>
            <remarks>This method is not virtual by design. Derived classes
            should override <see cref="M:CookPopularControl.Controls.WindowMessageSink.Dispose(System.Boolean)"/>.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.Finalize">
            <summary>
            This destructor will run only if the <see cref="M:CookPopularControl.Controls.WindowMessageSink.Dispose"/>
            method does not get called. This gives this base class the
            opportunity to finalize.
            <para>
            Important: Do not provide destructor in types derived from
            this class.
            </para>
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.WindowMessageSink.Dispose(System.Boolean)">
            <summary>
            Removes the windows hook that receives window
            messages and closes the underlying helper window.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.WindowProcedureHandler">
            <summary>
            Callback delegate which is used by the Windows API to submit window messages.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BalloonIcon">
            <summary>
             Supported icons for the tray's balloon messages.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonIcon.None">
            <summary>
            The balloon message is displayed without an icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonIcon.Info">
            <summary>
            An information is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonIcon.Warning">
            <summary>
            A warning is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonIcon.Error">
            <summary>
            An error is displayed.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.WindowsMessages">
            <summary>
            This enum defines the windows messages we respond to.
            See more on Windows messages <a href="https://docs.microsoft.com/en-us/windows/win32/learnwin32/window-messages">here</a>
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_CONTEXTMENU">
             <summary>
             Notifies a window that the user clicked the right mouse button (right-clicked) in the window.
             See <a href="https://docs.microsoft.com/en-us/windows/win32/menurc/wm-contextmenu">WM_CONTEXTMENU message</a>
            
             In case of a notify icon:
             If a user selects a notify icon's shortcut menu with the keyboard, the Shell now sends the associated application a WM_CONTEXTMENU message. Earlier versions send WM_RBUTTONDOWN and WM_RBUTTONUP messages.
             See <a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shell_notifyiconw">Shell_NotifyIcon function</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_MOUSEMOVE">
             <summary>
             Posted to a window when the cursor moves.
             If the mouse is not captured, the message is posted to the window that contains the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-mousemove">WM_MOUSEMOVE message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_LBUTTONDOWN">
             <summary>
             Posted when the user presses the left mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttondown">WM_LBUTTONDOWN message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_LBUTTONUP">
             <summary>
             Posted when the user releases the left mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttonup">WM_LBUTTONUP message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_LBUTTONDBLCLK">
             <summary>
             Posted when the user double-clicks the left mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-lbuttondblclk">WM_LBUTTONDBLCLK message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_RBUTTONDOWN">
             <summary>
             Posted when the user presses the right mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-rbuttondown">WM_RBUTTONDOWN message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_RBUTTONUP">
             <summary>
             Posted when the user releases the right mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-rbuttonup">WM_RBUTTONUP message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_RBUTTONDBLCLK">
             <summary>
             Posted when the user double-clicks the right mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-rbuttondblclk">WM_RBUTTONDBLCLK message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_MBUTTONDOWN">
             <summary>
             Posted when the user presses the middle mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-mbuttondown">WM_MBUTTONDOWN message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_MBUTTONUP">
             <summary>
             Posted when the user releases the middle mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-mbuttonup">WM_MBUTTONUP message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_MBUTTONDBLCLK">
             <summary>
             Posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window.
             If the mouse is not captured, the message is posted to the window beneath the cursor.
             Otherwise, the message is posted to the window that has captured the mouse.
            
             See <a href="https://docs.microsoft.com/en-us/windows/win32/inputdev/wm-mbuttondblclk">WM_MBUTTONDBLCLK message</a>
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_DPICHANGED">
            <summary>
            Sent when the effective dots per inch (dpi) for a window has changed.
            The DPI is the scale factor for a window.
            There are multiple events that can cause the DPI to change.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.WM_USER">
            <summary>
            Used to define private messages for use by private window classes, usually of the form WM_USER+x, where x is an integer value.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_SELECT">
            <summary>
            This message is only send when using NOTIFYICON_VERSION_4, the Shell now sends the associated application an NIN_SELECT notification.
            Send when a notify icon is activated with mouse or ENTER key.
            Earlier versions send WM_RBUTTONDOWN and WM_RBUTTONUP messages.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_KEYSELECT">
            <summary>
            This message is only send when using NOTIFYICON_VERSION_4, the Shell now sends the associated application an NIN_SELECT notification.
            Send when a notify icon is activated with SPACEBAR or ENTER key.
            Earlier versions send WM_RBUTTONDOWN and WM_RBUTTONUP messages.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_BALLOONSHOW">
            <summary>
            Sent when the balloon is shown (balloons are queued).
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_BALLOONHIDE">
             <summary>
             Sent when the balloon disappears. For example, when the icon is deleted.
             This message is not sent if the balloon is dismissed because of a timeout or if the user clicks the mouse.
            
             As of Windows 7, NIN_BALLOONHIDE is also sent when a notification with the NIIF_RESPECT_QUIET_TIME flag set attempts to display during quiet time (a user's first hour on a new computer).
             In that case, the balloon is never displayed at all.
             </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_BALLOONTIMEOUT">
            <summary>
            Sent when the balloon is dismissed because of a timeout.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_BALLOONUSERCLICK">
            <summary>
            Sent when the balloon is dismissed because the user clicked the mouse.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_POPUPOPEN">
            <summary>
            Sent when the user hovers the cursor over an icon to indicate that the richer pop-up UI should be used in place of a standard textual tooltip.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WindowsMessages.NIN_POPUPCLOSE">
            <summary>
            Sent when a cursor no longer hovers over an icon to indicate that the rich pop-up UI should be closed.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.MouseEvent">
            <summary>
            Event flags for clicked events.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.MouseMove">
            <summary>
            The mouse was moved withing the
            taskbar icon's area.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconRightMouseDown">
            <summary>
            The right mouse button was clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconLeftMouseDown">
            <summary>
            The left mouse button was clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconRightMouseUp">
            <summary>
            The right mouse button was released.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconLeftMouseUp">
            <summary>
            The left mouse button was released.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconMiddleMouseDown">
            <summary>
            The middle mouse button was clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconMiddleMouseUp">
            <summary>
            The middle mouse button was released.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.IconDoubleClick">
            <summary>
            The taskbar icon was double clicked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MouseEvent.BalloonToolTipClicked">
            <summary>
            The balloon tip was clicked.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PopupActivationMode">
            <summary>
            Defines flags that define when a popup
            is being displyed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.LeftClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the left mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.RightClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the right mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.DoubleClick">
            <summary>
            The item is displayed if the user double-clicks the
            tray icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.LeftOrRightClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the left or the right mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.LeftOrDoubleClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the left mouse button or if a
            double-click is being performed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.MiddleClick">
            <summary>
            The item is displayed if the user clicks the
            tray icon with the middle mouse button.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupActivationMode.All">
            <summary>
            The item is displayed whenever a click occurs.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.CbSize">
            <summary>
            Size of this structure, in bytes.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.WindowHandle">
            <summary>
            Handle to the window that receives notification messages associated with an icon in the
            taskbar status area. The Shell uses hWnd and uID to identify which icon to operate on
            when Shell_NotifyIcon is invoked.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.TaskbarIconId">
            <summary>
            Application-defined identifier of the taskbar icon. The Shell uses hWnd and uID to identify
            which icon to operate on when Shell_NotifyIcon is invoked. You can have multiple icons
            associated with a single hWnd by assigning each a different uID. This feature, however
            is currently not used.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.ValidMembers">
            <summary>
            Flags that indicate which of the other members contain valid data. This member can be
            a combination of the NIF_XXX constants.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.CallbackMessageId">
            <summary>
            Application-defined message identifier. The system uses this identifier to send
            notifications to the window identified in hWnd.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.IconHandle">
            <summary>
            A handle to the icon that should be displayed. Just
            <c>Icon.Handle</c>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.ToolTipText">
            <summary>
            String with the text for a standard ToolTip. It can have a maximum of 64 characters including
            the terminating NULL. For Version 5.0 and later, szTip can have a maximum of
            128 characters, including the terminating NULL.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.IconState">
            <summary>
            State of the icon. Remember to also set the <see cref="F:CookPopularControl.Controls.TrayIconData.StateMask"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.StateMask">
            <summary>
            A value that specifies which bits of the state member are retrieved or modified.
            For example, setting this member to <see cref="F:CookPopularControl.Controls.IconState.Hidden"/>
            causes only the item's hidden
            state to be retrieved.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.BalloonText">
            <summary>
            String with the text for a balloon ToolTip. It can have a maximum of 255 characters.
            To remove the ToolTip, set the NIF_INFO flag in uFlags and set szInfo to an empty string.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.VersionOrTimeout">
            <summary>
            Mainly used to set the version when <see cref="M:CookPopularControl.Controls.TrayIcon.Shell_NotifyIcon(CookPopularControl.Controls.NotifyCommand,CookPopularControl.Controls.TrayIconData@)"/> is invoked
            with <see cref="F:CookPopularControl.Controls.NotifyCommand.SetVersion"/>. However, for legacy operations,
            the same member is also used to set timeouts for balloon ToolTips.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.BalloonTitle">
            <summary>
            String containing a title for a balloon ToolTip. This title appears in boldface
            above the text. It can have a maximum of 63 characters.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.BalloonFlags">
            <summary>
            Adds an icon to a balloon ToolTip, which is placed to the left of the title. If the
            <see cref="F:CookPopularControl.Controls.TrayIconData.BalloonTitle"/> member is zero-length, the icon is not shown.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.TaskbarIconGuid">
            <summary>
            Windows XP (Shell32.dll version 6.0) and later.<br/>
            - Windows 7 and later: A registered GUID that identifies the icon.
              This value overrides uID and is the recommended method of identifying the icon.<br/>
            - Windows XP through Windows Vista: Reserved.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TrayIconData.CustomBalloonIconHandle">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later. The handle of a customized
            balloon icon provided by the application that should be used independently
            of the tray icon. If this member is non-NULL and the <see cref="F:CookPopularControl.Controls.BalloonFlags.User"/>
            flag is set, this icon is used as the balloon icon.<br/>
            If this member is NULL, the legacy behavior is carried out.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.TrayIconData.CreateDefault(System.IntPtr)">
            <summary>
            Creates a default data structure that provides
            a hidden taskbar icon without the icon being set.
            </summary>
            <param name="handle"></param>
            <returns>NotifyIconData</returns>
        </member>
        <member name="T:CookPopularControl.Controls.ScreenEdge">
            <summary>
            A value that specifies an edge of the screen.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScreenEdge.Undefined">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScreenEdge.Left">
            <summary>
            Left edge.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScreenEdge.Top">
            <summary>
            Top edge.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScreenEdge.Right">
            <summary>
            Right edge.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScreenEdge.Bottom">
            <summary>
            Bottom edge.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.NotifyCommand">
            <summary>
            Main operations performed on the <see cref="M:CookPopularControl.Controls.TrayIcon.Shell_NotifyIcon(CookPopularControl.Controls.NotifyCommand,CookPopularControl.Controls.TrayIconData@)"/> function.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyCommand.Add">
            <summary>
            The taskbar icon is being created.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyCommand.Modify">
            <summary>
            The settings of the taskbar icon are being updated.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyCommand.Delete">
            <summary>
            The taskbar icon is deleted.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyCommand.SetFocus">
            <summary>
            Focus is returned to the taskbar icon. Currently not in use.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyCommand.SetVersion">
            <summary>
            Shell32.dll version 5.0 and later only. Instructs the taskbar
            to behave according to the version number specified in the 
            uVersion member of the structure pointed to by lpdata.
            This message allows you to specify whether you want the version
            5.0 behavior found on Microsoft Windows 2000 systems, or the
            behavior found on earlier Shell versions. The default value for
            uVersion is zero, indicating that the original Windows 95 notify
            icon behavior should be used.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.IconDataMembers">
            <summary>
            Indicates which members of a <see cref="T:CookPopularControl.Controls.TrayIconData"/> structure
            were set, and thus contain valid data or provide additional information
            to the ToolTip as to how it should display.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.Message">
            <summary>
            The message ID is set.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.Icon">
            <summary>
            The notification icon is set.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.Tip">
            <summary>
            The tooltip is set.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.State">
            <summary>
            State information (<see cref="T:CookPopularControl.Controls.IconState"/>) is set. This
            applies to both <see cref="T:CookPopularControl.Controls.IconState"/> and
            <see cref="F:CookPopularControl.Controls.TrayIconData.StateMask"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.Info">
            <summary>
            The balloon ToolTip is set. Accordingly, the following
            members are set: <see cref="F:CookPopularControl.Controls.TrayIconData.BalloonText"/>,
            <see cref="F:CookPopularControl.Controls.TrayIconData.BalloonTitle"/>, <see cref="F:CookPopularControl.Controls.TrayIconData.BalloonFlags"/>,
            and <see cref="F:CookPopularControl.Controls.TrayIconData.VersionOrTimeout"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.Realtime">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later. If the ToolTip
            cannot be displayed immediately, discard it.<br/>
            Use this flag for ToolTips that represent real-time information which
            would be meaningless or misleading if displayed at a later time.
            For example, a message that states "Your telephone is ringing."<br/>
            This modifies and must be combined with the <see cref="F:CookPopularControl.Controls.IconDataMembers.Info"/> flag.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconDataMembers.UseLegacyToolTips">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later.
            Use the standard ToolTip. Normally, when uVersion is set
            to NOTIFYICON_VERSION_4, the standard ToolTip is replaced
            by the application-drawn pop-up user interface (UI).
            If the application wants to show the standard tooltip
            in that case, regardless of whether the on-hover UI is showing,
            it can specify NIF_SHOWTIP to indicate the standard tooltip
            should still be shown.<br/>
            Note that the NIF_SHOWTIP flag is effective until the next call 
            to Shell_NotifyIcon.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.IconState">
            <summary>
            The state of the icon - can be set to hide the icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconState.Visible">
            <summary>
            The icon is visible.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.IconState.Hidden">
            <summary>
            Hide the icon.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.NotifyIconVersion">
            <summary>
            The notify icon version that is used. The higher the version, the more capabilities are available.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyIconVersion.Win95">
            <summary>
            Default behavior (legacy Win95). Expects
            a <see cref="T:CookPopularControl.Controls.TrayIconData"/> size of 488.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyIconVersion.Win2000">
            <summary>
            Behavior representing Win2000 an higher. Expects
            a <see cref="T:CookPopularControl.Controls.TrayIconData"/> size of 504.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.NotifyIconVersion.Vista">
            <summary>
            Extended tooltip support, which is available for Vista and later.
            Detailed information about what the different versions do, can be found <a href="https://docs.microsoft.com/en-us/windows/win32/api/shellapi/nf-shellapi-shell_notifyicona">here</a>
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BalloonFlags">
            <summary>
            Flags that define the icon that is shown on a balloon tooltip.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.None">
            <summary>
            No icon is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.Info">
            <summary>
            An information icon is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.Warning">
            <summary>
            A warning icon is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.Error">
            <summary>
            An error icon is displayed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.User">
            <summary>
            Windows XP Service Pack 2 (SP2) and later.
            Use a custom icon as the title icon.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.NoSound">
            <summary>
            Windows XP (Shell32.dll version 6.0) and later.
            Do not play the associated sound. Applies only to balloon ToolTips.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.LargeIcon">
            <summary>
            Windows Vista (Shell32.dll version 6.0.6) and later. The large version
            of the icon should be used as the balloon icon. This corresponds to the
            icon with dimensions SM_CXICON x SM_CYICON. If this flag is not set,
            the icon with dimensions XM_CXSMICON x SM_CYSMICON is used.<br/>
            - This flag can be used with all stock icons.<br/>
            - Applications that use older customized icons (NIIF_USER with hIcon) must
              provide a new SM_CXICON x SM_CYICON version in the tray icon (hIcon). These
              icons are scaled down when they are displayed in the System Tray or
              System Control Area (SCA).<br/>
            - New customized icons (NIIF_USER with hBalloonIcon) must supply an
              SM_CXICON x SM_CYICON version in the supplied icon (hBalloonIcon).
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.BalloonFlags.RespectQuietTime">
            <summary>
            Windows 7 and later.
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.GroupLabel">
            <summary>
            标签组
            </summary>
            <remarks>子项必须使用<see cref="T:CookPopularControl.Controls.GroupLableItem"/></remarks>
        </member>
        <member name="P:CookPopularControl.Controls.GroupLabel.HasCloseButton">
            <summary>
            是否有关闭功能
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.GroupLabel.ItemClosedEvent">
            <summary>
            <see cref="F:CookPopularControl.Controls.GroupLabel.ItemClosedEvent"/>标识子项删除事件
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.GroupLableItem">
            <summary>
            <see cref="T:CookPopularControl.Controls.GroupLabel"/>的子项数据
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.LabelAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.Label"/>的附加属性类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LabelAssistant.HeaderProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LabelAssistant.HeaderProperty"/>标识标签头的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LabelAssistant.HeaderTemplateProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LabelAssistant.HeaderTemplateProperty"/>标识标签标头的数据模板
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LabelAssistant.HeaderTemplateSelectorProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LabelAssistant.HeaderTemplateSelectorProperty"/>标识标签标头的数据模板选择器
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LabelAssistant.HeaderStringFormatProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LabelAssistant.HeaderStringFormatProperty"/>标识标签标头的数据模板选择器
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ListViewAssistant">
            <summary>
            <see cref="T:System.Windows.Controls.ListView"/>的附加属性基类
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DotCircleLoading">
            <summary>
            表示点按照圆的运动轨迹形成的动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DotLineLoading">
            <summary>
            表示点按照直线的运动轨迹形成的动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DotLoadingBase">
            <summary>
            表示由点组成的动画的基类
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.IsDotRunning">
            <summary>
            Dot是否正在运动
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.IsDotRunningProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.IsDotRunning"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotCount">
            <summary>
            点的数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotCountProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotCount"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotDiameter">
            <summary>
            点的半径
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotDiameterProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotDiameter"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.IsDotRadiusEqualScale">
            <summary>
            Dot半径是按照否比例系数变化
            </summary>
            <remarks>默认值为false</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.IsDotRadiusEqualScaleProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.IsDotRadiusEqualScale"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotStroke">
            <summary>
            点的BorderBrush
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotStrokeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotStroke"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotStrokeThickness">
            <summary>
            点的BoderThcikness
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotStrokeThicknessProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotStrokeThickness"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotInterval">
            <summary>
            相邻点之间的间隔距离
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotIntervalProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotInterval"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotDuration">
            <summary>
            动画持续时间
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotDurationProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotDuration"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotRunSpeed">
            <summary>
            点的运行速率
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotRunSpeedProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotRunSpeed"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.DotDelayTime">
            <summary>
            点之间延迟时间
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.DotDelayTimeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DotLoadingBase.DotDelayTime"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.DotLoadingBase.IsDotRunAsConstant">
            <summary>
            点是否匀速运动
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotLoadingBase.IsDotRunAsConstantProperty">
            <summary>
            提供的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.OnPropertiesValueChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            依赖属性值改变时触发
            </summary>
            <param name="d"></param>
            <param name="e"></param>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.UpdateDotsAnimation">
            <summary>
            更新点动画
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.ConstantSpeedRun">
            <summary>
            匀速运动
            </summary>
            <remarks><see cref="P:CookPopularControl.Controls.DotLoadingBase.IsDotRunAsConstant"/>为True时</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.UDSpeedRun">
            <summary>
            加速与减速运动
            </summary>
            <remarks><see cref="P:CookPopularControl.Controls.DotLoadingBase.IsDotRunAsConstant"/>为False时</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.CreateContainer(System.Int32)">
            <summary>
            创建一个容器来做动画
            </summary>
            <param name="index"></param>
            <returns>容器</returns>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.CreateEllipse(System.Int32)">
            <summary>
            创建点
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.DotLoadingBase.StartValue(System.Int32)">
            <summary>
            初始值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.DotOpacityLoading">
            <summary>
            表示一组点按照直线轨迹运动并附加有透明度变化的加载动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DotPendulumLoading">
            <summary>
            表示点按照钟摆运动的轨迹形成的动画
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotPendulumLoading.PendulumSwingAngleProperty">
            <summary>
            钟摆的摆幅
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DotPendulumLoading.PendulumSlipDistanceProperty">
            <summary>
            钟摆的滑动距离
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.DotPendulumLoading.GetFramesWhenAngleChanged(System.Windows.Media.Animation.DoubleAnimationUsingKeyFrames,System.Int32,System.Double,System.Int32)">
            <summary>
            获取动画的<see cref="T:System.Windows.Media.Animation.DoubleKeyFrame"/>对象的集合
            </summary>
            <param name="frames"></param>
            <param name="index"></param>
            <param name="value"></param>
            <param name="flag">标志位,angle为0时值为1，angle不为0是，值为0</param>
        </member>
        <member name="T:CookPopularControl.Controls.RecCircleLoading">
            <summary>
            表示一组矩形按照圆的轨迹形成的动画
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecCircleLoading.IsOpacityChanging">
            <summary>
            Opacity是否从小到大变化
            </summary>
            <remarks>由小到大为false，恒定为true</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.RecCircleLoading.IsOpacityChangingProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecCircleLoading.IsOpacityChanging"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecCircleLoading.IsOpacityCycle">
            <summary>
            Opacity是否循环变化
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecCircleLoading.IsOpacityCycleProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecCircleLoading.IsOpacityCycle"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.RecColumnLoading">
            <summary>
            表示一组矩形按照音调高低的轨迹进行运动
            </summary>
            <remarks>适合音乐播放、频率变化</remarks>
        </member>
        <member name="T:CookPopularControl.Controls.RecGridLoading">
            <summary>
            表示一组矩形按照DataGrid的轨迹形成的动画
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.RecGridLoading.CreateNN(System.Int32)">
            <summary>
            组建N*N的正方形点集合
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.RecLoadingBase">
            <summary>
            表示由矩形组成的一组动画基类
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.IsRecRunning">
            <summary>
            是否正在运动
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.IsRecRunningProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.IsRecRunning"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecWidth">
            <summary>
            矩形宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecWidthProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecWidth"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecHeight">
            <summary>
            矩形高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecHeightProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecHeight"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecCount">
            <summary>
            矩形数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecCountProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecCount"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecInterval">
            <summary>
            相邻矩形的间距
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecIntervalProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecInterval"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecDuration">
            <summary>
            动画持续时间
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecDurationProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecDuration"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecRunSpeed">
            <summary>
            速率
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecRunSpeedProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecRunSpeed"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RecLoadingBase.RecDelayTime">
            <summary>
            延迟时间
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RecLoadingBase.RecDelayTimeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RecLoadingBase.RecDelayTime"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.RecLoadingBase.UpdateRectangleAnimation">
            <summary>
            更新动画
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.RecLoadingBase.PrepareRun">
            <summary>
            准备矩形
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.RecLoadingBase.CreateContainer(System.Int32)">
            <summary>
            创建一个容器装载矩形
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.RecLoadingBase.CreateRectangle(System.Int32)">
            <summary>
            创建一个矩形
            </summary>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.RecLoadingBase.StartValue(System.Int32)">
            <summary>
            起始值
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.BraceletLoading">
            <summary>
            表示像手环一样的动画
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.CharacterLoading">
            <summary>
            表示简单的Loading...文字
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CharacterLoading.DotDiameter">
            <summary>
            点(省略号)的直径
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CharacterLoading.DotDiameterProperty">
            <summary>
            提供的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CharacterLoading.DotCount">
            <summary>
            点(省略号)的数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CharacterLoading.DotCountProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.CharacterLoading.DotCount"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CharacterLoading.CharacterContent">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CharacterLoading.CharacterContentProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.CharacterLoading.CharacterContent"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.CharacterLoading.CreateEllipse(System.Int32)">
            <summary>
            创建点
            </summary>
            <returns>圆点</returns>
        </member>
        <member name="T:CookPopularControl.Controls.LoadingBase">
            <summary>
            简单动画的基类
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.LoadingBase.IsRunning">
            <summary>
            是否正在运动
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LoadingBase.IsRunningProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.LoadingBase.IsRunning"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.LoadingBase.Duration">
            <summary>
            动画持续时长
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LoadingBase.DurationProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.LoadingBase.Duration"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.LoadingBase.RunSpeed">
            <summary>
            速率
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LoadingBase.RunSpeedProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.LoadingBase.RunSpeed"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.LoadingBase.PrepareRun">
            <summary>
            准备图形
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PlaneLoading">
            <summary>
            表示飞机飞行的动画
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PlaneLoading.PlaneText">
            <summary>
            文本内容
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PlaneLoading.PlaneTextProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PlaneLoading.PlaneText"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.RaindropLoading">
            <summary>
            表示一个雨点轨迹动画
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RaindropLoading.RaindropStroke">
            <summary>
            颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RaindropLoading.RaindropStrokeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RaindropLoading.RaindropStroke"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.RaindropLoading.RaindropStrokeThickness">
            <summary>
            厚度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.RaindropLoading.RaindropStrokeThicknessProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.RaindropLoading.RaindropStrokeThickness"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.RaindropLoading.CreateRaindrop">
            <summary>
            创建雨点
            </summary>
            <returns>圆点</returns>
        </member>
        <member name="T:CookPopularControl.Controls.MediaPlayer">
            <summary>
            媒体播放器
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.MediaPlayer.CurrentUri">
            <summary>
            当前媒体资源路径
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.MediaPlayer.ItemSource">
            <summary>
            媒体资源集合
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.MediaPlayer.ItemSourceProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.MediaPlayer.ItemSource"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.MediaPlayer.IsCyclePlay">
            <summary>
            是否循环播放
            </summary>
            <remarks>指Next时资源内循环，单个资源循环播放</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.MediaPlayer.IsCyclePlayProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.MediaPlayer.IsCyclePlay"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.MediaView">
            <summary>
            UserMediaView.xaml 的交互逻辑
            </summary>
            <summary>
            MediaView
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.MediaView.CollapsedControl(System.Boolean,System.Double)">
            <summary>
            ControlGrid显示与隐藏
            </summary>
            <param name="isControlPop">是否打开</param>
            <param name="times">动画时间</param>
        </member>
        <member name="M:CookPopularControl.Controls.MediaView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.CircleMenu">
            <summary>
            弧形、圆形菜单
            </summary>
            <remarks>子项布局采用<see cref="T:CookPopularControl.Controls.ArcPanel"/></remarks>
        </member>
        <member name="P:CookPopularControl.Controls.CircleMenu.IsShowMenu">
            <summary>
            是否显示菜单
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CircleMenu.IsShowMenuProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.CircleMenu.IsShowMenu"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CircleMenu.Radius">
            <summary>
            弧形半径
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CircleMenu.RadiusProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.CircleMenu.Radius"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CircleMenu.ArcAngle">
            <summary>
            弧形角度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CircleMenu.ArcAngleProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.CircleMenu.ArcAngle"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.CircleMenu.IsItemRotate">
            <summary>
            子项是否围绕自身旋转
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.CircleMenu.IsItemRotateProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.CircleMenu.IsItemRotate"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PopupMenu">
            <summary>
            弹出菜单
            </summary>
            <remarks>
            子项布局采用<see cref="T:System.Windows.Controls.StackPanel"/>;
            建议菜单子项属性设置Width=50，Height=50，可以保证对齐
            </remarks>
        </member>
        <member name="P:CookPopularControl.Controls.PopupMenu.IsShowMenu">
            <summary>
            是否显示菜单
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PopupMenu.IsShowMenuProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.PopupMenu.IsShowMenu"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PopupMenu.PopupPosition">
            <summary>
            弹出方向
            </summary>
            <remarks>共9个方向，详细看<see cref="T:CookPopularControl.Communal.Data.PopupPosition"/></remarks>
        </member>
        <member name="F:CookPopularControl.Controls.PopupMenu.PopupPositionProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.PopupMenu.PopupPosition"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PopupMenu.PopupAnimation">
            <summary>
            弹出动画
            </summary>
            <remarks>共4中动画</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.PopupMenu.PopupAnimationProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.PopupMenu.PopupAnimation"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.BubbleMessage">
            <summary>
            气泡消息
            </summary>
            <remarks>
            注意:
            当<see cref="T:System.Windows.Controls.Primitives.PopupAnimation"/>的值为<see cref="F:System.Windows.Controls.Primitives.PopupAnimation.Slide"/>时,
            消息容器的水平和垂直方向如果都是Center或Stretch,
            将直接决定动画为<see cref="F:System.Windows.Controls.Primitives.PopupAnimation.Scroll"/>，
            另外<see cref="T:System.Windows.Controls.Primitives.PopupAnimation"/>提供4中动画效果
            </remarks> 
        </member>
        <member name="T:CookPopularControl.Controls.NotifyMessageBase">
            <summary>
            消息通知的基类
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PopupMessage">
            <summary>
            弹出消息
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.PopupMessage.Show(System.Object,CookPopularControl.Communal.Data.PopupAnimationX,System.Boolean,System.Double)">
            <summary>
            打开通知消息
            </summary>
            <param name="content">内容</param>
            <param name="animation">动画类型</param>
            <param name="isStayOpen">是否一直打开消息</param>
            <param name="waitTime">自动关闭消息时保持打开的时间</param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.TaskbarIcon">
            <summary>
            任务栏图标
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TaskbarIcon.IsStartTaskbarFlash">
            <summary>
            程序启动后是否开启任务栏闪烁
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TaskbarIcon.IsStartTaskbarFlashProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.TaskbarIcon.IsStartTaskbarFlash"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.TaskbarIcon.IsStartTaskbarIconFlash">
            <summary>
            是否启用任务栏图标闪烁
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TaskbarIcon.IsStartTaskbarIconFlashProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.TaskbarIcon.IsStartTaskbarIconFlash"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Alertor">
            <summary>
            警报器
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Alertor.Duration">
            <summary>
            单次警报的时长
            </summary>
            <remarks>单位：s</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.Alertor.DurationProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Alertor.Duration"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Alertor.IsCancelAlarm">
            <summary>
            解除警报
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Alertor.IsCancelAlarmProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Alertor.IsCancelAlarm"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Alertor.CurrentState">
            <summary>
            警报器当前状态
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Alertor.CurrentStateProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Alertor.CurrentState"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Alertor.StateChangedEvent">
            <summary>
            <see cref="F:CookPopularControl.Controls.Alertor.StateChangedEvent"/>标识警报器状态变化时的事件
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Badge">
            <summary>
            
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Badge.Element">
            <summary>
            表示<see cref="T:CookPopularControl.Controls.Badge"/>的元素
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Badge.ElementProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Badge.Element"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Badge.DirectionProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Badge.Direction"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Badge.BadgeMarginProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Badge.BadgeMargin"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Badge.IsShowBadgeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Badge.IsShowBadge"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.EditorType">
            <summary>
            可编辑标签元素的类型
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.EditingTag">
            <summary>
            可编辑标签
            </summary>
            <remarks>由两个<see cref="T:System.Windows.Controls.ContentControl"/>组合而成的标签控件</remarks>
        </member>
        <member name="P:CookPopularControl.Controls.EditingTag.HeaderWidth">
            <summary>
            标签头的宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.EditingTag.HeaderWidthProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.EditingTag.HeaderWidth"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.EditingTag.HeaderHorizontalAlignment">
            <summary>
            标签头的水平定位
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.EditingTag.HeaderHorizontalAlignmentProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.EditingTag.HeaderHorizontalAlignment"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.EditingTag.HeaderVerticalAlignment">
            <summary>
            标签头的垂直定位
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.EditingTag.HeaderVerticalAlignmentProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.EditingTag.HeaderVerticalAlignment"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.EditingTag.EditorType">
            <summary>
            <see cref="T:CookPopularControl.Controls.EditingTag"/>内容类型，<see cref="P:CookPopularControl.Controls.EditingTag.EditorType"/>默认为<see cref="T:System.Windows.Controls.TextBox"/>
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.EditingTag.EditorTypeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.EditingTag.EditorType"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.EditingTag.HeaderMargin">
            <summary>
            标签头与内容间距
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.EditingTag.HeaderMarginProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.EditingTag.HeaderMargin"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.EditingTagAssistant">
            <summary>
            可编辑标签的附加属性类
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.GetLoadedInstances">
            <summary>
            Helper method to get all the currently loaded layouts.
            </summary>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.Find(CookPopularControl.Controls.Dragables.DragableTabControl)">
            <summary>
            Finds the location of a tab control withing a layout.
            </summary>
            <param name="tabablzControl"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.Branch(CookPopularControl.Controls.Dragables.DragableTabControl,System.Windows.Controls.Orientation,System.Boolean)">
            <summary>
            Creates a split in a layout, at the location of a specified <see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>.
            </summary>
            <para></para>
            <param name="tabablzControl">Tab control to be split.</param>
            <param name="orientation">Direction of split.</param>
            <param name="makeSecond">Set to <c>true</c> to make the current tab control push into the right hand or bottom of the split.</param>
            <remarks>The tab control to be split must be hosted in a layout control.</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.Branch(CookPopularControl.Controls.Dragables.DragableTabControl,System.Windows.Controls.Orientation,System.Boolean,System.Double)">
            <summary>
            Creates a split in a layout, at the location of a specified <see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>.
            </summary>
            <para></para>
            <param name="tabablzControl">Tab control to be split.</param>
            <param name="orientation">Direction of split.</param>
            <param name="makeSecond">Set to <c>true</c> to make the current tab control push into the right hand or bottom of the split.</param>
            <param name="firstItemProportion">Sets the proportion of the first tab control, with 0.5 being 50% of available space.</param>
            <remarks>The tab control to be split must be hosted in a layout control.  <see cref="P:CookPopularControl.Controls.Layout.BranchTemplate" /> should be set (typically via XAML).</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.Branch(CookPopularControl.Controls.Dragables.DragableTabControl,CookPopularControl.Controls.Dragables.DragableTabControl,System.Windows.Controls.Orientation,System.Boolean,System.Double)">
            <summary>
            Creates a split in a layout, at the location of a specified <see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>.
            </summary>
            <para></para>
            <param name="tabablzControl">Tab control to be split.</param>
            <param name="newSiblingTabablzControl">New sibling tab control (otherwise <see cref="P:CookPopularControl.Controls.Layout.BranchTemplate"/> will be used).</param>
            <param name="orientation">Direction of split.</param>
            <param name="makeCurrentSecond">Set to <c>true</c> to make the current tab control push into the right hand or bottom of the split.</param>
            <param name="firstItemProportion">Sets the proportion of the first tab control, with 0.5 being 50% of available space.</param>
            <remarks>The tab control to be split must be hosted in a layout control. </remarks>
        </member>
        <member name="P:CookPopularControl.Controls.Layout.Partition">
            <summary>
            Use in conjuction with the <see cref="P:CookPopularControl.Controls.Dragables.InterTabController.Partition"/> on a <see cref="T:CookPopularControl.Controls.Dragables.DragableTabControl"/>
            to isolate drag and drop spaces/control instances.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Layout.FloatingItemsContainerMarginProperty">
            <summary>
            Defines a margin for the container which hosts all floating items.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Layout.FloatingItemsContainerMargin">
            <summary>
            Defines a margin for the container which hosts all floating items.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Layout.FloatingItems">
            <summary>
            Floating items, such as tool/MDI windows, which will sit above the <see cref="!:Content"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Layout.FloatingItemsSource">
            <summary>
            Floating items, such as tool/MDI windows, which will sit above the <see cref="!:Content"/>.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Layout.FloatingItemsControlStyle">
            <summary>
            The style to be applied to the <see cref="!:DragablzItemsControl"/> which is used to display floating items.
            In most scenarios it should be OK to leave this to that applied by the default style.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Layout.IsTopLeftItemProperty">
            <summary>
            Indicates if an item/tab control within a layout is contained at the top most and left most branch item.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.SetIsTopLeftItem(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Indicates if an item/tab control within a layout is contained at the top most and left most branch item.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.GetIsTopLeftItem(System.Windows.DependencyObject)">
            <summary>
            Indicates if an item/tab control within a layout is contained at the top most and left most branch item.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Layout.OnApplyTemplate">
            <summary>When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</summary>
        </member>
        <member name="T:CookPopularControl.Controls.AnimationPanel">
            <summary>
            标识动画面板布局的抽象基类
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPanel.Dampening">
            <summary>
            表示阻尼大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationPanel.DampeningProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.AnimationPanel.Dampening"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPanel.Attraction">
            <summary>
            表示吸附力大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationPanel.AttractionProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.AnimationPanel.Attraction"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.AnimationPanel.Variation">
            <summary>
            表示变化大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.AnimationPanel.VariationProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.AnimationPanel.Variation"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ArcPanel">
            <summary>
            弧形、圆形布局
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ArcPanel.ArcAngle">
            <summary>
            弧形的角度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ArcPanel.ArcAngleProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ArcPanel.ArcAngle"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ArcPanel.Radius">
            <summary>
            半径大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ArcPanel.RadiusProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ArcPanel.Radius"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ArcPanel.IntervalAngle">
            <summary>
            间隔角度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ArcPanel.IntervalAngleProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ArcPanel.IntervalAngle"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ArcPanel.IsItemRotate">
            <summary>
            子项是否围绕自身旋转
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ArcPanel.IsItemRotateProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ArcPanel.IsItemRotate"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.SimpleGrid">
            <summary>
            重叠面板
            </summary>
            <remarks>用于代替Grid</remarks>
        </member>
        <member name="T:CookPopularControl.Controls.UniformStackPanel">
            <summary>
            按照水平或垂直方向等份布局的面板
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.UniformStackPanel.UniformType">
            <summary>
            如果值为true,子项之间、子项与边界之间间距相等
            如果为false，仅子项之间间距相等，子项与边界之间间距肯能不相等
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.UniformStackPanel.UniformTypeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.UniformStackPanel.UniformType"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.UniformStackPanel.OrientationProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.UniformStackPanel.Orientation"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.UniformStackPanel.ItemsHorizontalAlignmentProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.UniformStackPanel.ItemsHorizontalAlignment"/>的依赖属性
            </summary>
            <remarks>当<see cref="P:CookPopularControl.Controls.UniformStackPanel.Orientation"/>为<see cref="F:System.Windows.Controls.Orientation.Vertical"/>使用</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.UniformStackPanel.ItemsVerticalAlignmentProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.UniformStackPanel.ItemsVerticalAlignment"/>的依赖属性
            </summary>
            <remarks>当<see cref="P:CookPopularControl.Controls.UniformStackPanel.Orientation"/>为<see cref="F:System.Windows.Controls.Orientation.Horizontal"/>使用</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.UniformType.Every">
            <summary>
            每一项等间距
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.UniformType.Item">
            <summary>
            只有子项等间距
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.VirtualPanel">
            <summary>
            Provides a framework for <see cref="T:System.Windows.Controls.Panel"/> elements that virtualize their child data collection. This is an abstract class.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.VirtualPanel.IsVirtualizingProperty">
            <summary>
            Identifies the <see cref="P:CookPopularControl.Controls.VirtualPanel.IsVirtualizing"/> property.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.OnIsVirtualizingChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Handles the event that occurs when the value of the <see cref="P:CookPopularControl.Controls.VirtualPanel.IsVirtualizing"/> dependency property has changed.
            </summary>
            <param name="d">The dependency object on which the dependency property has changed.</param>
            <param name="e">The event args containing the old and new values of the dependency property.</param>
        </member>
        <member name="P:CookPopularControl.Controls.VirtualPanel.IsVirtualizing">
            <summary>
            Gets or sets a value that indicates that this <see cref="T:CookPopularControl.Controls.VirtualPanel"/> is virtualizing its child collection.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.VirtualPanel.RealizationPriorityProperty">
            <summary>
            Identifies the <see cref="P:CookPopularControl.Controls.VirtualPanel.RealizationPriority"/> property.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.VirtualPanel.RealizationPriority">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Threading.DispatcherPriority"/> of the realization pass for this <see cref="T:CookPopularControl.Controls.VirtualPanel"/>.
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.VirtualPanel.IndexForItemContainerProperty">
            <summary>
            This is an attached property that the panel sets on each container (generated or direct) to point back to the index of the item.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.VirtualPanel.RealizeOperation">
            <summary>
            Holds the latest queued realization operation.
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.VirtualPanel.ItemsOwner">
            <summary>
            Returns the <see cref="T:System.Windows.Controls.ItemsControl"/> that this panel hosts items for.
            </summary>
            <value></value>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.IndexFromContainer(System.Windows.UIElement)">
            <summary>
            Returns the index to an item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement"/>. 
            </summary>
            <param name="container">The <see cref="T:System.Windows.UIElement"/> that corresponds to the item index to be returned.</param>
            <returns>An <see cref="T:System.Int32"/> index to an item that corresponds to the specified <see cref="T:System.Windows.UIElement"/> if it was generated and hosted by this panel; otherwise, <c>-1</c>.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.ItemFromContainer(System.Windows.UIElement)">
            <summary>
            Returns the item that corresponds to the specified, generated <see cref="T:System.Windows.UIElement"/>. 
            </summary>
            <param name="container">The <see cref="T:System.Windows.UIElement"/> that corresponds to the item to be returned.</param>
            <returns>An <see cref="T:System.Object"/> that is the item which corresponds to the specified <see cref="T:System.Windows.UIElement"/> if it was generated and hosted by this panel; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.ContainerFromIndex(System.Int32)">
            <summary>
            Returns the <see cref="T:System.Windows.UIElement"/> corresponding to the item at the given index within the item collection if it has been realized.
            </summary>
            <param name="itemIndex">The index of the desired item. </param>
            <returns>The element corresponding to the item at the given index within the item collection or returns <c>null</c> if the item is not realized.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.ContainerFromItem(System.Object)">
            <summary>
            Returns the <see cref="T:System.Windows.UIElement"/> corresponding to the given item if it has been realized.
            </summary>
            <param name="item">The <see cref="T:System.Object"/> item to find the <see cref="T:System.Windows.UIElement"/> for.</param>
            <returns>A <see cref="T:System.Windows.UIElement"/> that corresponds to the given item. Returns <c>null</c> if the item does not belong to the item collection, or if a <see cref="T:System.Windows.UIElement"/> has not been generated for it.</returns>
            <remarks>Use caution when calling this method as it does a linear search for the item.  Consider calling <see cref="M:CookPopularControl.Controls.VirtualPanel.ContainerFromIndex(System.Int32)"/> instead.</remarks>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.InvalidateReality">
            <summary>
            Invalidates the realization state of all items being hosted by this panel. After the invalidation, the panel will have its reality updated, which will occur asynchronously unless subsequently forced by <see cref="M:CookPopularControl.Controls.VirtualPanel.UpdateReality"/>. 
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.UpdateReality">
            <summary>
            Ensures that all items being hosted by this panel are properly realized or virtualized.
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.RealizeCore(System.Object)">
            <summary>
            Manages calls to <see cref="M:CookPopularControl.Controls.VirtualPanel.RealizeOverride(System.Collections.IEnumerable,System.Object)"/>.
            </summary>
            <param name="state">A custom state object left over from a previous call to <see cref="M:CookPopularControl.Controls.VirtualPanel.RealizeCore(System.Object)"/> if additional processing was needed.</param>
            <returns>A custom state object if additional processing is needed; otherwise, <c>null</c>.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.RealizeOverride(System.Collections.IEnumerable,System.Object)">
            <summary>
            When overridden in a derived class, realizes and/or virtualizes items, optionally deferring additional realization.
            </summary>
            <param name="items">The current items being hosted by this panel.</param>
            <param name="state">A custom state object left over from a previous call to <see cref="M:CookPopularControl.Controls.VirtualPanel.RealizeOverride(System.Collections.IEnumerable,System.Object)"/> if additional processing was needed.</param>
            <returns>Implementations may optionally defer additional processing by return a non-<c>null</c> object, which will then be passed to a future call to <see cref="M:CookPopularControl.Controls.VirtualPanel.RealizeOverride(System.Collections.IEnumerable,System.Object)"/>.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.OnIsItemsHostChanged(System.Boolean,System.Boolean)">
            <summary>
            Indicates that the <see cref="P:System.Windows.Controls.Panel.IsItemsHost"/> property value has changed.
            </summary>
            <param name="oldIsItemsHost">The old property value.</param>
            <param name="newIsItemsHost">The new property value.</param>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.OnIsVirtualizingChanged(System.Boolean,System.Boolean)">
            <summary>
            Indicates that the <see cref="P:CookPopularControl.Controls.VirtualPanel.IsVirtualizing"/> property value has changed.
            </summary>
            <param name="oldIsVirtualizing">The old property value.</param>
            <param name="newIsVirtualizing">The new property value.</param>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.OnItemsChanged(System.Object,System.Windows.Controls.Primitives.ItemsChangedEventArgs)">
            <summary>
            Maintains event handlers when the items source has changed.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> that raised the event.</param>
            <param name="args">Provides data for the <see cref="E:System.Windows.Controls.ItemContainerGenerator.ItemsChanged"/> event.</param>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.OnItemsChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Called when the <see cref="P:System.Windows.Controls.ItemsControl.Items"/> collection that is associated with the <see cref="T:System.Windows.Controls.ItemsControl"/> for this <see cref="T:System.Windows.Controls.Panel"/> changes.
            </summary>
            <param name="sender">The <see cref="T:System.Object"/> that raised the event.</param>
            <param name="args">Provides data for the ItemsChangedEvent.</param>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.RealizeItem(System.Int32)">
            <summary>
            Realizes an item container for the item with the given index.
            </summary>
            <param name="itemIndex">The index of the item.</param>
            <returns>The child that was created and added to the internal children.</returns>
        </member>
        <member name="M:CookPopularControl.Controls.VirtualPanel.VirtualizeItem(System.Int32)">
            <summary>
            Removes an item container for the item with the given index.
            </summary>
            <param name="itemIndex">The index of the item.</param>
            <returns><c>true</c> if the child had been previously realized and was now removed; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:CookPopularControl.Controls.VirtualPanel.VirtualItemsList">
            <summary>
            Returns a list which represents a subset of the elements in the source list. 
            </summary>
            <remarks>
            This list is used in NotifyCollectionChangedEventArgs because we might be dealing with
            virtualized lists that raise events for items changing when the items haven't been
            loaded into memory yet.  If the client needs to inspect the item, then they can index
            into this list and it will retrieve it from the original source, but if they don't need
            to inspect the item then we spare the cost of the lookup and retrieval.
            </remarks>
        </member>
        <member name="T:CookPopularControl.Controls.PasswordBoxAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.PasswordBox"/>的附加属性类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PasswordBoxAssistant.IsShowIconProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.PasswordBoxAssistant.IsShowIconProperty"/>表示图标是否可见
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PasswordBoxAssistant.IsShowPasswordProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.PasswordBoxAssistant.IsShowPasswordProperty"/>表示密码是否可见
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PasswordBoxAssistant.PasswordProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.PasswordBoxAssistant.PasswordProperty"/>表示可绑定的Password
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PasswordBoxAssistant.IsTriggerProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.PasswordBoxAssistant.IsTriggerProperty"/>表示是否触发PasswordChanged事件
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Gif">
            <summary>
            GIF动画控件
            </summary>
            <remarks>
            https://github.com/XamlAnimatedGif/XamlAnimatedGif
            </remarks>
        </member>
        <member name="P:CookPopularControl.Controls.Gif.IsAutoStart">
            <summary>
            是否自动启动
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Gif.IsAutoStartProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Gif.IsAutoStart"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Gif.GifSource">
            <summary>
            Gif的路径
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Gif.GifSourceProperty">
            <summary>
            表示<see cref="P:CookPopularControl.Controls.Gif.GifSource"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Gif.GifStream">
            <summary>
            Gif的流
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Gif.GifStreamProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.Gif.GifStream"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Gif.GetBitmapSource">
            <summary>
            BitmapSource用于显示System.drawing.bitmap中的图像的帧
            </summary>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.ExtendPopup">
            <summary>
            提供<see cref="T:System.Windows.Controls.Primitives.Popup"/>的扩展控件
            </summary>
            <remarks>可跟随父元素移动</remarks>
        </member>
        <member name="P:CookPopularControl.Controls.ExtendPopup.IsTopMost">
            <summary>
            是否置前
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExtendPopup.IsTopMostProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ExtendPopup.IsTopMostProperty"/>提供<see cref="P:CookPopularControl.Controls.ExtendPopup.IsTopMost"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ExtendPopup.IsPositionUpdate">
            <summary>
            是否跟随父元素移动
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExtendPopup.IsPositionUpdateProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ExtendPopup.IsPositionUpdateProperty"/>提供<see cref="P:CookPopularControl.Controls.ExtendPopup.IsPositionUpdate"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ExtendPopup.IsMouseLeftButtonDownClosed">
            <summary>
            鼠标左键按下是否关闭<see cref="T:CookPopularControl.Controls.ExtendPopup"/>
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ExtendPopup.IsMouseLeftButtonDownClosedProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ExtendPopup.IsMouseLeftButtonDownClosedProperty"/>提供<see cref="P:CookPopularControl.Controls.ExtendPopup.IsMouseLeftButtonDownClosed"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.CircularProgressAssistant">
            <summary>
            表示圆形进度条的附加属性类
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.LinearProgressBarAssistant">
            <summary>
            表示所有<see cref="T:System.Windows.Controls.ProgressBar"/>的附加属性基类
            </summary>
            <remarks>即以LinearProgressBar为基准</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.LinearProgressBarAssistant.IsShowPercentProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LinearProgressBarAssistant.IsShowPercentProperty"/>提供是否显示百分比的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LinearProgressBarAssistant.TextColorProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LinearProgressBarAssistant.TextColorProperty"/>提供文本颜色的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LinearProgressBarAssistant.IsShowIconProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LinearProgressBarAssistant.IsShowIconProperty"/>提供是否添加图标的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.LinearProgressBarAssistant.IconSizeProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.LinearProgressBarAssistant.IconSizeProperty"/>提供图标大小的附加属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.WaveProgressBarAssistant">
            <summary>
            提供WaveProgressBar的附加属性类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WaveProgressBarAssistant.IsStartWaveProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.WaveProgressBarAssistant.IsStartWaveProperty"/>开启波纹
            </summary>
            <remarks>必须设置True，默认为False</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.WaveProgressBarAssistant.WaveStrokeThicknessProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.WaveProgressBarAssistant.WaveStrokeThicknessProperty"/>波纹厚度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WaveProgressBarAssistant.WaveStrokeProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.WaveProgressBarAssistant.WaveStrokeProperty"/>波纹绘制的颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.WaveProgressBarAssistant.WaveHeightProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.WaveProgressBarAssistant.WaveHeightProperty"/>表示波纹的高度
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PropertyItemEditorType">
            <summary>
            指定元素类型
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PropertyGrid">
            <summary>
            属性表格
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyGrid.SelectedObject">
            <summary>
            当前选中的项
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyGrid.SelectedObjectProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyGrid.SelectedObject"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyGrid.PropertyTitle">
            <summary>
            选中项的标题
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyGrid.PropertyTitleProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyGrid.PropertyTitle"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyGrid.PropertyDescription">
            <summary>
            选中项的描述
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyGrid.PropertyDescriptionProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyGrid.PropertyDescription"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyGrid.PropertyTitleWidth">
            <summary>
            属性标题默认宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyGrid.PropertyTitleWidthProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyGrid.PropertyTitleWidth"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.PropertyItem">
            <summary>
            表示<see cref="T:CookPopularControl.Controls.PropertyGrid"/>中一个子项
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.PropertySource">
            <summary>
            属性绑定源
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.IsBrowsable">
            <summary>
            指定某一属性或事件是否应在“属性窗口中显示”
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.IsBrowsableProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.IsBrowsable"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.IsReadOnly">
            <summary>
            指定该属性是只读属性还是读/写属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.IsReadOnlyProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.IsReadOnly"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.Category">
            <summary>
            指定当属性或事件显示再一个设置为“按分类顺序”模式的<see cref="T:CookPopularControl.Controls.PropertyGrid"/>控件中时，
            用于对属性或事件分组的类别名称
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.CategoryProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.Category"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.Description">
            <summary>
            指定属性或事件的描述
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.DescriptionProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.Description"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.DisplayName">
            <summary>
            指定属性、事件或不采用任何参数的公共void方法的显示名称
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.DisplayNameProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.DisplayName"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.PropertyType">
            <summary>
            指定属性类型
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.PropertyTypeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.PropertyType"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.PropertyName">
            <summary>
            指定属性名
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.PropertyNameProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.PropertyName"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.Value">
            <summary>
            属性值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.ValueProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.Value"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.DefaultValue">
            <summary>
            属性默认值
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.DefaultValueProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.DefaultValue"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.Element">
            <summary>
            承接属性的元素
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.ElementProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.Element"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.PropertyItem.EditorFactory">
            <summary>
            属性编辑器工厂
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.PropertyItem.EditorFactoryProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.PropertyItem.EditorFactory"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.QRCodeControl">
            <summary>
            二维码控件
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.IsRefreshChangedEvent">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.IsRefreshChangedEvent"/>标识刷新的路由事件
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.IsShowRefreshIcon">
            <summary>
            是否显示刷新按钮        
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.RefreshButtonFill">
            <summary>
            刷新按钮颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.RefreshButtonFillProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.RefreshButtonFillProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.RefreshButtonFill"/>的附加属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.Duration">
            <summary>
            二维码持续时长
            </summary>
            <remarks>可设置无线等待<see cref="F:System.Threading.Timeout.InfiniteTimeSpan"/>,单位：s</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.DurationProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.DurationProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.Duration"/>的附加属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.QrCodeContent">
            <summary>
            二维码内容
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.QrCodeContentProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.QrCodeContentProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.QrCodeContent"/>的附加属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.QrCodeIcon">
            <summary>
            二维码图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.QrCodeIconProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.QrCodeIconProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.QrCodeIcon"/>的附加属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.QrCodeIconSizePercent">
            <summary>
            图标百分比大小
            </summary>
            <remarks>0~30</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.QrCodeIconSizePercentProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.QrCodeIconSizePercentProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.QrCodeIconSizePercent"/>的附加属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.QrCodeIconBorderWidth">
            <summary>
            图标外边框Border宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.QrCodeIconBorderWidthProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.QrCodeIconBorderWidthProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.QrCodeIconBorderWidth"/>的附加属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.QRCodeControl.QrCodePixelsPerModule">
            <summary>
            二维码像素
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.QRCodeControl.QrCodePixelsPerModuleProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.QRCodeControl.QrCodePixelsPerModuleProperty"/>标识<see cref="P:CookPopularControl.Controls.QRCodeControl.QrCodePixelsPerModule"/>的附加属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.QRCodeControl.SetQRCodeImage(CookPopularControl.Controls.QRCodeControl)">
            <summary>
            设置QRCodeImage
            </summary>
            <param name="qr"></param>
        </member>
        <member name="F:CookPopularControl.Controls.Ripple.RecognizesAccessKeyProperty">
            <summary>
              The DependencyProperty for the RecognizesAccessKey property. 
              Default Value: false 
            </summary> 
        </member>
        <member name="P:CookPopularControl.Controls.Ripple.RecognizesAccessKey">
            <summary> 
              Determine if Ripple should use AccessText in its style
            </summary> 
        </member>
        <member name="M:CookPopularControl.Controls.RippleAssist.SetIsCentered(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Set to <c>true</c> to cause the ripple to originate from the centre of the 
            content.  Otherwise the effect will originate from the mouse down position.        
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:CookPopularControl.Controls.RippleAssist.GetIsCentered(System.Windows.DependencyObject)">
            <summary>
            Set to <c>true</c> to cause the ripple to originate from the centre of the 
            content.  Otherwise the effect will originate from the mouse down position.        
            </summary>
            <param name="element"></param>        
        </member>
        <member name="F:CookPopularControl.Controls.RippleAssist.IsCenteredProperty">
            <summary>
            Set to <c>true</c> to cause the ripple to originate from the centre of the 
            content.  Otherwise the effect will originate from the mouse down position.        
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.RippleAssist.SetIsDisabled(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            Set to <c>True</c> to disable ripple effect
            </summary>
            <param name="element"></param>
            <param name="value"></param>
        </member>
        <member name="M:CookPopularControl.Controls.RippleAssist.GetIsDisabled(System.Windows.DependencyObject)">
            <summary>
            Set to <c>True</c> to disable ripple effect
            </summary>
            <param name="element"></param>        
        </member>
        <member name="F:CookPopularControl.Controls.RippleAssist.IsDisabledProperty">
            <summary>
            Set to <c>True</c> to disable ripple effect
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ExtendedScrollViewer">
            <summary>
            解决滚动条劫持(scroll-wheel-hijack)的问题
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ScrollBarAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>的附加属性基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScrollBarAssistant.IsScrollBarRepeatButtonProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ScrollBarAssistant.IsScrollBarRepeatButtonProperty"/>标识<see cref="T:System.Windows.Controls.Primitives.RepeatButton"/>是否显示，默认True
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScrollBarAssistant.ThumbInsideMarginProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ScrollBarAssistant.ThumbInsideMarginProperty"/>标识<see cref="T:System.Windows.Controls.Primitives.Thumb"/>在<see cref="T:System.Windows.Controls.Primitives.Track"/>中移动时距离边界的位置
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ScrollViewerAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.ScrollViewer"/>的附加属性基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScrollViewerAssistant.IsCornerShowProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ScrollViewerAssistant.IsCornerShowProperty"/>标识右下角的矩形块是否显示
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ScrollViewerAssistant.IsAutoHideScrollBarProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.ScrollViewerAssistant.IsAutoHideScrollBarProperty"/>标识是否自动隐藏<see cref="T:System.Windows.Controls.Primitives.ScrollBar"/>
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.SmoothScrollViewer">
            <summary>
            流畅的滚动轮
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.SmoothScrollViewer.VerticalOffsetProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.SmoothScrollViewer.VerticalOffset"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.DivideLine">
            <summary>
            分割线
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DivideLine.StrokeProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DivideLine.Stroke"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.DivideLine.StrokeThicknessProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.DivideLine.StrokeThickness"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.SliderAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.Slider"/>的附加属性基类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.SliderAssistant.IsShowValueProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.SliderAssistant.IsShowValueProperty"/>标识显示进度值的附加属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.SliderAssistant.SliderSelectionRangeFillProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.SliderAssistant.SliderSelectionRangeFillProperty"/>标识选定范围的填充背景色
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.Star">
            <summary>
            表示点赞类控件
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.StarCount">
            <summary>
            数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Star.StarCountProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.StarCount"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.StarValue">
            <summary>
            当前评分
            </summary>
            <remarks>当<see cref="P:CookPopularControl.Controls.Star.IsAllowHalf"/>为False时，会强制转换为Int型</remarks>
        </member>
        <member name="F:CookPopularControl.Controls.Star.StarValueProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.StarValue"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.StarSize">
            <summary>
            图标大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Star.StarSizeProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.StarSize"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.IsAllowHalf">
            <summary>
            是否允许点赞一半
            </summary>    
            可通过Button的大小与Icon的大小来设置，例如btn.Width = 15; icon.Width = 30;
        </member>
        <member name="F:CookPopularControl.Controls.Star.IsAllowHalfProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.IsAllowHalf"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.IsShowScore">
            <summary>
            是否显示分数
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Star.IsShowScoreProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.IsShowScore"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.StarIcon">
            <summary>
            点赞图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Star.StarIconProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.StarIcon"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Star.Orientation">
            <summary>
            布局方向
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Star.OrientationProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Star.Orientation"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.Star.CreateGeometry(System.Int32)">
            <summary>
            创建图形
            </summary>
            <param name="index">标识第几个图形</param>
            <returns></returns>
        </member>
        <member name="T:CookPopularControl.Controls.Swiper">
            <summary>
            滑块视图容器
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.CurrentIndex">
            <summary>
            当前显示视图的索引
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.CurrentIndexProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.CurrentIndex"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.CurrentItem">
            <summary>
            当前显示的视图
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.CurrentItemProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.CurrentItem"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.IsCyclePlay">
            <summary>
            是否循环播放
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.IsCyclePlayProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.IsCyclePlay"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.IsShowIndicatorDots">
            <summary>
            是否显示面板指示点
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.IsShowIndicatorDotsProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.IsShowIndicatorDots"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.IndicatorDotBrush">
            <summary>
            指示点颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.IndicatorDotBrushProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.IndicatorDotBrush"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.IndicatorActiveDotBrush">
            <summary>
            选中点的颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.IndicatorActiveDotBrushProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.IndicatorActiveDotBrush"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.IsAutoPlay">
            <summary>
            是否自动切换
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.IsAutoPlayProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.IsAutoPlay"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.Interval">
            <summary>
            自动切换间隔时长(s)
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.IntervalProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.Interval"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.Swiper.Duration">
            <summary>
            滑动动画时长
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.Swiper.DurationProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Controls.Swiper.Duration"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.TabControlAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.TabControl"/>中<see cref="T:System.Windows.Controls.TabItem"/>的附加属性类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TabControlAssistant.IsAddClearButtonProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TabControlAssistant.IsAddClearButtonProperty"/>标识是否增加删除按钮
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ThreeDimensional.Alertor3D">
            <summary>
            3D警报器
            </summary>
            <summary>
            Alertor3D
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ThreeDimensional.Alertor3D.Color">
            <summary>
            警报器的颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ThreeDimensional.Alertor3D.ColorProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ThreeDimensional.Alertor3D.Color"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ThreeDimensional.Alertor3D.State">
            <summary>
            当前警报器的状态
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ThreeDimensional.Alertor3D.StateProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ThreeDimensional.Alertor3D.State"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.ThreeDimensional.Alertor3D.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ThreeDimensional.FlipTile3D">
            <summary>
            3D方形跳动面板
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.XCount">
            <summary>
            X方向上的数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.XCountProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.XCount"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.YCount">
            <summary>
            X方向上的数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.YCountProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.YCount"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.MaxImageCount">
            <summary>
            块状的最大数量
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.MaxImageCountProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.MaxImageCount"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.ItemMaterialsProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Controls.ThreeDimensional.FlipTile3D.ItemMaterials"/>的依赖属性
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.GridViewColumThumb">
            <summary>
            GridViewColumThumb
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.ToolTipAssistant">
            <summary>
            <see cref="T:System.Windows.Controls.ToolTip"/>的附加属性基类
            </summary>
        </member>
        <member name="M:CookPopularControl.Controls.ToolTipAssistant.CustomPopupPlacementCallbackImplement(System.Windows.Size,System.Windows.Size,System.Windows.Point)">
            <summary>
            自定义TooTip的位置
            </summary>
            <param name="popupSize"></param>
            <param name="targetSize"></param>
            <param name="offset"></param>
            <returns></returns>
        </member>
        <member name="F:CookPopularControl.Controls.ToolTipAssistant.CookPopularToolTipBackgroundProperty">
            <summary>
            提供<see cref="T:System.Windows.Controls.ToolTip"/>的背景色
            </summary>
        </member>
        <member name="T:CookPopularControl.Controls.TreeViewAssistant">
            <summary>
            提供<see cref="T:System.Windows.Controls.TreeView"/>的附加属性帮助类
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TreeViewAssistant.ExpandButtonSizeProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TreeViewAssistant.ExpandButtonSizeProperty"/>标识展开按钮的大小
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TreeViewAssistant.ExpandButtonFillProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TreeViewAssistant.ExpandButtonFillProperty"/>标识展开按钮的填充颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TreeViewAssistant.HeaderIconHasItemsProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TreeViewAssistant.HeaderIconHasItemsProperty"/>标识<see cref="T:System.Windows.Controls.TreeView"/>有子项的标题头图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TreeViewAssistant.HeaderIconNoItemsProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TreeViewAssistant.HeaderIconNoItemsProperty"/>标识<see cref="T:System.Windows.Controls.TreeView"/>无子项的标题头图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TreeViewAssistant.HeaderIconFillProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TreeViewAssistant.HeaderIconFillProperty"/>标识<see cref="T:System.Windows.Controls.TreeView"/>的标题头填充颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Controls.TreeViewAssistant.IsShowHeaderIconProperty">
            <summary>
            <see cref="F:CookPopularControl.Controls.TreeViewAssistant.IsShowHeaderIconProperty"/>标识<see cref="T:System.Windows.Controls.TreeView"/>是否显示标题头
            </summary>
        </member>
        <member name="T:CookPopularControl.DialogBox.DialogBox">
            <summary>
            对话窗口
            </summary>
        </member>
        <member name="F:CookPopularControl.DialogBox.DialogBox.MarkProperty">
            <summary>
            <see cref="F:CookPopularControl.DialogBox.DialogBox.MarkProperty"/>表示<see cref="T:CookPopularControl.DialogBox.DialogBox"/>的标识附加属性
            </summary>
        </member>
        <member name="T:CookPopularControl.DialogBox.DialogBoxContainer">
            <summary>
            承载对话框内容的对话容器
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.ChromeWindowClient">
            <summary>
            为 <see cref="T:CookPopularControl.Windows.NormalWindow"/> 提供客户端区域。无法继承此类。
            </summary>
        </member>
        <member name="M:CookPopularControl.Windows.ChromeWindowClient.#ctor">
            <summary>
            初始化 <see cref="T:CookPopularControl.Windows.ChromeWindowClient" /> 类的新实例。
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.MessageDialog">
            <summary>
            模态消息框
            </summary>
            <remarks>与系统控件<see cref="T:System.Windows.MessageBox"/>类似</remarks>
        </member>
        <member name="P:CookPopularControl.Windows.MessageDialog.Message">
            <summary>
            <see cref="T:CookPopularControl.Windows.MessageDialog"/>消息内容
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.MessageDialog.Image">
            <summary>
            <see cref="T:CookPopularControl.Windows.MessageDialog"/>图标
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.MessageDialog.ImageBrush">
            <summary>
            <see cref="T:CookPopularControl.Windows.MessageDialog"/>图标颜色
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.MessageDialog.IsShowImage">
            <summary>
            是否显示<see cref="T:CookPopularControl.Windows.MessageDialog"/>的图标
            </summary>
        </member>
        <member name="M:CookPopularControl.Windows.MessageDialog.Show(CookPopularControl.Windows.CustomMessageDialog)">
            <summary>
            自定义展示信息
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Windows.MessageDialog.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
            <summary>
            信息展示
            </summary>
        </member>
        <member name="M:CookPopularControl.Windows.MessageDialog.Show(System.Windows.Window,System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage,System.Windows.MessageBoxResult,System.Windows.MessageBoxOptions)">
            <summary>
            信息展示
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.CustomMessageDialog">
            <summary>
            自定义显示信息
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.NoneTitleBarWindow">
            <summary>
            <see cref="T:CookPopularControl.Windows.NoneTitleBarWindow"/>标识没有标题的窗体
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.NormalWindow">
            <summary>
            <see cref="T:CookPopularControl.Windows.NormalWindow"/>表示标准的窗体
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.WindowIcon">
            <summary>
            Represents a Windows icon, which is a small bitmap image that is used to represent an object
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarForeground">
            <summary>
            表示标题栏前置颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.ClientTitleBarForegroundProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarForeground"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarBackground">
            <summary>
            表示标题栏背景颜色
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.ClientTitleBarBackgroundProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarBackground"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarAdditionalContent">
            <summary>
            标题栏附加内容
            </summary>
            <remarks>除了Window图标和Title以外的其它内容</remarks>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.ClientTitleBarAdditionalContentProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarAdditionalContent"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarHeight">
            <summary>
            标题栏高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.ClientTitleBarHeightProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.ClientTitleBarHeight"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.IsShowTitle">
            <summary>
            是否显示窗口标题
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.IsShowTitleProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.IsShowTitle"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.IsShowClientTitleBar">
            <summary>
            是否显示标题栏
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.IsShowClientTitleBarProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.IsShowClientTitleBar"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.IsFullScreen">
            <summary>
            窗口是否全屏
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.IsFullScreenProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.IsFullScreen"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.IsNonClientActive">
            <summary>
            NonClient是否激活
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.IsNonClientActiveProperty">
            <summary>
            标识<see cref="P:CookPopularControl.Windows.NormalWindow.IsNonClientActive"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.IconWidth">
            <summary>
            窗体图标宽度
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.IconWidthProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Windows.NormalWindow.IconWidth"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.NormalWindow.IconHeight">
            <summary>
            窗体图标高度
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.NormalWindow.IconHeightProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Windows.NormalWindow.IconHeight"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Windows.NormalWindow.SetWindowRound">
            <summary>
            shezhiWindow圆角
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.SideBarWindow">
            <summary>
            <see cref="T:CookPopularControl.Windows.SideBarWindow"/>表示具有侧边栏的窗体
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.SideBarWindow.IsShowSideBar">
            <summary>
            是否显示侧边栏
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.SideBarWindow.IsShowSideBarProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Windows.SideBarWindow.IsShowSideBar"/>的依赖属性
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.SideBarWindow.IsShowSideBarChangedEvent">
            <summary>
            <see cref="F:CookPopularControl.Windows.SideBarWindow.IsShowSideBarChangedEvent"/>标识侧边栏是否打开事件
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.SideBarWindow.SettingClickEvent">
            <summary>
            <see cref="F:CookPopularControl.Windows.SideBarWindow.SettingClickEvent"/>标识设置按钮点击时事件
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.ToastMessage">
            <summary>
            表示类似Android的Toast消息框
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessage.ToastMessageIcon">
            <summary>
            <see cref="T:CookPopularControl.Windows.ToastMessage"/>的消息图标
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.ToastMessage.ToastMessageIconProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Windows.ToastMessage.ToastMessageIcon"/>的依赖属性
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessage.ToastMessageIconBrush">
            <summary>
            <see cref="T:CookPopularControl.Windows.ToastMessage"/>的消息图标画刷
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.ToastMessage.ToastMessageIconBrushProperty">
            <summary>
            提供<see cref="P:CookPopularControl.Windows.ToastMessage.ToastMessageIconBrush"/>的依赖属性
            </summary>
        </member>
        <member name="M:CookPopularControl.Windows.ToastMessage.ShowWarning(System.Object)">
            <summary>
            显示<see cref="T:CookPopularControl.Windows.ToastMessage"/>
            </summary>
            <param name="content">内容</param>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.Content">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.MessageIcon">
            <summary>
            消息图标
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.MessageIconBrush">
            <summary>
            消息图标颜色
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.ShowType">
            <summary>
            动画显示类型
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.IsShowCloseButton">
            <summary>
            是否显示关闭按钮
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.IsAutoClose">
            <summary>
            消息是否自动关闭
            </summary>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.Duration">
            <summary>
            消息持续时间
            </summary>
            <remarks>单位:s</remarks>
        </member>
        <member name="P:CookPopularControl.Windows.ToastMessageInfo.ActionBeforeClose">
            <summary>
            消息关闭前触发的方法
            </summary>
        </member>
        <member name="T:CookPopularControl.Windows.ToastMessageShowType">
            <summary>
            <see cref="T:CookPopularControl.Windows.ToastMessage"/>动画显示类型
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.ToastMessageShowType.None">
            <summary>
            无动画显示
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.ToastMessageShowType.Fade">
            <summary>
            渐变动画显示
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.ToastMessageShowType.Scroll">
            <summary>
            缩放动画显示
            </summary>
        </member>
        <member name="F:CookPopularControl.Windows.ToastMessageShowType.Rotate">
            <summary>
            旋转动画显示
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.Callout">
            <summary>
            Renders a callout shape supporting several shapes combined with a callout arrow.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.Callout.AnchorPoint">
            <summary>
            Gets or sets the position of the callout relative to the top and left corner.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.Callout.CalloutStyle">
            <summary>
            Gets or sets the callout style.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.CompositeContentShape">
             <summary>
             Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.ContentControl" /> and implements <see cref="T:Microsoft.Expression.Media.IShape" />.
             </summary>
             <remarks>
             <see cref="T:Microsoft.Expression.Controls.CompositeContentShape" /> implements <see cref="T:Microsoft.Expression.Media.IShape" /> interface,
             and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape" />, but the geometry can be rendered outside the layout boundary.
            
             A typical implementation has a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path" />.
             It should also extend the <see cref="P:GeometrySource" /> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path" />.
            
             This class also supports showing content together with the shape.
             </remarks>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.GeometryMargin">
            <summary>
            Gets the margin between the logical bounds and the actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc" />) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout" />).
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeContentShape.InternalContent">
            <summary>
            Gets or sets the internal content that converts a string into a center-aligned, multiple-line TextBlock.
            </summary>
        </member>
        <member name="E:CookPopularControl.Expression.CompositeContentShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeContentShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeContentShape.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape" />. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape" /> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeContentShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange portion of a Silverlight layout pass. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeContentShape" />  will recompute the Geometry when it's invalidated and update the RenderedGeometry and GeometryMargin.</remarks>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeContentShape.OnContentChanged(System.Object,System.Object)">
            <summary>
            Transforms a string content into <see cref="T:TextBlock" /> with center alignment and multiple line support.
            </summary>
            <remarks>
            Use template-binding to <see cref="P:Microsoft.Expression.Controls.CompositeContentShape.InternalContent" /> instead of <see cref="P:Content" /> to enable this method.
            </remarks>
        </member>
        <member name="T:CookPopularControl.Expression.CompositeShape">
             <summary>
             Provides a base class of a composite shape that derives from <see cref="T:System.Windows.Controls.Control" /> and implements <see cref="T:Microsoft.Expression.Media.IShape" />.
             </summary>
             <remarks>
             <see cref="T:Microsoft.Expression.Controls.CompositeShape" /> implements <see cref="T:Microsoft.Expression.Media.IShape" /> interface,
             and supports rendering a geometry similar to <see cref="T:System.Windows.Shapes.Shape" />, but the geometry can be rendered outside the layout boundary.
            
             A typical implementation has a customized default template in generic.xaml which template-binds most shape properties to a <see cref="T:System.Windows.Shapes.Path" />.
             It should also extend the <see cref="P:GeometrySource" /> property to customize the appearance of the <see cref="T:System.Windows.Shapes.Path" />.
             </remarks>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.Fill">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.
            </summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeStartLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />. </summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineCap" /> enumeration that specifies the shape at the start of a <see cref="P:System.Windows.Shapes.Shape.Stroke" />.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeEndLineCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that describes the <see cref="T:System.Windows.Shapes.Shape" /> at the end of a line. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeLineJoin">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration value that specifies the type of join that is used at the vertices of a <see cref="T:System.Windows.Shapes.Shape" />.</summary>
            <returns>A value of the <see cref="T:System.Windows.Media.PenLineJoin" /> enumeration that specifies the join appearance. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeMiterLimit">
            <summary>Gets or sets a limit on the ratio of the miter length to half the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. </summary>
            <returns>The limit on the ratio of the miter length to the <see cref="P:System.Windows.Shapes.Shape.StrokeThickness" /> of a <see cref="T:System.Windows.Shapes.Shape" /> element. This value is always a positive number that is greater than or equal to 1.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeDashArray">
            <summary>Gets or sets a collection of <see cref="T:System.Double" /> values that indicate the pattern of dashes and gaps that is used to outline shapes. </summary>
            <returns>A collection of <see cref="T:System.Double" /> values that specify the pattern of dashes and gaps. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeDashCap">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.PenLineCap" /> enumeration value that specifies how the ends of a dash are drawn. </summary>
            <returns>One of the enumeration values for <see cref="T:System.Windows.Media.PenLineCap" />. The default is <see cref="F:System.Windows.Media.PenLineCap.Flat" />. </returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.StrokeDashOffset">
            <summary>Gets or sets a <see cref="T:System.Double" /> that specifies the distance within the dash pattern where a dash begins.</summary>
            <returns>A <see cref="T:System.Double" /> that represents the distance within the dash pattern where a dash begins. The default value is 0.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.CompositeShape.GeometryMargin">
            <summary>
            Gets the margin between the logical bounds and the actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc" />) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout" />).
            </summary>
        </member>
        <member name="E:CookPopularControl.Expression.CompositeShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeShape.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape" />. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape" /> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CompositeShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange portion of a Silverlight layout pass. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Controls.CompositeShape" />  will recompute the Geometry when it's invalidated and update the RenderedGeometry and GeometryMargin.</remarks>
        </member>
        <member name="T:CookPopularControl.Expression.LineArrow">
            <summary>
            Renders a bent line segment with optional arrow heads on both ends.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.LineArrow.BendAmount">
            <summary>
            Gets or sets the amount of bend for the arrow.
            </summary>
            <value>The bend amount between 0 and 1.</value>
        </member>
        <member name="P:CookPopularControl.Expression.LineArrow.StartArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the start of the line.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.LineArrow.EndArrow">
            <summary>
            Gets or sets how the arrow head is rendered at the end of the line.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.LineArrow.StartCorner">
            <summary>
            Gets or sets from which corner to start drawing the arrow.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.LineArrow.ArrowSize">
            <summary>
            Gets or sets the length of the arrow in pixels.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.LineArrow.MeasureOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Measure pass of Silverlight layout. Classes can override this method to define their own Measure pass behavior.</summary>
            <returns>The size that this object determines it requires during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
            <param name="availableSize">The available size that this object can give to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
            <remarks>
            A default <see cref="T:LineArrow" /> can render at anysize.
            The <see cref="P:RenderedGeometry" /> will stretch to the layout boundary and render to the outside if necessary.
            </remarks>
        </member>
        <member name="T:CookPopularControl.Expression.PanningItems">
            <summary>
            Provides an items control that displays one selected item, and allows panning between items using touch gestures.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PanningItems.ScrollDirection">
            <summary>
            Gets or sets the orientation of items in the control.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PanningItems.FlickTolerance">
            <summary>
            Gets or sets the flick tolerance.  This can be a value between 0 and 1.  
            It represents the percentage of the size of the PanningItems needed to be covered by the flick gesture to trigger an items change.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PanningItems.PreviousItem">
            <summary>
            Gets or sets the item before the selected item.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PanningItems.NextItem">
            <summary>
            Gets or sets the item after the selected item.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PanningItems.LoopContents">
            <summary>
            Gets or sets whether the contents of the items control will loop, so that the first item will follow the last item.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PanningItems.SliderValue">
            <summary>
            Gets or sets the value of the slider controlling the panning motion.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PanningItems.#ctor">
            <summary>
            The constructor for PanningItems.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PanningItems.OnApplyTemplate">
            <summary>
            Called when the PanningItems template is applied.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.BezierCurveFlattener">
            <summary>
            A utility class to flatten Bezier curves.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.BezierCurveFlattener.FlattenCubic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier cubic curve and adds the resulting polyline to the third parameter.
            </summary>
            <param name="controlPoints">The four Bezier cubic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">True to skip the first control point when adding the flattened polyline.
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated with 
            each of the polyline vertices.</param> 
            If <paramref name="resultPolyline" /> is empty, the first control point 
            and its associated parameter are always added.</param>
        </member>
        <member name="M:CookPopularControl.Expression.BezierCurveFlattener.FlattenQuadratic(System.Windows.Point[],System.Double,System.Collections.Generic.ICollection{System.Windows.Point},System.Boolean,System.Collections.Generic.ICollection{System.Double})">
            <summary>
            Flattens a Bezier quadratic curve and adds the resulting polyline to the third parameter.
            Uses degree elevation for Bezier curves to reuse the code for the cubic case.
            </summary>
            <param name="controlPoints">The three Bezier quadratic control points.</param>
            <param name="errorTolerance">The maximum distance between two corresponding points on the true curve 
            and on the flattened polyline. Must be strictly positive.</param>
            <param name="resultPolyline">Where to add the flattened polyline.</param>
            <param name="skipFirstPoint">Whether to skip the first control point when adding the flattened polyline. 
            <param name="resultParameters">Where to add the value of the Bezier curve parameter associated with
            each of the polyline vertices.</param>
            If <paramref name="resultPolyline" /> is empty, the first control point and 
            its associated parameter are always added.</param>
        </member>
        <member name="T:CookPopularControl.Expression.CommonExtensions">
            <summary>
            Extension methods that support non-geometry types.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.ForEach(System.Collections.IEnumerable,System.Action{System.Object})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.ForEach``1(System.Collections.Generic.IList{``0},System.Action{``0,System.Int32})">
            <summary>
            Allows the application of an action delegate (often a very simple lambda) against an entire sequence with the index of each item.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.EnsureListCount``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{``0})">
            <summary>
            Ensures the count of a list to a given count. Creates with a given factory or removes items when necessary.
            If Input IList is a List, AddRange or RemoveRange is used when there's no factory.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.EnsureListCountAtLeast``1(System.Collections.Generic.IList{``0},System.Int32,System.Func{``0})">
            <summary>
            Ensures the count of a list is at least the given count. Creates with a given factory.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.AddRange``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add a range of items to the end of a collection.
            If a collection is a list, List.AddRange is used.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.Last``1(System.Collections.Generic.IList{``0})">
            <summary>
            Gets the last item of a given list.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.RemoveLast``1(System.Collections.Generic.IList{``0})">
            <summary>
            Removes the last item from the given list.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.DeepCopy``1(``0)">
            <summary>
            Makes a copy of obj and all it's public properties, including all collection properties.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.SetIfDifferent(System.Windows.DependencyObject,System.Windows.DependencyProperty,System.Object)">
            <summary>
            Sets the value if different. Avoids setting a local value if possible.
            Returns true when the value has been changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.ClearIfSet(System.Windows.DependencyObject,System.Windows.DependencyProperty)">
            <summary>
            Clears the dependency property when it is locally set on the given dependency object.
            Returns false if the dependeny property is not locally set.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.FindVisualDesendent``1(System.Windows.DependencyObject,System.Func{``0,System.Boolean})">
            <summary>
            Finds all visual descendants of a given type and condition using breadth-first search.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CommonExtensions.GetVisualChildren(System.Windows.DependencyObject)">
            <summary>
            Gets all visual children in IEnumerable.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.GeometryHelper">
            <summary>
            Extension methods for geometry-related data structures (Point/Vector/Size/Rect).
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Resize(System.Windows.Rect,System.Double)">
            <summary>
            Resizes the rectangle to a relative size while keeping the center invariant.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Subtract(System.Windows.Point,System.Windows.Point)">
            <summary>
            Gets the difference vector between two points.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Plus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise plus for Point.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Minus(System.Windows.Point,System.Windows.Point)">
            <summary>
            Memberwise minus for Point.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string of mini-languages to a <see cref="T:PathGeometry" />.
            </summary>
            <remarks>See: Path Markup Syntax(http://msdn.microsoft.com/en-us/library/cc189041(VS.95).aspx)</remarks>
            <param name="abbreviatedGeometry">The string of path mini-languages for describing geometric paths.</param>
            <returns>A <see cref="T:PathGeometry" /> converted from the the path mini-languages.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double)">
            <summary>
            Flattens a <see cref="T:PathFigure" /> and adds result points to a given <paramref name="points" />.
            </summary>
            <param name="figure">The input <see cref="T:PathFigure" />.</param>
            <param name="points">The point list to which result points will append.</param>
            <param name="tolerance">A positive number specifying the maximum allowed error from the result points to the input path figure. A Value of zero allows the algorithm to pick the tolerance automatically.</param>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.GetArcPoint(System.Double)">
            <summary>
            Gets the normalized arc in a (0,0)(1,1) box.
            Zero degrees is mapped to [0.5, 0] (up), and clockwise.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.GetArcPoint(System.Double,System.Windows.Rect)">
            <summary>
            Gets the absolute arc point in a given bound with a given relative radius.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.GetArcAngle(System.Windows.Point)">
            <summary>
            Gets the angle on an arc relative to a (0,0)(1,1) box.
            Zero degrees is mapped to [0.5, 0] (up), and clockwise.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.GetArcAngle(System.Windows.Point,System.Windows.Rect)">
            <summary>
            Gets the angle on an arc from a given absolute point relative to a bound.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.RelativeTransform(System.Windows.Rect,System.Windows.Rect)">
            <summary>
            Computes the transform that moves "Rect from" to "Rect to".
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.RelativeTransform(System.Windows.UIElement,System.Windows.UIElement)">
            <summary>
            Computes the transform from the coordinate space of one <c>UIElement</c> to another.
            </summary>
            <param name="from">The source element.</param>
            <param name="to">The destination element.</param>
            <returns>The transform between the <c>UIElement</c>s, or null if it cannot be computed.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.RelativeToAbsolutePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Maps a relative point to an absolute point using the mapping from a given bound to a (0,0)(1,1) box.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.AbsoluteToRelativePoint(System.Windows.Rect,System.Windows.Point)">
            <summary>
            Maps an absolute point to a relative point using the mapping from a (0,0)(1,1) box to a given bound.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.GetStretchBound(System.Windows.Rect,System.Windows.Media.Stretch,System.Windows.Size)">
            <summary>
            Computes the bound after stretching within a given logical bound.
            If stretch to uniform, use given aspectRatio.
            If aspectRatio is empty, it's equivalent to Fill.
            If stretch is None, it's equivalent to Fill or Uniform.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Midpoint(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the mid point of two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The mid point between <paramref name="lhs" /> and <paramref name="rhs" />.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Dot(System.Windows.Vector,System.Windows.Vector)">
            <summary>
            Returns the dot product of two vectors.
            </summary>
            <param name="lhs">The first vector.</param>
            <param name="rhs">The second vector.</param>
            <returns>The dot product of <paramref name="lhs" /> and <paramref name="rhs" />.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Dot(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the dot product of two points.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Distance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The distance between <paramref name="lhs" /> and <paramref name="rhs" />.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.SquaredDistance(System.Windows.Point,System.Windows.Point)">
            <summary>
            Returns the square of the distance between two points.
            </summary>
            <param name="lhs">The first point.</param>
            <param name="rhs">The second point.</param>
            <returns>The square of the distance between <paramref name="lhs" /> and <paramref name="rhs" />.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Determinant(System.Windows.Point,System.Windows.Point)">
            <summary>
            Determinant of the cross product. Equivalent to directional area.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Normal(System.Windows.Point,System.Windows.Point)">
            <summary>
            Computes the normal direction vector of given line segments.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.Perpendicular(System.Windows.Vector)">
            <summary>
            Computes the perpendicular vector, 90-degrees, counter-clockwise.
            Vector to the right perpendicular results in a vector to up.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.GeometryEquals(System.Windows.Media.Geometry,System.Windows.Media.Geometry)">
            <summary>
            Returns whether the two geometries are identical.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.EnsureGeometryType``1(``0@,System.Windows.Media.Geometry@,System.Func{``0})">
            <summary>
            Ensures the value is an instance of result type (T). If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryHelper.EnsureSegmentType``1(``0@,System.Collections.Generic.IList{System.Windows.Media.PathSegment},System.Int32,System.Func{``0})">
            <summary>
            Ensures the list[index] is an instance of result type (T). If not, replace with a new instance of type (T).
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.MarchLocation">
            <summary>
            The data structure to communicate with the PathMarch algorithm.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.MarchLocation.Reason">
            <summary>
            The reason why this location is sampled.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.MarchLocation.Index">
            <summary>
            The index of the point on a polyline point list.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.MarchLocation.Ratio">
            <summary>
            Ratio: [0, 1], which is always before / (before + after).
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.MarchLocation.Before">
            <summary>
            Arc length before a stop point. Non-negative and less than Length[index].
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.MarchLocation.After">
            <summary>
            Arc length after the stop point. Non-negative and less than Length[index].
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.MarchLocation.Remain">
            <summary>
            Remaining length within a step to hit next stop. Positive to go forward. Negative to go backward.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.MarchLocation.GetPoint(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Gets the interpolated position of this MarchLocation on a given point list.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.MarchLocation.GetNormal(CookPopularControl.Expression.PolylineData,System.Double)">
            <summary>
            Get the interpolated normal direction of this MarchLocation on a given normal vector list.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.MarchLocation.GetArcLength(System.Collections.Generic.IList{System.Double})">
            <summary>
            Gets the arc length of this MarchLocation to the start of the entire polyline.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.PathFigureHelper">
            <summary>
            Helper class to work with PathFigure.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathFigureHelper.FlattenFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Double,System.Boolean)">
            <summary>
            Flattens the given figure and adds result points to the given point list.
            </summary>
            <param name="tolerance">The error tolerance. Must be positive. Can be zero. Fallback to default tolerance.</param>
        </member>
        <member name="M:CookPopularControl.Expression.PathFigureHelper.AllSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterates all segments inside a given figure, and returns the correct start point for each segment.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathFigureHelper.SyncPolylineFigure(System.Windows.Media.PathFigure,System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)">
            <summary>
            Synchronizes the figure to the given list of points as a single polyline segment.
            Tries to keep the change to a minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathFigureHelper.SyncEllipseFigure(System.Windows.Media.PathFigure,System.Windows.Rect,System.Windows.Media.SweepDirection,System.Boolean)">
            <summary>
            Synchronizes the given figure to be a closed ellipse with two arc segments.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.PathGeometryHelper">
            <summary>
            Helper class to work with PathGeometry.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathGeometryHelper.ConvertToPathGeometry(System.String)">
            <summary>
            Converts a string in the path mini-language into a PathGeometry.
            </summary>
            <param name="abbreviatedGeometry">A string in the path mini-language.</param>
        </member>
        <member name="M:CookPopularControl.Expression.PathGeometryHelper.AsPathGeometry(System.Windows.Media.Geometry)">
            <summary>
            Converts the given geometry into a single PathGeometry.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathGeometryHelper.SyncPolylineGeometry(System.Windows.Media.Geometry@,System.Collections.Generic.IList{System.Windows.Point},System.Boolean)">
            <summary>
            Updates the given geometry as PathGeometry with a polyline matching a given point list.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.PathGeometryHelper.AbbreviatedGeometryParser">
            <summary>
            Parses abbreviated geometry sytax.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.PathSegmentData">
            <summary>
            A Tuple data structure for PathSegment and the corresponding StartPoint.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.PathSegmentHelper">
            <summary>
            Helper class to convert an ArcSegment to BezierSegment(s).
            </summary>
            <summary>
            Helper class to work with PathSegment and all variations.
            </summary>
            <summary>
            Strategy classes to handle different types of PathSegment.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.ArcToBezierSegments(System.Windows.Media.ArcSegment,System.Windows.Point)">
            <summary>
            Converts an arc segment into Bezier format.
            Returns BezierSegment, PolyBezierSegment, LineSegment, or null.
            When returning null, the arc degenerates into the start point.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.SetIsStroked(System.Windows.Media.PathSegment,System.Boolean)">
            <summary>
            Avoid calling the three-parameter constructor, since it always sets a local value for IsStroked.
            </summary>
            <param name="segment"></param>
            <param name="isStroked"></param>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.SyncPolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Updates the SegmentCollection with a given polyline matching a given point list.
            Tries to keep changes minimum and returns false if nothing has been changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.SyncPolyBezierSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Collections.Generic.IList{System.Windows.Point},System.Int32,System.Int32)">
            <summary>
            Updates the collection[index] segment with a poly-Bezier segment matching a given point list.
            A given point list must contain 3*N points for N Bezier segments.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.IsEmpty(System.Windows.Media.PathSegment)">
            <summary>
            Tests if a given path segment is empty.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.GetPointCount(System.Windows.Media.PathSegment)">
            <summary>
            Gets the point count in a given path segment.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.GetLastPoint(System.Windows.Media.PathSegment)">
            <summary>
            Gets the last point of a given path segment.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.GetPoint(System.Windows.Media.PathSegment,System.Int32)">
            <summary>
            Gets the point of a given index in a given segment.
            If input is (-1), returns the last point.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.FlattenSegment(System.Windows.Media.PathSegment,System.Collections.Generic.IList{System.Windows.Point},System.Windows.Point,System.Double)">
            <summary>
            Flattens a given segment and adds resulting points into a given point list.
            </summary>
            <param name="segment">The segment to be flatten.</param>
            <param name="points">The resulting points list.</param>
            <param name="start">The start point of the segment.</param>
            <param name="tolerance">The error tolerance. Must be positive. Can be zero. Fallback to default tolerance.</param>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.ArcToBezierHelper.ArcToBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean,System.Boolean,System.Double,System.Double,System.Windows.Point[]@,System.Int32@)">
             <summary>
             ArcToBezier, computes the Bezier approximation of an arc.
             </summary>
             <remarks>
             This utility computes the Bezier approximation for an elliptical arc as
             it is defined in the SVG arc spec. The ellipse from which the arc is
             carved is axis-aligned in its own coordinates, and defined there by its
             x and y radii. The rotation angle defines how the ellipse's axes are
             rotated relative to the x axis. The start and end points define one of 4
             possible arcs; the sweep and large-arc flags determine which one of
             these arcs will be chosen.
            
             Returning cPieces = 0 indicates a line instead of an arc
                       cPieces = -1 indicates that the arc degenerates to a point 
             </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.ArcToBezierHelper.GetArcAngle(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Gets the number of Bezier arcs, and sine/cosine of each.
            </summary>
            <remarks>
            This is a private utility used by ArcToBezier. Breaks the arc into
            pieces so that no piece will span more than 90 degrees. The input
            points are on the unit circle.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.ArcToBezierHelper.GetBezierDistance(System.Double,System.Double)">
             <summary>
             GetBezierDistance returns the distance as a fraction of the radius.
             </summary>
                         <remarks>
                  Get the distance from a circular arc's end points to the control points
                  of the Bezier arc that approximates it, as a fraction of the arc's
                  radius.
            
                  Since the result is relative to the arc's radius, it depends strictly on
                  the arc's angle. The arc is assumed to be of 90 degrees or less, so the
                  angle is determined by the cosine of that angle, which is derived from
                  rDot = the dot product of two radius vectors. We need the Bezier curve
                  that agrees with the arc's points and tangents at the ends and midpoint. 
                  Here we compute the distance from the curve's endpoints to its control
                  points.
            
                  Since we are looking for the relative distance, we can work on the unit
                  circle. Place the center of the circle at the origin, and put the X axis
                  as the bisector between the 2 vectors.  Let a be the angle between the
                  vectors.  Then the X coordinates of the 1st and last points are cos(a/2). 
                  Let x be the X coordinate of the 2nd and 3rd points.  At t=1/2 we have a
                  point at (1,0). But the terms of the polynomial there are all equal:
            
                            (1-t)^3 = t*(1-t)^2 = t^2*(1-t) = t^3 = 1/8,
            
                  so from the Bezier formula there we have:
            
                            1 = (1/8) * (cos(a/2) + 3x + 3x + cos(a/2)), 
            
                  hence
            
                            x = (4 - cos(a/2)) / 3
            
                  The X difference between that and the 1st point is:
            
                            DX = x - cos(a/2) = 4(1 - cos(a/2)) / 3.
            
                  But DX = distance / sin(a/2), hence the distance is
            
                            dist = (4/3)*(1 - cos(a/2)) / sin(a/2).
            
                  Rather than the angle a, we are given rDot = R^2 * cos(a), so we
                  multiply top and bottom by R:
            
                            dist = (4/3)*(R - Rcos(a/2)) / Rsin(a/2)
            
                  and use some trig:
                                           ________________
                            cos(a/2)   = \/(1 + cos(a)) / 2
                                           ______________________
                            R*cos(a/2) = \/(R^2 + R^2 cos(a)) / 2 
                                           ________________
                                       = \/(R^2 + rDot) / 2
            
                  Let A = (R^2 + rDot)/2.
                                           ____________________
                            R*sin(a/2) = \/R^2 - R^2 cos^2(a/2)
                                           _______
                                       = \/R^2 - A
            
                  so:
                                                      _
                                         4      R - \/A
                                  dist = - * ------------
                                         3      _______
                                              \/R^2 - A
            
              History:
                  5/29/2001 MichKa
                      Created it.
                         </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.PathSegmentHelper.ArcToBezierHelper.AcceptRadius(System.Double,System.Double,System.Double@)">
            <summary>
            Returns false if the radius is too small compared to the chord length (returns true on NaNs)
            radius is modified to the value that is accepted.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.PolylineData">
            <summary>
            Represents a polyline with a list of connecting points.
            A closed polygon is represented by repeating the first point at the end.
            The differences, normals, angles, and lengths are computed on demand.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PolylineData.#ctor(System.Collections.Generic.IList{System.Windows.Point})">
            <summary>
            Constructs a polyline with two or more points.
            </summary>
            <param name="points"></param>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.IsClosed">
            <summary>
            The polyline is closed when the first and last points are repeated.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.Count">
            <summary>
            The count of points in this polyline.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.TotalLength">
            <summary>
            The total arc length of this polyline.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.Points">
            <summary>
            The point array of this polyline.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.Lengths">
            <summary>
            The length between line segments, Points[i] to Points[i+1].
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.Normals">
            <summary>
            The list of normal vectors for each segment.
            Normals[i] is the normal of segment p[i] to p[i + 1].
            Normals[N-1] == Normals[N-2].
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.Angles">
            <summary>
            The list of Cos(angle) between two line segments on point p[i].
            Note: The value is cos(angle) = Dot(u, v). Not in degrees.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.PolylineData.AccumulatedLength">
            <summary>
            The list of accumulated length from points[i] to points[0].
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PolylineData.Difference(System.Int32)">
            The forward difference vector of polyline.
            Points[i] + Differences[i] = Points[i+1]
        </member>
        <member name="M:CookPopularControl.Expression.PolylineData.SmoothNormal(System.Int32,System.Double,System.Double)">
            <summary>
            Compute the normal vector of given location (lerp(index, index+1, fraction).
            If the location is within range of cornerRadius, interpolate the normal direction.
            </summary>
            <param name="cornerRadius">The range of normal smoothless.  If zero, no smoothness and return the exact normal on index.</param>
        </member>
        <member name="T:CookPopularControl.Expression.PolylineHelper">
            <summary>
            Helper class to work with list of points
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PolylineHelper.PathMarch(CookPopularControl.Expression.PolylineData,System.Double,System.Double,System.Func{CookPopularControl.Expression.MarchLocation,System.Double})">
            <summary>
            March the given polyline with a given interval and output each stop through callback.
            </summary>
            <param name="polyline">The polyline points to march on.</param>
            <param name="startArcLength">The arc length to march before stopping at the first point.</param>
            <param name="cornerThreshold">The max angle between edges to be considered a corner vertex.</param>
            <param name="stopCallback">Callback when marching algorithm stop at a point. The callback returns the arc length for next stop.
            If the asked length is negative, march backwards. If callback returns NaN, finish marching.</param>
        </member>
        <member name="M:CookPopularControl.Expression.PolylineHelper.GetWrappedPolylines(System.Collections.Generic.IList{CookPopularControl.Expression.PolylineData},System.Double@)">
            <summary>
            Reorders the given list of polylines so that the polyline with a given arc length in the list is the first.
            Polylines that preceded this line are concatenated to the end of the list, with the first polyline at the very end. 
            </summary>
            <param name="lines">A list of polylines.</param>
            <param name="startArcLength">The arc length in the entire list of polylines at which to find the start line.
            The arc length into that line is returned in this variable.</param>
            <returns>The reordered and wrapped list.</returns>
        </member>
        <member name="T:CookPopularControl.Expression.RandomEngine">
            <summary>
            A random generator that supports uniform and Gaussian distributions.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.RandomEngine.Gaussian">
            <summary>
            Generates a pair of independent, standard, normally distributed random numbers,
            zero expectation, unit variance, using polar form of the Box-Muller transformation.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.SimpleSegment.Points">
            <summary>
            Control points of path segment.  Length is variant.
            Line segment has 2 points, Cubic bezier has 4 points.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.SimpleSegment.#ctor">
            <summary>
            Private constructor. Force to use factory methods.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.SimpleSegment.Create(System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a line segment
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment from quatratic curve (3 control points)
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.SimpleSegment.Create(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Windows.Point)">
            <summary>
             Creates a cubic bezier segment with 4 control points.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.TransformExtensions.TransformEquals(System.Windows.Media.Transform,System.Windows.Media.Transform)">
            <summary>
            Compares two transforms for an exact match. Transforms with the same value but different structure (e.g. Translate(0,0) and Rotate(0) are not considered equivalent).
            </summary>
            <param name="firstTransform">The first transform.</param>
            <param name="secondTransform">The second transform.</param>
            <returns></returns>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.ComputeLogicalBounds(System.Windows.Rect,CookPopularControl.Expression.IGeometrySourceParameters)">
            <summary>
            Arc recognizes Stretch.None as the same as Stretch.Fill, assuming aspect ratio = 1:1.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.NormalizeThickness(CookPopularControl.Expression.IArcGeometrySourceParameters)">
            <summary>
            Normalize thickness, both relative to the bounding box and the absolute pixel.
            Relative thickness = 0 -&gt; full circle radius or clamped.
            Relative thickness = 1 -&gt; shrank to a dot, or degenerated.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.UpdateZeroAngleGeometry(System.Boolean,System.Double)">
            <summary>
            The arc is degenerated to a line pointing to center / normal inward.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.ComputeAngleRanges(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Compute a list of angle pairs, defining the ranges in which arc sample should locate.
            The return value have 2, 4, or 6 double values, each pair defines a range and they are in the order
            to span the angles from given start to end angles.  The ranges will break at the self-intersect angle.
            If input start/end are within the invalid range between self intersect angle, it will be moved to neighboring self intersect.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.EnsureFirstQuadrant(System.Double)">
            <summary>
            Move angle to 0-90 range.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.SyncPieceWiseInnerCurves(System.Windows.Media.PathFigure,System.Int32,System.Windows.Point@,System.Double[])">
            <summary>
            Compute all pieces of inner curves with each pair of input angles, and connect them with poly Bezier segments.
            The new segments are output to given figure.Segments list from the given index.  The start point is output seperately.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.ComputeOneInnerCurve(System.Double,System.Double,System.Windows.Rect,System.Double)">
            <summary>
            Compute one piece of inner curve with given angle range, and output one piece of smooth curve in format of poly Beizer semgents.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.ArcGeometrySource.InnerCurveSelfIntersect(System.Double,System.Double,System.Double)">
            <summary>
            Compute the parameter (angle) of the self-intersect point for given ellipse with given thickness.
            The result is always in first quadrant, and might be 0 or 90 indicating no self-intersect.
            Basic algorithm is to binary search for the angle that sample point is not in first quadrant.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.ArrowOrientation">
            <summary>
            Specifies the direction the arrow points.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowOrientation.Left">
            <summary>
            The arrow points to the left.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowOrientation.Right">
            <summary>
            The arrow points to the right.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowOrientation.Up">
            <summary>
            The arrow points up.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowOrientation.Down">
            <summary>
            The arrow points down.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.ArrowType">
            <summary>
            Specifies the arrow head type.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowType.NoArrow">
            <summary>
            No arrow head.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowType.Arrow">
            <summary>
            A triangle arrow head.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowType.StealthArrow">
            <summary>
            A stealth triangle arrow head.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowType.OpenArrow">
            <summary>
            An open triangle arrow head.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.ArrowType.OvalArrow">
            <summary>
            An oval arrow head.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.BlockArrowGeometrySource.ArrowBuilder">
            <summary>
                 B
                /|
               / C--D
              A     |
               \ C--D
                \|
                 B
            Algorithm only uses Width/Height assuming top-left at 0,0.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CalloutGeometrySource.UpdateEdge(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double,System.Boolean)">
            <summary>
            Updates the edge line, and then connects to the anchor point if necessary.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CalloutGeometrySource.UpdatePolylineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Double)">
            <summary>
            Updates the polyline segment, and then connects start, anchor, and end points with the callout style.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CalloutGeometrySource.UpdateLineSegment(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point)">
            <summary>
            Updates the line segment to a given point.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CalloutGeometrySource.ComputeCorners(System.Double)">
            <summary>
            Computes the corner points in a clockwise direction, with eight points for the four corners.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.CalloutGeometrySource.UpdateCornerArc(System.Windows.Media.PathSegmentCollection,System.Int32,System.Windows.Point,System.Windows.Point)">
            <summary>
            The corner arc is always smaller than a 90-degree arc.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.CalloutStyle">
            <summary>
            Specifies the rendering style of a callout shape.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CalloutStyle.Rectangle">
            <summary>
            A rectangular callout.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CalloutStyle.RoundedRectangle">
            <summary>
            A rectangular callout with rounded corners.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CalloutStyle.Oval">
            <summary>
            A oval-shaped callout.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CalloutStyle.Cloud">
            <summary>
            A cloud-shaped callout.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.CornerType">
            <summary>
            Specifies the corner location.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CornerType.TopLeft">
            <summary>
            On the top left of the bounding box.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CornerType.TopRight">
            <summary>
            On the top right of the bounding box.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CornerType.BottomRight">
            <summary>
            On the bottom right of the bounding box.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.CornerType.BottomLeft">
            <summary>
            On the bottom left of the bounding box.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.DrawingPropertyMetadata">
            <summary>
            Unifies the interface of PropertyMetadata in WPF and Silverlight.
            Provides the necessary notification about render, arrange, or measure.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.DrawingPropertyMetadata.#ctor(CookPopularControl.Expression.DrawingPropertyMetadataOptions,System.Object)">
            <summary>
            This private Ctor should only be used by AttachCallback.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.DrawingPropertyMetadata.AttachCallback(System.Object,CookPopularControl.Expression.DrawingPropertyMetadataOptions,System.Windows.PropertyChangedCallback)">
            <summary>
            Chain InternalCallback() to attach the instance of DrawingPropertyMetadata on property callback.
            In Silverlight, the property metadata is thrown away after setting. Use callback to remember it.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.DrawingPropertyMetadata.InternalCallback(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>
            Before chaining the original callback, trigger DrawingPropertyChangedEvent.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.GeometryEffect">
            <summary>
            Provides the base class for GeometryEffect that transforms a geometry into another geometry.
            </summary>
            <remarks>
            This class provides the basic implementation of processing the rendered geometry of a IShape before it's passed to rendering.
            A typical implementation will extend the virtual function <see cref="F:ProcessGeometry" /> to transform the input geometry.
            <see cref="T:GeometryEffect" /> is typically attached to <see cref="T:IShape" /> as an attached property and activated when <see cref="T:IShape" /> geometry is updated.
            The <see cref="P:OutputGeometry" /> of a <see cref="T:GeometryEffect" /> will replace the rendered geometry in <see cref="T:IShape" />.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.GetGeometryEffect(System.Windows.DependencyObject)">
            <summary>
            Gets the geometry effect as an attached property on a given dependency object.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.SetGeometryEffect(System.Windows.DependencyObject,CookPopularControl.Expression.GeometryEffect)">
            <summary>
            Sets the geometry effect as an attached property on a given dependency object.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.CloneCurrentValue">
            <summary>
            Makes a deep copy of the <see cref="T:GeometryEffect" /> using its current values.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect. Implements CloneCurrentValue in Silverlight.
            </summary>
            <returns>A clone of the current instance of the geometry effect.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.Equals(CookPopularControl.Expression.GeometryEffect)">
            <summary>
            Tests if the given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">A geometry effect to compare with.</param>
            <returns>Returns true when two effects render with the same appearance.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.GeometryEffect.DefaultGeometryEffect">
            <summary>
            The default geometry effect that only passes through the input geometry.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.GeometryEffect.OutputGeometry">
            <summary>
            Gets the output geometry of this geometry effect.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Invalidates the geometry effect without actually computing the geometry.
            Notifies all parent shapes or effects to invalidate accordingly.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.ProcessGeometry(System.Windows.Media.Geometry)">
            <summary>
            Processes the geometry effect on a given input geometry.
            Stores the result in GeometryEffect.OutputGeometry.
            </summary>
            <returns>Returns false if nothing has been changed.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Extends the way of updating cachedGeometry based on a given input geometry.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.GeometryEffect.Parent">
            <summary>
            Parent can be either IShape or GeometryEffectGroup.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.Detach">
            <summary>
            Notified when detached from a parent chain.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.Attach(System.Windows.DependencyObject)">
            <summary>
            Notified when attached to a parent chain.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.InvalidateParent(System.Windows.DependencyObject)">
            <summary>
            Invalidates the geometry on a given dependency object when
            the object is a valid parent type (IShape or GeometryEffect).
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffect.CreateInstanceCore">
            <summary>
            Implement the Freezable in WPF.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.GeometryEffect.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.GeometryEffectConverter">
            <summary>
            Provides the conversion between string and geometry effects.
            </summary>
            <remarks>
            This class enables the brief syntax in XAML like <code>GeometryEffect="Sketch"</code>.
            Creates a clone of the instance of the geometry effect so it can be used as a resource.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffectConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect that can be converted from a string type.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffectConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            A GeometryEffect that can be converted to a string type.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffectConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts a string to a geometry effect. The fallback value is null.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometryEffectConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts a geometry effect into a string.  The fallback value is null.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.GeometryEffectConverter.registeredEffects">
            <summary>
            Builds a preset list of supported geometry effects.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.GeometrySource`1">
            <summary>
            Provides the base class of a source of geometry.
            Generates and caches the geometry based on the input parameters and the layout bounds.
            </summary>
            <remarks>
            A typical implementation will extend the UpdateCachedGeometry() to update this.cachedGeometry.
            This base class will then handle the invalidation, pipeline to the geometry effects, and then cache relative to the layout bounds.
            An implementation should try to reuse the cached geometry as much as possible to avoid reconstruction in the rendering thread.
            An implementation can extend the ComputeLogicalBounds to handle Stretch differently.
            </remarks>
            <typeparam name="TParameters">The type of geometry source parameter on which the base class is working on.</typeparam>
        </member>
        <member name="P:CookPopularControl.Expression.GeometrySource`1.Geometry">
            <summary>
            Gets or sets the resulting geometry after the latest UpdateGeometry().
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.GeometrySource`1.LogicalBounds">
            <summary>
            Gets the bounding box that the geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LogicalBounds" /> should already take stroke thickness and stretch into consideration.
            </summary>
            <value></value>
        </member>
        <member name="P:CookPopularControl.Expression.GeometrySource`1.LayoutBounds">
            <summary>
            Gets the actual bounds of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.GeometrySource`1.LayoutBounds" /> includes logical bounds, stretch and stroke thickness.
            </summary>
            <value></value>
        </member>
        <member name="M:CookPopularControl.Expression.GeometrySource`1.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Notifies that the geometry has been invalidated because of external changes.
            </summary>
            <remarks>
            The geometry is typically invalidated when parameters are changed.
            If any geometry has been invalidated externally, the geometry will be recomputed regardless if the layout bounds change.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.GeometrySource`1.UpdateGeometry(CookPopularControl.Expression.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry based on the given parameters and layoutBounds.
            Returns false if the geometry hasn't been changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometrySource`1.UpdateCachedGeometry(`0)">
            <summary>
            Extends the way to provide geometry by implementing this function.
            Returns true when any of the geometry is changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometrySource`1.ComputeLogicalBounds(System.Windows.Rect,CookPopularControl.Expression.IGeometrySourceParameters)">
            <summary>
            Extends the way to handle stretch mode.
            The default is to always use Stretch.Fill and center stroke.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.GeometrySource`1.ApplyGeometryEffect(CookPopularControl.Expression.IGeometrySourceParameters,System.Boolean)">
            <summary>
            Apply the geometry effect when dirty or forced and update this.Geometry.
            Otherwise, keep this.Geometry as this.cachedGeometry.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.GeometrySource`1.cachedGeometry">
            <summary>
            Specifics the geometry from the previous geometry effect process.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.IGeometrySource">
            <summary>
            Provides an interface to describe the source of a geometry.
            </summary>
            <remarks>
            This interface is designed to expose the geometry source in a non-generic way.
            Typical implementation should subclass GeometrySource instead of implementing this interface directly.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.IGeometrySource.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Notifies that the geometry has been invalidated because of external changes.
            </summary>
            <remarks>
            Geometry is typically invalidated when parameters are changed.
            If any geometry has been invalidated externally, the geometry will be recomputed even if the layout bounds change.
            </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.IGeometrySource.UpdateGeometry(CookPopularControl.Expression.IGeometrySourceParameters,System.Windows.Rect)">
            <summary>
            Update the geometry using the given parameters and the layout bounds.
            Returns false if nothing has been updated.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.IGeometrySource.Geometry">
            <summary>
            Gets or sets the resulting geometry after the latest UpdateGeometry().
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.IGeometrySource.LogicalBounds">
            <summary>
            Gets the bounding box where the geometry should stretch to.
            The actual geometry might be smaller or larger than this.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LogicalBounds" /> should already take stroke thickness and stretch into consideration.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.IGeometrySource.LayoutBounds">
            <summary>
            Gets the actual bounds of FrameworkElement.
            <see cref="P:Microsoft.Expression.Media.IGeometrySource.LayoutBounds" /> includes logical bounds, stretch, and stroke thickness.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.IGeometrySourceExtensions">
            <summary>
            Provides helper extension methods to work with IGeometrySource and parameters.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.IGeometrySourceParameters">
            <summary>
            Provides an interface to describe the parameters of a Shape.
            </summary>
            <remarks>
            This interface is the data for communication between Shape and GeometrySource.
            Typically, a concrete implementation of IShape will implement this interface and pass it into
            GeometrySource.UpdateGeometry(), which will then consume the shape as a read-only data provider.
            </remarks>
        </member>
        <member name="T:CookPopularControl.Expression.InvalidateGeometryReasons">
            <summary>
            Specifies the reason of <see cref="M:Microsoft.Expression.Media.InvalidateGeometry" /> being called.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.InvalidateGeometryReasons.PropertyChanged">
            <summary>
            Geometry has been invalidated because a property has been changed.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.InvalidateGeometryReasons.IsAnimated">
            <summary>
            Geometry has been invalidated because a property is being animated.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.InvalidateGeometryReasons.ChildInvalidated">
            <summary>
            Geometry has been invalidated because a child has been invalidated.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.InvalidateGeometryReasons.ParentInvalidated">
            <summary>
            Geometry has been invalidated because a parent has been invalidated.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.InvalidateGeometryReasons.TemplateChanged">
            <summary>
            Geometry has been invalidated because a new template has been applied.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.IShape">
            <summary>
            Provides the necessary interface to define a Shape.
            Both primitive and composite shapes need to match this interface, although they might derive from different types of FrameworkElement.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.IShape.Fill">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how to paint the interior of the shape.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that describes how the shape's interior is painted. The default is null.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.IShape.Stroke">
            <summary>Gets or sets the <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</summary>
            <returns>A <see cref="T:System.Windows.Media.Brush" /> that specifies how the <see cref="T:System.Windows.Shapes.Shape" /> outline is painted.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.IShape.StrokeThickness">
            <summary>Gets or sets the width of the <see cref="T:System.Windows.Shapes.Shape" /> stroke outline. </summary>
            <returns>The width of the <see cref="T:System.Windows.Shapes.Shape" /> outline, in pixels.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.IShape.Stretch">
            <summary>Gets or sets a <see cref="T:System.Windows.Media.Stretch" /> enumeration value that describes how the shape fills its allocated space.</summary>
            <returns>One of the <see cref="T:System.Windows.Media.Stretch" /> enumeration values. The default value at runtime depends on the type of <see cref="T:System.Windows.Shapes.Shape" />.</returns>
        </member>
        <member name="P:CookPopularControl.Expression.IShape.RenderedGeometry">
            <summary>
            Gets the rendered geometry presented by the rendering engine.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.IShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc" />) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout" />).
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.IShape.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape" />. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape" /> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="E:CookPopularControl.Expression.IShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PolygonGeometrySource.ComputeLogicalBounds(System.Windows.Rect,CookPopularControl.Expression.IGeometrySourceParameters)">
            <summary>
            Polygon recognizes Stretch.None as the same as Stretch.Fill.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.SketchGeometryEffect">
            <summary>
            A geometry effect that transforms any geometry into a Sketch style as in SketchFlow.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.SketchGeometryEffect.DeepCopy">
            <summary>
            Makes a deep copy of the geometry effect.
            </summary>
            <returns>A clone of the current instance of the geometry effect.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.SketchGeometryEffect.Equals(CookPopularControl.Expression.GeometryEffect)">
            <summary>
            Tests if the given geometry effect is equivalent to the current instance.
            </summary>
            <param name="geometryEffect">A geometry effect to compare with.</param>
            <returns>Returns true when two effects render with the same appearance.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.SketchGeometryEffect.UpdateCachedGeometry(System.Windows.Media.Geometry)">
            <summary>
            Updating cachedGeometry based on the given input geometry.
            </summary>
            <param name="input">An input geometry.</param>
            <returns>Returns true when anything on cachedGeometry has been updated.</returns>
        </member>
        <member name="M:CookPopularControl.Expression.SketchGeometryEffect.GetEffectiveSegments(System.Windows.Media.PathFigure)">
            <summary>
            Iterates all simple segments in given path figure including the closing chord.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.SketchGeometryEffect.randomSeed">
            <summary>
            Use the same random seed on creation to keep visual flickering to a minimum.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.UnitType">
            <summary>
            Specifies the unit of thickness.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.UnitType.Pixel">
            <summary>
            Unit in pixels.
            </summary>
        </member>
        <member name="F:CookPopularControl.Expression.UnitType.Percent">
            <summary>
            Unit in percentage relative to the bounding box.
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.Arc">
            <summary>
            Renders an arc shape supporting Arc, Ring, and Pie mode controlled by ArcThickness.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.Arc.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle in degrees. Zero degrees is pointing up.</value>
        </member>
        <member name="P:CookPopularControl.Expression.Arc.EndAngle">
            <summary>
            Gets or sets the end angle.
            </summary>
            <value>The end angle in degrees. Zero degrees is pointing up.</value>
        </member>
        <member name="P:CookPopularControl.Expression.Arc.ArcThickness">
            <summary>
            Gets or sets the arc thickness.
            </summary>
            <value>The arc thickness in pixels or percentage depending on "ArcThicknessUnit".</value>
        </member>
        <member name="P:CookPopularControl.Expression.Arc.ArcThicknessUnit">
            <summary>
            Gets or sets the arc thickness unit.
            </summary>
            <value>The arc thickness unit in pixels or percentage.</value>
        </member>
        <member name="T:CookPopularControl.Expression.BlockArrow">
            <summary>
            Renders a block arrow shape that supports resizable arrow head and body.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.BlockArrow.Orientation">
            <summary>
            Gets or sets the orientation.
            </summary>
            <value>The orientation where the arrow is pointing to.</value>
        </member>
        <member name="P:CookPopularControl.Expression.BlockArrow.ArrowheadAngle">
            <summary>
            Gets or sets the arrow head angle.
            </summary>
            <value>The arrow head angle in degrees.</value>
        </member>
        <member name="P:CookPopularControl.Expression.BlockArrow.ArrowBodySize">
            <summary>
            Gets or sets the size of the arrow body.
            </summary>
            <value>The size of the arrow body in pixels.</value>
        </member>
        <member name="T:CookPopularControl.Expression.PrimitiveShape">
            <summary>
            Platform-neutral implementation of Shape deriving from WPF:Shape or SL:Path.
            </summary>
            <summary>
            Provides the WPF implementation of Shape that derives from the platform Shape.
            </summary>
        </member>
        <member name="E:CookPopularControl.Expression.PrimitiveShape.RenderedGeometryChanged">
            <summary>
            Occurs when RenderedGeometry is changed.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PrimitiveShape.CreateGeometrySource">
            <summary>
            Extends how the shape is drawn with creating geometry source.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PrimitiveShape.InvalidateGeometry(CookPopularControl.Expression.InvalidateGeometryReasons)">
            <summary>
            Invalidates the geometry for a <see cref="T:Microsoft.Expression.Media.IShape" />. After the invalidation, the <see cref="T:Microsoft.Expression.Media.IShape" /> will recompute the geometry, which will occur asynchronously.
            </summary>
        </member>
        <member name="M:CookPopularControl.Expression.PrimitiveShape.MeasureOverride(System.Windows.Size)">
             <summary>Provides the behavior for the Measure portion of Silverlight layout pass. Classes can override this method to define their own Measure pass behavior.</summary>
             <returns>The size that this object determines it requires during layout, based on its calculations of child object allotted sizes, or possibly on other considerations such as fixed container size.</returns>
             <param name="availableSize">The available size that this object can provide to child objects. Infinity (<see cref="F:System.Double.PositiveInfinity" />) can be specified as a value to indicate that the object will size to whatever content is available.</param>
             <remarks>
             In WPF, measure override works from Shape.DefiningGeometry which is not always as expected
             see bug 99497 for details where WPF is not having correct measure by default.
            
             In Silverlight, measure override on Path does not work the same as primitive shape works.
            
             We should return the smallest size this shape can correctly render without clipping.
             By default a shape can render as small as a dot, therefore returning the strokethickness.
             </remarks>
        </member>
        <member name="M:CookPopularControl.Expression.PrimitiveShape.ArrangeOverride(System.Windows.Size)">
            <summary>Provides the behavior for the Arrange portion of Silverlight layout pass. Classes can override this method to define their own Arrange pass behavior.</summary>
            <returns>The actual size used once the element is arranged in layout.</returns>
            <param name="finalSize">The final area within the parent that this object should use to arrange itself and its children.</param>
            <remarks> <see cref="T:Microsoft.Expression.Shapes.PrimitiveShape" />  will recompute the Geometry when it's invalidated and update the RenderedGeometry and GeometryMargin.</remarks>
        </member>
        <member name="P:CookPopularControl.Expression.PrimitiveShape.GeometryMargin">
            <summary>
            Gets the margin between logical bounds and actual geometry bounds.
            This can be either positive (as in <see cref="T:Microsoft.Expression.Shapes.Arc" />) or negative (as in <see cref="T:Microsoft.Expression.Controls.Callout" />).
            </summary>
        </member>
        <member name="T:CookPopularControl.Expression.RegularPolygon">
            <summary>
            Renders a regular polygon shape or corresponding star shape with variable number of points.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.RegularPolygon.PointCount">
            <summary>
            Gets or sets the number of points of the <see cref="T:Microsoft.Expression.Shapes.RegularPolygon" />.
            </summary>
        </member>
        <member name="P:CookPopularControl.Expression.RegularPolygon.InnerRadius">
            <summary>
            Gets or sets the the distance between the center and the innermost point.
            </summary>
            <value>The distance between the center and the innermost point.</value>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
