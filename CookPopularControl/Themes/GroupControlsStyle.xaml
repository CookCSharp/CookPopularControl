<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:commonConverters="clr-namespace:CookPopularControl.Communal.Converters"
                    xmlns:groupCtl="clr-namespace:CookPopularControl.Controls.Groups">

    <Style x:Key="DefaultSearchControlStyle" TargetType="{x:Type groupCtl:SearchControl}">
        <Setter Property="Height" Value="28" />
        <Setter Property="BorderBrush" Value="{DynamicResource FieldBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorBaseTemplate}" />
        <Setter Property="attached:FrameworkElementBaseAttached.IconWidth" Value="15" />
        <Setter Property="attached:FrameworkElementBaseAttached.IconHeight" Value="15" />
        <Setter Property="attached:FrameworkElementBaseAttached.CornerRadius" Value="5" />
        <Setter Property="attached:TextElementAttached.PlaceHolder" Value="搜索" />
        <Setter Property="attached:TextElementAttached.IsAddClearButton" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type groupCtl:SearchControl}">
                    <Border x:Name="RootBorder"
                            CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                            SnapsToDevicePixels="True"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Margin="0,-1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0"
                                     attached:FrameworkElementBaseAttached.IconHeight="{TemplateBinding attached:FrameworkElementBaseAttached.IconHeight}"
                                     attached:FrameworkElementBaseAttached.IconMargin="{TemplateBinding attached:FrameworkElementBaseAttached.IconMargin}"
                                     attached:FrameworkElementBaseAttached.IconWidth="{TemplateBinding attached:FrameworkElementBaseAttached.IconWidth}"
                                     attached:TextElementAttached.IsAddClearButton="{TemplateBinding attached:TextElementAttached.IsAddClearButton}"
                                     attached:TextElementAttached.PlaceHolder="{TemplateBinding attached:TextElementAttached.PlaceHolder}"
                                     Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     BorderThickness="0" />
                            <Button Grid.Column="1"
                                    attached:FrameworkElementBaseAttached.IconGeometry="{DynamicResource SearchGeometry}"
                                    attached:FrameworkElementBaseAttached.IconHeight="15" attached:FrameworkElementBaseAttached.IconWidth="15"
                                    Command="{x:Static groupCtl:SearchControl.SearchCommand}"
                                    Style="{DynamicResource ButtonTransparentIconStyle}"
                                    ToolTip="{TemplateBinding attached:TextElementAttached.PlaceHolder}"
                                    Margin="5,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FieldValidationErrorBrush}" />
                            <Setter TargetName="RootBorder" Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness.Left, Converter={commonConverters:DoubleToThickness}, ConverterParameter=1.5}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="RootBorder" Property="BorderThickness" Value="0" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AssistantForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SearchControlAddClearButtonStyle" TargetType="{x:Type groupCtl:SearchControl}" BasedOn="{StaticResource DefaultSearchControlStyle}">
        <Setter Property="attached:TextElementAttached.IsAddClearButton" Value="True" />
    </Style>

    <Style x:Key="DefaultTagEditingStyle" TargetType="{x:Type groupCtl:TagEditing}">
        <Setter Property="Height" Value="28" />
        <Setter Property="BorderBrush" Value="{DynamicResource FieldBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HeaderMargin" Value="0,0,5,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type groupCtl:TagEditing}">
                    <Border CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <DockPanel>
                            <ContentPresenter DockPanel.Dock="{TemplateBinding Position}"
                                              Content="{TemplateBinding Header}"
                                              Margin="{TemplateBinding HeaderMargin}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            <TextBox attached:FrameworkElementBaseAttached.CornerRadius="2"
                                     attached:FrameworkElementBaseAttached.IconHeight="{TemplateBinding attached:FrameworkElementBaseAttached.IconHeight}"
                                     attached:FrameworkElementBaseAttached.IconMargin="{TemplateBinding attached:FrameworkElementBaseAttached.IconMargin}"
                                     attached:FrameworkElementBaseAttached.IconWidth="{TemplateBinding attached:FrameworkElementBaseAttached.IconWidth}"
                                     attached:TextElementAttached.IsAddClearButton="{TemplateBinding attached:TextElementAttached.IsAddClearButton}"
                                     attached:TextElementAttached.PlaceHolder="{TemplateBinding attached:TextElementAttached.PlaceHolder}"
                                     Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     Height="{TemplateBinding Height}"
                                     BorderBrush="{TemplateBinding BorderBrush}"
                                     BorderThickness="{TemplateBinding BorderThickness}"
                                     Padding="2" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TagEditingAddClearButtonStyle" TargetType="{x:Type groupCtl:TagEditing}" BasedOn="{StaticResource DefaultTagEditingStyle}">
        <Setter Property="attached:TextElementAttached.IsAddClearButton" Value="True" />
    </Style>

</ResourceDictionary>