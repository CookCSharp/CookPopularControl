<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:panel="clr-namespace:CookPopularControl.Controls.Panels"
                    xmlns:menu="clr-namespace:CookPopularControl.Controls.Menus"
                    xmlns:ripple="clr-namespace:CookPopularControl.Controls.Ripple"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:toolConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ContextMenu x:Key="DefaultContentMenu">
        <MenuItem Command="Cut">
            <MenuItem.Icon>
                <Path Data="{DynamicResource CutGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Copy">
            <MenuItem.Icon>
                <Path Data="{DynamicResource CopyGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="Paste">
            <MenuItem.Icon>
                <Path Data="{DynamicResource PasteGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Command="SelectAll">
            <MenuItem.Icon>
                <Path Data="{DynamicResource SelectAllGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}"> 
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=MenuBase},Path=Foreground}" />
        <Setter Property="Padding" Value="24,0" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ripple:RippleAssist.Feedback" Value="#FFFFFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid ClipToBounds="True">
                        <Border x:Name="TemplateRoot"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                        <Border x:Name="BackgroundRoot" Opacity="0"
                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                        <ripple:Ripple Background="Transparent" Focusable="False"
                                       HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"
                                       Feedback="{TemplateBinding ripple:RippleAssist.Feedback}">
                            <Grid Height="{TemplateBinding Height}" Background="Transparent">
                                <Grid VerticalAlignment="Center" Background="Transparent" Margin="{TemplateBinding Padding}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="IconGroup"/>
                                        <ColumnDefinition Width="*" SharedSizeGroup="HeaderGroup"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid x:Name="IconWrapper" Visibility="Visible" Width="40">
                                        <ContentPresenter x:Name="Icon" Height="16" Width="16"
                                                          Content="{TemplateBinding Icon}" ContentSource="Icon"
                                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                    <Grid x:Name="GlyphWrapper" Visibility="Collapsed" Width="40">
                                        <Viewbox x:Name="GlyphPanel" Width="16" Height="16" FlowDirection="LeftToRight"
                                                 HorizontalAlignment="Left" VerticalAlignment="Center" Visibility="Collapsed">
                                            <Grid Width="24" Height="24">
                                                <Path x:Name="Glyph" Data="{DynamicResource CheckGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform"/>
                                            </Grid>
                                        </Viewbox>
                                    </Grid>
                                    <Grid Grid.Column="1">
                                        <ContentPresenter x:Name="BoldHeaderPresenter" TextElement.Foreground="{TemplateBinding Foreground}"
                                                          Content="{TemplateBinding Header}" ContentSource="Header"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"                                                             
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"                                                             
                                                          TextBlock.FontWeight="Bold" VerticalAlignment="Center"
                                                          RecognizesAccessKey="True"  Visibility="Hidden"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <ContentPresenter x:Name="HeaderPresenter" TextElement.Foreground="{TemplateBinding Foreground}"
                                                          Content="{TemplateBinding Header}" ContentSource="Header"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"                                                             
                                                          RecognizesAccessKey="True" VerticalAlignment="Center"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Grid>
                                    <Grid Grid.Column="2" x:Name="InputGestureTextWrapper" Visibility="Collapsed">
                                        <TextBlock Text="{TemplateBinding InputGestureText}" 
                                                   Foreground="{TemplateBinding Foreground}"
                                                   VerticalAlignment="Center" HorizontalAlignment="Right" Margin="16 0 0 0"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"                                                          
                                                   Visibility="{TemplateBinding InputGestureText, Converter={toolConverters:StringToVisibilityConverter}}"/>
                                    </Grid>
                                    <Grid Grid.Column="2" x:Name="SubBlock" Visibility="Collapsed" Margin="16 0 0 0">
                                        <Path Width="5" Height="10" Stretch="Uniform"
                                              Data="M0,16 L8,8 L0,0 Z" Fill="{TemplateBinding Foreground}"
                                              HorizontalAlignment="Right" VerticalAlignment="Center" SnapsToDevicePixels="False"/>
                                    </Grid>
                                </Grid>
                            </Grid>
                        </ripple:Ripple>
                        <Popup x:Name="PART_Popup" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               Placement="Bottom" PopupAnimation="Slide" AllowsTransparency="True"
                               CacheMode="{DynamicResource DefaultBitmapCache}"  
                               Focusable="False" VerticalOffset="0">
                            <Border x:Name="SubMenuBorder" CornerRadius="2" Effect="{DynamicResource CustomShadowDepth1}"
                                    Background="{Binding Path=Background, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=MenuBase}}">
                                <Border Background="Transparent">
                                    <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <Grid RenderOptions.ClearTypeHint="Enabled" Margin="0 16">
                                            <Canvas Width="0" Height="0" HorizontalAlignment="Left" VerticalAlignment="Top" >
                                                <Rectangle x:Name="OpaqueRect"
                                                           Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
                                                           Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
                                                           Fill="{Binding Background, ElementName=SubMenuBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.TabNavigation="Cycle"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            Grid.IsSharedSizeScope="True"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="SubBlock" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Popup" Property="Placement" Value="Right" />
                            <Setter Property="Height" Value="32"/>
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="Height" Value="32"/>
                            <Setter TargetName="InputGestureTextWrapper" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="BoldHeaderPresenter" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
                            <Setter Property="Padding" Value="16 0"/>
                            <Setter Property="Height" Value="48"/>
                            <Setter TargetName="TemplateRoot" Property="CornerRadius" Value="2"/>
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Padding" Value="16 0"/>
                            <Setter Property="Height" Value="48"/>
                            <Setter TargetName="TemplateRoot" Property="CornerRadius" Value="2"/>
                            <Setter TargetName="BackgroundRoot" Property="CornerRadius" Value="2"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="TopLevelHeader"/>
                                <Condition Property="IsSubmenuOpen" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="HeaderPresenter" Property="TextBlock.FontWeight" Value="DemiBold"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource BlockColor}" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                            <Setter TargetName="SubMenuBorder" Property="Margin" Value="5"/>
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                            <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                        </Trigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsCheckable" Value="True">
                            <Setter Property="Visibility" TargetName="GlyphWrapper" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="IconWrapper" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="BackgroundRoot" Property="Opacity" Value="0.53"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value=".56"/>
                        </Trigger>
                        <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                            <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultMenuStyle" TargetType="{x:Type MenuBase}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <AdornerDecorator CacheMode="{DynamicResource DefaultBitmapCache}">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                            <StackPanel ClipToBounds="True" IsItemsHost="True" Orientation="Horizontal" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultContextMenuStyle" TargetType="{x:Type ContextMenu}" BasedOn="{StaticResource DefaultMenuStyle}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuBase}">
                    <AdornerDecorator CacheMode="{DynamicResource DefaultBitmapCache}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" Margin="5" CornerRadius="2" Effect="{DynamicResource CustomShadowDepth1}"/>
                            <Border Margin="5" Background="Transparent">
                                <ScrollViewer Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <panel:SimpleGrid RenderOptions.ClearTypeHint="Enabled" Margin="0,16">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle"
                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                        Grid.IsSharedSizeScope="True"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </panel:SimpleGrid>
                                </ScrollViewer>
                            </Border>
                        </Grid>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircleMenuStyle" TargetType="{x:Type menu:CircleMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type menu:CircleMenu}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="VisibleStoryboard">
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="MenuItems" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CollapsedStoryboard">
                            <ObjectAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="MenuItems" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.5" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="TransformToStoryboard" Duration="0:0:0.5">
                            <DoubleAnimation To="0" Storyboard.TargetName="Rotate" Storyboard.TargetProperty="Angle"/>
                            <DoubleAnimation To="1.6" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX"/>
                            <DoubleAnimation To="1.6" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY"/>
                        </Storyboard>
                        <Storyboard x:Key="TransformFromStoryboard" Duration="0:0:0.5">
                            <DoubleAnimation To="-100" Storyboard.TargetName="Rotate" Storyboard.TargetProperty="Angle"/>
                            <DoubleAnimation To="0" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleX"/>
                            <DoubleAnimation To="0" Storyboard.TargetName="Scale" Storyboard.TargetProperty="ScaleY"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <panel:SimpleGrid ClipToBounds="False" Background="{TemplateBinding Background}">
                        <ToggleButton x:Name="PART_LaunchButton" Width="52" Height="52" 
                                      Foreground="{TemplateBinding Foreground}" Background="Transparent"
                                      attached:FrameworkElementBaseAttached.IconWidth="50"
                                      attached:FrameworkElementBaseAttached.IconHeight="50"
                                      attached:FrameworkElementBaseAttached.CornerRadius="50"
                                      attached:FrameworkElementBaseAttached.IconGeometry="{DynamicResource PlusGeometry}"
                                      Style="{DynamicResource TransparentIconToggleButtonStyle}"/>
                        <panel:ArcPanel x:Name="MenuItems" IsItemsHost="True" SnapsToDevicePixels="True"
                                        Radius="{TemplateBinding Radius}" ArcAngle="{TemplateBinding ArcAngle}" 
                                        IsItemRotate="{TemplateBinding IsItemRotate}" RenderTransformOrigin="0.5,0.5">
                            <panel:ArcPanel.RenderTransform>
                                <TransformGroup>
                                    <RotateTransform Angle="100" x:Name="Rotate"/>
                                    <ScaleTransform ScaleX="0" ScaleY="0" x:Name="Scale"/>
                                </TransformGroup>
                            </panel:ArcPanel.RenderTransform>
                        </panel:ArcPanel>
                    </panel:SimpleGrid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True" SourceName="PART_LaunchButton">
                            <Setter Property="attached:FrameworkElementBaseAttached.IconGeometry" Value="{DynamicResource MinusGeometry}" TargetName="PART_LaunchButton"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="VisibleStoryboard" Storyboard="{StaticResource VisibleStoryboard}"/>
                                <BeginStoryboard x:Name="TransformToStoryboard" Storyboard="{StaticResource TransformToStoryboard}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="VisibleStoryboard"/>
                                <RemoveStoryboard BeginStoryboardName="TransformToStoryboard"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False" SourceName="PART_LaunchButton">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CollapsedStoryboard" Storyboard="{StaticResource CollapsedStoryboard}"/>
                                <BeginStoryboard x:Name="TransformFromStoryboard" Storyboard="{StaticResource TransformFromStoryboard}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="CollapsedStoryboard"/>
                                <RemoveStoryboard BeginStoryboardName="TransformFromStoryboard"/>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>