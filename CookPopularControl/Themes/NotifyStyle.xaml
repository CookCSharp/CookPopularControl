<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:notify="clr-namespace:CookPopularControl.Controls.Notify"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:tb="http://www.hardcodet.net/taskbar">

    <ContextMenu x:Key="NotifyIconContextMenu">
        <MenuItem Header="打开" Command="{x:Static notify:TaskbarIcon.OpenApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource OpenGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="隐藏到托盘" Command="{x:Static notify:TaskbarIcon.HideApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource HideGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="退出" Command="{x:Static notify:TaskbarIcon.ExitApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource ExitGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="欢迎你，写代码的厨子😀"/>
    </ContextMenu>

    <Style x:Key="BubbleMessageStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="MinWidth" Value="200" />
        <Setter Property="Height" Value="35" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="attached:FrameworkElementBaseAttached.CornerRadius" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <AdornerDecorator CacheMode="{DynamicResource DefaultBitmapCache}" SnapsToDevicePixels="True">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" Effect="{TemplateBinding Effect}"
                                CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}">
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="30" x:Name="closeWidth"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" ContentSource="Content"
                                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Button x:Name="CloseButton" Grid.Column="1"
                                        Foreground="{TemplateBinding Foreground}"
                                        Command="{x:Static notify:NotifyMessageBase.CloseNotifyMessageCommand}"
                                        attached:FrameworkElementBaseAttached.IconWidth="14"
                                        attached:FrameworkElementBaseAttached.IconHeight="14"
                                        attached:FrameworkElementBaseAttached.IconGeometry="{DynamicResource CloseGeometry}"/>
                            </Grid>
                        </Border>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(notify:NotifyMessageBase.IsShowCloseButton)}" Value="False">
                            <Setter Property="Width" Value="0" TargetName="closeWidth"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>