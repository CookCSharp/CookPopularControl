<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:notify="clr-namespace:CookPopularControl.Controls.Notify"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:tb="http://www.hardcodet.net/taskbar">

    <ContextMenu x:Key="NotifyIconContextMenu">
        <MenuItem Header="打开" Command="{x:Static notify:TaskbarIcon.OpenApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource OpenGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="隐藏到托盘" Command="{x:Static notify:TaskbarIcon.HideApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource HideGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="退出" Command="{x:Static notify:TaskbarIcon.ExitApplicationCommand}">
            <MenuItem.Icon>
                <Path Data="{DynamicResource ExitGeometry}" Fill="{DynamicResource PrimaryForeground}" Stretch="Uniform"/>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem Header="欢迎你，写代码的厨子😀"/>
    </ContextMenu>

    <Style x:Key="BubbleMessageStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Width" Value="300" />
        <Setter Property="MinHeight" Value="60" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource DefaultBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Effect" Value="{DynamicResource NotifyMessageShadowEffect}" />
        <Setter Property="attached:FrameworkElementBaseAttached.CornerRadius" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <AdornerDecorator CacheMode="{DynamicResource DefaultBitmapCache}" SnapsToDevicePixels="True">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="50" x:Name="closeWidth"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Border Grid.ColumnSpan="3" Grid.RowSpan="2" Effect="{TemplateBinding Effect}" Background="{TemplateBinding Background}" 
                                    CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"/>
                            <Path Grid.Column="0" Grid.RowSpan="2" Width="24" Height="24" 
                                  Data="{TemplateBinding notify:BubbleMessage.BubbleMessageIcon}" Stretch="Uniform" 
                                  Fill="{TemplateBinding notify:BubbleMessage.BubbleMessageIconBrush}"/>
                            <ContentPresenter Grid.Column="1" ContentSource="Content"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Button x:Name="CloseButton" Grid.Column="2"
                                    Foreground="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ButtonTransparentIconStyle}"
                                    Command="{x:Static notify:NotifyMessageBase.CloseNotifyMessageCommand}"
                                    attached:FrameworkElementBaseAttached.IconWidth="14"
                                    attached:FrameworkElementBaseAttached.IconHeight="14"
                                    attached:FrameworkElementBaseAttached.IconGeometry="{DynamicResource CloseGeometry}"/>
                            <UniformGrid Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" Columns="2" x:Name="PART_ButtonsClose" Height="20" Visibility="Collapsed">
                                <Button Content="取消" Foreground="Red" Command="{x:Static notify:BubbleMessage.CancelNotifyMessageCommand}"
                                        Style="{DynamicResource ButtonTransparentStyle}" HorizontalAlignment="Stretch" />
                                <Button Content="确定" Foreground="Red" Command="{x:Static notify:BubbleMessage.ConfirmNotifyMessageCommand}" 
                                        Style="{DynamicResource ButtonTransparentStyle}" HorizontalAlignment="Stretch" />
                            </UniformGrid>
                        </Grid>
                    </AdornerDecorator>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(notify:NotifyMessageBase.IsShowCloseButton)}" Value="False">
                            <Setter Property="Width" Value="0" TargetName="closeWidth"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>