<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:CookPopularControl.Communal"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls"
                    xmlns:pt="https://Chance.CookPopularCSharpToolkit/2021/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ControlBaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="pc:RadioButtonAssistant.CircleDiameter" Value="20" />
        <Setter Property="pc:RadioButtonAssistant.CheckedBrush" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border Background="Transparent">
                        <DockPanel>
                            <pc:SimpleGrid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Ellipse x:Name="BackgroundCircle"
                                         Width="{TemplateBinding pc:RadioButtonAssistant.CircleDiameter}"
                                         Height="{TemplateBinding pc:RadioButtonAssistant.CircleDiameter}"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         StrokeThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness.Left}" />
                                <Ellipse x:Name="FillCircle"
                                         Width="{TemplateBinding pc:RadioButtonAssistant.CircleDiameter, Converter={pt:ValueTranslateToDoubleConverter}, ConverterParameter=0.5}"
                                         Height="{TemplateBinding pc:RadioButtonAssistant.CircleDiameter, Converter={pt:ValueTranslateToDoubleConverter}, ConverterParameter=0.5}"
                                         Fill="{TemplateBinding pc:RadioButtonAssistant.CheckedBrush}"
                                         Visibility="Collapsed" />
                            </pc:SimpleGrid>
                            <ContentPresenter Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              RecognizesAccessKey="True"
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="pc:RadioButtonAssistant.IsFillFully" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="FillCircle" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="pc:RadioButtonAssistant.IsFillFully" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="FillCircle" />
                            <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(pc:RadioButtonAssistant.CircleDiameter)}" TargetName="FillCircle" />
                            <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(pc:RadioButtonAssistant.CircleDiameter)}" TargetName="FillCircle" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="pc:RadioButtonAssistant.IsFillFully" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Fill" Value="Transparent" TargetName="BackgroundCircle" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonFillFullyStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButtonStyle}">
        <Setter Property="pc:RadioButtonAssistant.IsFillFully" Value="True" />
    </Style>

    <Style x:Key="RadioButtonCustomIconStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButtonStyle}">
        <Setter Property="common:FrameworkElementBaseAttached.IconGeometry" Value="{DynamicResource CheckGeometry}" />
        <Setter Property="common:FrameworkElementBaseAttached.IconWidth" Value="15" />
        <Setter Property="common:FrameworkElementBaseAttached.IconHeight" Value="15" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <DockPanel>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding common:FrameworkElementBaseAttached.CornerRadius}">
                            <Path x:Name="PART_Path"
                                  Width="{TemplateBinding common:FrameworkElementBaseAttached.IconWidth}"
                                  Height="{TemplateBinding common:FrameworkElementBaseAttached.IconHeight}"
                                  Fill="{TemplateBinding pc:RadioButtonAssistant.CheckedBrush}"
                                  Stretch="Uniform" />
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(common:FrameworkElementBaseAttached.IconGeometry)}" TargetName="PART_Path" />
                        </Trigger>
                        <Trigger Property="pc:RadioButtonAssistant.IsAlwaysShowHeader" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Path" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RadioButtonCustomStyle" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButtonStyle}">
        <Setter Property="pc:RadioButtonAssistant.Header" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <DockPanel>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding common:FrameworkElementBaseAttached.CornerRadius}">
                            <ContentPresenter x:Name="PART_Custom" Content="{x:Null}" />
                        </Border>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          RecognizesAccessKey="True"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Content" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(pc:RadioButtonAssistant.Header)}" TargetName="PART_Custom" />
                        </Trigger>
                        <Trigger Property="pc:RadioButtonAssistant.IsAlwaysShowHeader" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_Custom" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>