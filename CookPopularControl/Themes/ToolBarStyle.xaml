<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:toolbar="clr-namespace:CookPopularControl.Controls.ToolBar"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/CheckBoxStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/ComboBoxStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/ListBoxStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ListBoxItemBaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/MenuStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/ButtonStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/RadioButtonStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/ToggleButtonStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/TextBoxStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource DefaultCheckBoxStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}" BasedOn="{StaticResource DefaultMenuStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <!--<Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=MenuItemStyleKey}" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource DefaultMenuItemStyle}">

    </Style>-->
    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource DefaultRadioButtonStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}" BasedOn="{StaticResource VerticalSeparatorStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource DefaultToggleButtonStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>
    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Margin" Value="8,0" />
    </Style>


    <Style x:Key="ToolBarHorizontalOverflowToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource AssistantBackgroundBrush}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Path x:Name="PathMore"
                              Data="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z"
                              Fill="{DynamicResource PrimaryThemeBrush}"
                              SnapsToDevicePixels="True" Stretch="Uniform"
                              Width="4"
                              Margin="6,0" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarVerticalOverflowToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource AssistantBackgroundBrush}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Path x:Name="PathMore"
                              Data="M14,0 C15.104569,0 16,0.89543051 16,2 16,3.1045694 15.104569,4 14,4 12.895431,4 12,3.1045694 12,2 12,0.89543051 12.895431,0 14,0 z M8,0 C9.1045694,0 10,0.89543051 10,2 10,3.1045694 9.1045694,4 8,4 6.8954306,4 6,3.1045694 6,2 6,0.89543051 6.8954306,0 8,0 z M2,0 C3.1045694,0 4,0.89543051 4,2 4,3.1045694 3.1045694,4 2,4 0.89543056,4 0,3.1045694 0,2 0,0.89543051 0.89543056,0 2,0 z"
                              Fill="{DynamicResource PrimaryThemeBrush}"
                              SnapsToDevicePixels="True" Stretch="Uniform"
                              Height="4"
                              Margin="0,6" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarHorizontalThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <Path Data="M471.545636 0 471.545636 78.777181l78.768995 0 0-78.777181L471.545636 0zM471.545636 236.299821l78.768995 0 0-78.761831-78.768995 0L471.545636 236.299821zM471.545636 393.83781l78.768995 0 0-78.761831-78.768995 0L471.545636 393.83781zM471.545636 551.376823l78.768995 0 0-78.753645-78.768995 0L471.545636 551.376823zM471.545636 708.922998l78.768995 0 0-78.760808-78.768995 0L471.545636 708.922998zM471.545636 866.460987l78.768995 0 0-78.761831-78.768995 0L471.545636 866.460987zM471.545636 1024l78.768995 0 0-78.777181-78.768995 0L471.545636 1024z"
                              Fill="{DynamicResource PrimaryThemeBrush}"
                              SnapsToDevicePixels="True" Stretch="Uniform"
                              Width="2.5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolBarVerticalThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <Path Data="M430.28 430.28h163.44v163.44H430.28z m-362.614 0h163.439v163.44H67.665z m725.228 0h163.44v163.44h-163.44z m400.228 0h163.44v163.44h-163.44z m400.228 0h163.44v163.44h-163.44z m400.228 0h163.44v163.44h-163.44z"
                              Fill="{DynamicResource PrimaryThemeBrush}"
                              SnapsToDevicePixels="True" Stretch="Uniform"
                              Height="2.5" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultToolBarStyle" TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{DynamicResource AssistantBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="MinHeight" Value="40" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}" />
                    </ControlTemplate.Resources>
                    <DockPanel x:Name="Grid"
                               SnapsToDevicePixels="true"
                               Background="{TemplateBinding Background}"
                               Margin="5">
                        <Grid x:Name="OverflowGrid" DockPanel.Dock="Right" HorizontalAlignment="Right">
                            <ToggleButton x:Name="OverflowButton"
                                          ClickMode="Press"
                                          FocusVisualStyle="{x:Null}"
                                          IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Style="{StaticResource ToolBarHorizontalOverflowToggleButtonStyle}"
                                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasOverflowItems, Converter={toolsConverters:BooleanToVisibilityConverter}}"
                                          Foreground="{TemplateBinding Foreground}" />
                            <Popup x:Name="OverflowPopup"
                                   AllowsTransparency="true" Focusable="false"
                                   IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Bottom"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="false"
                                   Margin="1">
                                <Border x:Name="ToolBarSubMenuBorder"
                                        CornerRadius="2"
                                        Effect="{DynamicResource ShadowEffectDepth1}"
                                        RenderOptions.ClearTypeHint="Enabled" TextBlock.FontWeight="ExtraBold"
                                        Background="{TemplateBinding Background}"
                                        Margin="1">
                                    <Border Background="Transparent">
                                        <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel"
                                                              FocusVisualStyle="{x:Null}"
                                                              Focusable="true" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              WrapWidth="200"
                                                              Margin="6" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border x:Name="MainPanelBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                <Thumb x:Name="ToolBarThumb" Style="{StaticResource ToolBarHorizontalThumbStyle}" />
                                <ContentPresenter x:Name="ToolBarHeader"
                                                  ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Margin="6,0" HorizontalAlignment="Center" VerticalAlignment="Center" />
                                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="IsEnabled" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter TargetName="ToolBarHeader" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter TargetName="ToolBarThumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="OverflowPopup" Property="HasDropShadow" Value="true">
                            <Setter TargetName="ToolBarSubMenuBorder" Property="Margin" Value="5" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter TargetName="OverflowButton" Property="Style" Value="{StaticResource ToolBarVerticalOverflowToggleButtonStyle}" />
                            <Setter TargetName="ToolBarThumb" Property="Style" Value="{StaticResource ToolBarVerticalThumbStyle}" />
                            <Setter TargetName="OverflowGrid" Property="DockPanel.Dock" Value="Bottom" />
                            <Setter TargetName="OverflowGrid" Property="HorizontalAlignment" Value="Center" />
                            <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top" />
                            <Setter TargetName="ToolBarHeader" Property="Margin" Value="0,6" />
                            <Setter TargetName="OverflowPopup" Property="Placement" Value="Right" />
                            <Setter TargetName="OverflowPopup" Property="HorizontalOffset" Value="5" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultToolBarTrayStyle" TargetType="{x:Type ToolBarTray}">
        <Setter Property="Background" Value="Transparent" />
    </Style>

</ResourceDictionary>