<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal"
                    xmlns:commonConverters="clr-namespace:CookPopularControl.Communal"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls"
                    xmlns:toolkit="https://Chance.CookPopularCSharpToolkit/2021/xaml"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ControlsBaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ButtonBaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CheckBoxBaseStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="Height" Value="24" />
        <Setter Property="MinHeight" Value="10" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ClickStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame Value="1" KeyTime="0" />
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="PART_Border"
                                Width="{TemplateBinding Height}"
                                Height="{TemplateBinding Height}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="Transparent"
                                CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}">
                            <Grid x:Name="FillGrid" Background="{TemplateBinding Background}">
                                <Rectangle Width="{TemplateBinding pc:CheckBoxAssistant.FillSize}"
                                           Height="{TemplateBinding pc:CheckBoxAssistant.FillThickness}"
                                           Fill="{TemplateBinding pc:CheckBoxAssistant.FillBrush}"
                                           Visibility="{TemplateBinding pc:CheckBoxAssistant.FillType, Converter={commonConverters:CheckBoxFillTypeToVisibilityConverter}, ConverterParameter=Line}" />
                                <Rectangle Width="{TemplateBinding pc:CheckBoxAssistant.FillSize}"
                                           Height="{TemplateBinding pc:CheckBoxAssistant.FillSize}"
                                           Fill="{TemplateBinding pc:CheckBoxAssistant.FillBrush}"
                                           Visibility="{TemplateBinding pc:CheckBoxAssistant.FillType, Converter={commonConverters:CheckBoxFillTypeToVisibilityConverter}, ConverterParameter=Rectangle}" />
                                <Path Data="{DynamicResource CheckGeometry}"
                                      Fill="{TemplateBinding pc:CheckBoxAssistant.FillBrush}"
                                      Stretch="Uniform"
                                      Stroke="{TemplateBinding pc:CheckBoxAssistant.FillBrush}"
                                      StrokeThickness="{TemplateBinding pc:CheckBoxAssistant.FillThickness}"
                                      Visibility="{TemplateBinding pc:CheckBoxAssistant.FillType, Converter={commonConverters:CheckBoxFillTypeToVisibilityConverter}, ConverterParameter=Check}" />
                            </Grid>
                        </Border>
                        <Canvas>
                            <Ellipse x:Name="InteractionEllipse"
                                     Width="{Binding ElementName=PART_Border, Path=ActualWidth, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=1.8}"
                                     Height="{Binding ElementName=PART_Border, Path=ActualHeight, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=1.8}"
                                     Fill="#66000000"
                                     Opacity="0"
                                     HorizontalAlignment="Center" VerticalAlignment="Center"
                                     IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform X="{Binding ElementName=PART_Border, Path=ActualWidth, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=-0.4}" Y="{Binding ElementName=PART_Border, Path=ActualHeight, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=-0.4}" />
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <ContentPresenter Grid.Column="1"
                                          Content="{TemplateBinding Content}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource ClickStoryboard}" />
                        </EventTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="FillGrid" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledBrush}" TargetName="PART_Border" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="pc:CheckBoxAssistant.FillType" Value="Rectangle" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" TargetName="FillGrid" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SwitchControlBaseStyle" TargetType="{x:Type pc:SwitchControl}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource AssistantForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource AssistantThemeBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="SwitchContent" Value="OFF" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:SwitchControl}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="True">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel"
                                    Width="{TemplateBinding Width}"
                                    Height="{TemplateBinding Height}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding SwicthCloseBackground}"
                                    CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}">
                                <Canvas Background="Transparent">
                                    <Border x:Name="PART_CheckFlag"
                                            Width="{TemplateBinding Height}"
                                            Height="{TemplateBinding Height}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                            Effect="{TemplateBinding attached:FrameworkElementBaseAttached.ShadowEffect}">
                                        <TextBlock Text="{TemplateBinding SwitchContent}"
                                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SwitchOpenBackground}" TargetName="ForegroundPanel" />
                            <Setter Property="SwitchContent" Value="ON" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>