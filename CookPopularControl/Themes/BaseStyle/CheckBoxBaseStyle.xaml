<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:assistant="clr-namespace:CookPopularControl.Controls.CheckBox"
                    xmlns:commonConverters="clr-namespace:CookPopularControl.Communal.Converters"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ControlsBaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ButtonBaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CheckBoxBaseStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorTheme}"/>
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ClickStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="InteractionEllipse">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Effect="{TemplateBinding attached:FrameworkElementBaseAttached.ShadowEffect}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="PART_Border"  
                                    Width="{TemplateBinding Height}" Height="{TemplateBinding Height}"
                                    BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                    Background="Transparent">
                                <Grid x:Name="FillGrid" Background="{TemplateBinding Background}" Margin="-1">
                                    <Line X1="0" X2="1" Stretch="Uniform"
                                          Stroke="{TemplateBinding assistant:CheckBoxAssistant.FillBrush}" 
                                          StrokeThickness="{TemplateBinding assistant:CheckBoxAssistant.FillThickness}"
                                          Visibility="{TemplateBinding assistant:CheckBoxAssistant.FillType,Converter={commonConverters:CheckBoxFillTypeToVisibilityConverter},ConverterParameter=Line}"/>
                                    <Rectangle Fill="{TemplateBinding assistant:CheckBoxAssistant.FillBrush}"
                                               Width="{TemplateBinding assistant:CheckBoxAssistant.FillSize}"
                                               Height="{TemplateBinding assistant:CheckBoxAssistant.FillSize}"
                                               Visibility="{TemplateBinding assistant:CheckBoxAssistant.FillType,Converter={commonConverters:CheckBoxFillTypeToVisibilityConverter},ConverterParameter=Rectangle}"/>
                                    <Path Data="{DynamicResource CheckGeometry}" Stretch="Uniform" 
                                          Fill="{TemplateBinding assistant:CheckBoxAssistant.FillBrush}"
                                          Stroke="{TemplateBinding assistant:CheckBoxAssistant.FillBrush}" 
                                          StrokeThickness="{TemplateBinding assistant:CheckBoxAssistant.FillThickness}"
                                          Visibility="{TemplateBinding assistant:CheckBoxAssistant.FillType,Converter={commonConverters:CheckBoxFillTypeToVisibilityConverter},ConverterParameter=Check}"/>
                                </Grid>
                            </Border>
                            <Canvas>
                                <Ellipse x:Name="InteractionEllipse" Fill="#66000000" Opacity="0" IsHitTestVisible="False"
                                         RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center"
                                         Width="{Binding ElementName=PART_Border,Path=ActualWidth,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=1.8}"
                                         Height="{Binding ElementName=PART_Border,Path=ActualHeight,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=1.8}">
                                    <Ellipse.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform X="{Binding ElementName=PART_Border,Path=ActualWidth,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=-0.4}"
                                                                Y="{Binding ElementName=PART_Border,Path=ActualHeight,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=-0.4}"/>
                                        </TransformGroup>
                                    </Ellipse.RenderTransform>
                                </Ellipse>
                            </Canvas>
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource ClickStoryboard}"/>
                        </EventTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="4,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="FillGrid"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True"/>
                                <Condition Property="assistant:CheckBoxAssistant.FillType" Value="Rectangle"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="Transparent" TargetName="FillGrid"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>