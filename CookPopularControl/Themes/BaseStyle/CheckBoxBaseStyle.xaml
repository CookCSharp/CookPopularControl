<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:CookPopularControl.Communal"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls"
                    xmlns:pt="https://Chance.CookPopularCSharpToolkit/2021/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ControlBaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CheckBoxBaseStyle" TargetType="{x:Type CheckBox}" BasedOn="{StaticResource FixedControlBaseStyle}">
        <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="6,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ClickStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <EasingDoubleKeyFrame Value="0" KeyTime="0" />
                                <EasingDoubleKeyFrame Value="1" KeyTime="0:0:0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InteractionEllipse" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame Value="1" KeyTime="0" />
                                <EasingDoubleKeyFrame Value="0" KeyTime="0:0:0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="PART_Border"
                                Width="{TemplateBinding pc:CheckBoxAssistant.BoxSize}"
                                Height="{TemplateBinding pc:CheckBoxAssistant.BoxSize}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="Transparent"
                                CornerRadius="{TemplateBinding common:FrameworkElementBaseAttached.CornerRadius}"
                                VerticalAlignment="Center">
                            <Border x:Name="PathBorder"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{Binding ElementName=PART_Border, Path=CornerRadius}"
                                    Visibility="Collapsed">
                                <Path x:Name="PART_PATH"
                                      Data="{DynamicResource CheckGeometry}"
                                      Fill="{TemplateBinding pc:CheckBoxAssistant.FillBrush}"
                                      Stretch="Uniform" />
                            </Border>
                        </Border>
                        <Canvas>
                            <Ellipse x:Name="InteractionEllipse"
                                     Width="{Binding ElementName=PART_Border, Path=ActualHeight, Converter={pt:ValueTranslateToDoubleConverter}, ConverterParameter=2}"
                                     Height="{Binding ElementName=PART_Border, Path=ActualHeight, Converter={pt:ValueTranslateToDoubleConverter}, ConverterParameter=2}"
                                     Fill="#66000000"
                                     Opacity="0"
                                     IsHitTestVisible="False" RenderTransformOrigin="0.5,0.5">
                                <Ellipse.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform X="{Binding ElementName=PART_Border, Path=ActualHeight, Converter={pt:ValueTranslateToDoubleConverter}, ConverterParameter=-0.5}">
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{pt:HalfOfDifferenceTranslateToDoubleConverter}" Mode="OneWay">
                                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                    <Binding ElementName="InteractionEllipse" Path="ActualHeight" />
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TransformGroup>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Canvas>
                        <ContentPresenter Grid.Column="1"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="ButtonBase.Click">
                            <BeginStoryboard Storyboard="{StaticResource ClickStoryboard}" />
                        </EventTrigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
                            <Setter Property="Padding" Value="4,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PathBorder" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="PathBorder" />
                            <Setter Property="Data" Value="{DynamicResource CheckGeometry}" TargetName="PART_PATH" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="pc:CheckBoxAssistant.NullFillType" Value="Line" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="PathBorder" />
                            <Setter Property="Data" Value="{DynamicResource LineGeometry}" TargetName="PART_PATH" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="{x:Null}" />
                                <Condition Property="pc:CheckBoxAssistant.NullFillType" Value="Rectangle" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="PathBorder" />
                            <Setter Property="Background" Value="Transparent" TargetName="PathBorder" />
                            <Setter Property="Data" Value="{DynamicResource RectangleGeometry}" TargetName="PART_PATH" />
                            <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(pc:CheckBoxAssistant.BoxSize), Converter={pt:DoubleToThicknessConverter}, ConverterParameter=0.2}" TargetName="PART_PATH" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledBrush}" TargetName="PART_Border" />
                            <Setter Property="pc:CheckBoxAssistant.FillBrush" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>