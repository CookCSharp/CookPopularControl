<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:CookPopularControl.Communal"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls"
                    xmlns:toolkit="https://Chance.CookPopularCSharpToolkit/2021/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/ValueConverter.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="LinearProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="IsIndeterminate" Value="False" />
        <Setter Property="Foreground" Value="{DynamicResource AssistantThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="5,0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="AirFanStoryboard">
                            <DoubleAnimation Storyboard.TargetName="ariFan" Storyboard.TargetProperty="Angle"
                                             From="0" To="360" Duration="0:0:1"
                                             RepeatBehavior="Forever" />
                            <DoubleAnimation Storyboard.TargetName="leafTranslate" Storyboard.TargetProperty="X"
                                             From="0" To="-500" Duration="0:0:2"
                                             RepeatBehavior="Forever" />
                            <!--<MatrixAnimationUsingPath Storyboard.TargetName="leafMatrix"
                                                      Storyboard.TargetProperty="Matrix"
                                                      DoesRotateWithTangent="True"
                                                      Duration="0:0:5"
                                                      RepeatBehavior="Forever">
                                <MatrixAnimationUsingPath.PathGeometry>
                                    <PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100"/>
                                </MatrixAnimationUsingPath.PathGeometry>
                            </MatrixAnimationUsingPath>-->
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True" Effect="{TemplateBinding common:FrameworkElementBaseAttached.ShadowEffect}">
                        <Grid>
                            <Border x:Name="border"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, Path=(common:FrameworkElementBaseAttached.CornerRadius)}">
                                <Grid x:Name="IconGrid" Visibility="{TemplateBinding pc:LinearProgressBarAssistant.IsShowIcon, Converter={toolkit:BooleanToVisibilityConverter}}">
                                    <Path Width="{TemplateBinding pc:LinearProgressBarAssistant.IconSize}"
                                          Height="{TemplateBinding pc:LinearProgressBarAssistant.IconSize}"
                                          Data="{DynamicResource AirFanGeometry}"
                                          Fill="White"
                                          Stretch="Uniform"
                                          HorizontalAlignment="Right" VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5,0.5" Stroke="White" StrokeThickness="1">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="ariFan" />
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path x:Name="IconLeaf"
                                          Width="{TemplateBinding pc:LinearProgressBarAssistant.IconSize}"
                                          Height="{TemplateBinding pc:LinearProgressBarAssistant.IconSize}"
                                          Data="{DynamicResource LeafGeometry}"
                                          Fill="White"
                                          Stretch="Uniform"
                                          HorizontalAlignment="Right" VerticalAlignment="Center"
                                          RenderTransformOrigin="0.5,0.5" Stroke="White" StrokeThickness="1"
                                          Visibility="Collapsed">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <MatrixTransform x:Name="leafMatrix" />
                                                <TranslateTransform x:Name="leafTranslate" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                            <Border x:Name="PART_Track" />
                            <Grid x:Name="PART_Indicator" HorizontalAlignment="Left" ClipToBounds="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="width1" />
                                    <ColumnDefinition x:Name="width2" Width="0" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="Animation" RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="-1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Border Background="{TemplateBinding Foreground}" CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, Path=(common:FrameworkElementBaseAttached.CornerRadius)}">
                                        <Viewbox Margin="{TemplateBinding Padding}"
                                                 SnapsToDevicePixels="True"
                                                 HorizontalAlignment="Left"
                                                 StretchDirection="DownOnly">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Value, StringFormat={}{0:F0}%}"
                                                           Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, Path=(pc:LinearProgressBarAssistant.TextColor)}"
                                                           FontSize="{TemplateBinding FontSize}"
                                                           SnapsToDevicePixels="True"
                                                           VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                                           RenderTransformOrigin="0.5,0.5"
                                                           Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ProgressBar}, Path=(pc:LinearProgressBarAssistant.IsShowPercent), Converter={toolkit:BooleanToVisibilityConverter}}">
                                                    <TextBlock.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="-1" ScaleY="1" />
                                                            <SkewTransform AngleX="0" AngleY="0" />
                                                            <RotateTransform Angle="0" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </TextBlock.RenderTransform>
                                                </TextBlock>
                                            </StackPanel>
                                        </Viewbox>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard x:Name="HorizontalStoryboard" RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame Value="0,0.5" KeyTime="0:0:0" />
                                            <EasingPointKeyFrame Value="3,0.5" KeyTime="0:0:2" />
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(pc:LinearProgressBarAssistant.IsShowIcon)}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Value, Converter={toolkit:ValueBetween0And100ToBooleanConverter}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="IconLeaf" />
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard x:Name="AirFanStoryboard" Storyboard="{StaticResource AirFanStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="AirFanStoryboard" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=(pc:LinearProgressBarAssistant.IsShowIcon)}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Value}" Value="100" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconGrid" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Width" Value="0.25*" TargetName="width1" />
                            <Setter Property="Width" Value="0.75*" TargetName="width2" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircularProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource AssistantThemeBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminateStoryboard">
                            <DoubleAnimation Storyboard.TargetName="PathProgressRotateTransform" Storyboard.TargetProperty="Angle"
                                             From="0" To="360" Duration="0:0:2"
                                             RepeatBehavior="Forever" />
                        </Storyboard>
                        <Storyboard x:Key="FullyCircularStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyGridScaleTransform" Storyboard.TargetProperty="ScaleX" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame Value="0.0" KeyTime="0" />
                                <SplineDoubleKeyFrame Value="1.0" KeyTime="0:0:1" />
                                <SplineDoubleKeyFrame Value="1.0" KeyTime="0:0:1.1" />
                                <SplineDoubleKeyFrame Value="0.0" KeyTime="0:0:4" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="PathProgressRotateTransform" Storyboard.TargetProperty="Angle"
                                             From="0" To="360" Duration="0:0:1.25"
                                             RepeatBehavior="Forever" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" Margin="{TemplateBinding Padding}">
                        <Ellipse x:Name="PART_Background"
                                 Stretch="Fill"
                                 Stroke="{DynamicResource UnEnabledBrush}"
                                 StrokeThickness="{TemplateBinding pc:CircularProgressAssistant.ArcThickness}" />
                        <Grid x:Name="PathGrid" Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:CircularProgressAssistant.ArcThickness), Converter={toolkit:DoubleToThicknessConverter}, ConverterParameter=0.5, Mode=OneWay}">
                            <Grid>
                                <Grid.RenderTransform>
                                    <ScaleTransform x:Name="FullyGridScaleTransform" ScaleX="0" />
                                </Grid.RenderTransform>
                            </Grid>
                            <Canvas>
                                <Path x:Name="PART_Progress"
                                      Fill="{TemplateBinding Background}"
                                      Stretch="None"
                                      Stroke="{TemplateBinding Foreground}"
                                      StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                                      StrokeThickness="{TemplateBinding pc:CircularProgressAssistant.ArcThickness}">
                                    <Path.Data>
                                        <GeometryGroup>
                                            <PathGeometry>
                                                <PathGeometry.Figures>
                                                    <PathFigureCollection>
                                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcStartPointConverter}, Mode=OneWay}">
                                                            <!--  Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcCircularSizeConverter}, Mode=OneWay}"  -->
                                                            <ArcSegment IsSmoothJoin="True" SweepDirection="Clockwise">
                                                                <ArcSegment.Size>
                                                                    <MultiBinding Converter="{common:ArcEllipseSizeConverter}" Mode="OneWay">
                                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                        <Binding ElementName="PathGrid" Path="ActualHeight" />
                                                                    </MultiBinding>
                                                                </ArcSegment.Size>
                                                                <ArcSegment.Point>
                                                                    <MultiBinding Converter="{common:ArcEndPointConverter}" ConverterParameter="{x:Static common:ArcEndPointConverter.IsParameterMidPoint}">
                                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                        <Binding ElementName="PathGrid" Path="ActualHeight" />
                                                                        <Binding Path="Value" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                                        <Binding ElementName="FullyGridScaleTransform" Path="ScaleX" />
                                                                    </MultiBinding>
                                                                </ArcSegment.Point>
                                                            </ArcSegment>
                                                            <!--  Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcCircularSizeConverter}, Mode=OneWay}"  -->
                                                            <ArcSegment IsSmoothJoin="True" SweepDirection="Clockwise">
                                                                <ArcSegment.Size>
                                                                    <MultiBinding Converter="{common:ArcEllipseSizeConverter}" Mode="OneWay">
                                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                        <Binding ElementName="PathGrid" Path="ActualHeight" />
                                                                    </MultiBinding>
                                                                </ArcSegment.Size>
                                                                <ArcSegment.Point>
                                                                    <MultiBinding Converter="{common:ArcEndPointConverter}">
                                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                                        <Binding ElementName="PathGrid" Path="ActualHeight" />
                                                                        <Binding Path="Value" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource Mode=TemplatedParent}" />
                                                                        <Binding ElementName="FullyGridScaleTransform" Path="ScaleX" />
                                                                    </MultiBinding>
                                                                </ArcSegment.Point>
                                                            </ArcSegment>
                                                        </PathFigure>
                                                    </PathFigureCollection>
                                                </PathGeometry.Figures>
                                            </PathGeometry>
                                        </GeometryGroup>
                                    </Path.Data>
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <RotateTransform x:Name="PathProgressRotateTransform" CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=0.5, Mode=OneWay}" CenterY="{Binding ElementName=PathGrid, Path=ActualHeight, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=0.5, Mode=OneWay}" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Canvas>
                            <TextBlock x:Name="PART_Text"
                                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, StringFormat={}{0:F0}%}"
                                       Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:LinearProgressBarAssistant.TextColor)}"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:LinearProgressBarAssistant.IsShowPercent), Converter={toolkit:BooleanToVisibilityConverter}}" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AssistantThemeBrush}" />
                            <Setter Property="IsIndeterminate" Value="False" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Background" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Value}" Value="0">
                            <Setter Property="StrokeStartLineCap" Value="Flat" TargetName="PART_Progress" />
                            <Setter Property="StrokeEndLineCap" Value="Flat" TargetName="PART_Progress" />
                        </DataTrigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Background" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsIndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminateStoryboard}" />
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Value" Value="0" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Background" />
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="FullyCircularStoryboard" Storyboard="{StaticResource FullyCircularStoryboard}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="FullyCircularStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WaveProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource AssistantThemeBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardOnLoaded">
                            <DoubleAnimation Storyboard.TargetName="PART_Ellipse"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                             From="0" To="1" Duration="0:0:1"
                                             RepeatBehavior="Forever" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Canvas>
                            <Ellipse x:Name="PART_Ellipse"
                                     Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness.Left}">
                                <Ellipse.Fill>
                                    <VisualBrush Stretch="None"
                                                 AutoLayoutContent="True" TileMode="Tile" Viewport="0,-1,1,5">
                                        <VisualBrush.Visual>
                                            <Grid Width="{TemplateBinding Width, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=3}" Height="{TemplateBinding Height, Converter={toolkit:ValueTranslateToDoubleConverter}, ConverterParameter=3}">
                                                <Border Background="{TemplateBinding Background}" />
                                                <Grid x:Name="PART_Wave">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(pc:WaveProgressBarAssistant.WaveHeight)}" />
                                                        <RowDefinition Height="*" />
                                                    </Grid.RowDefinitions>
                                                    <Path Grid.Row="0"
                                                          Data="{DynamicResource ArchGeometry}"
                                                          Fill="{TemplateBinding Foreground}"
                                                          Stretch="Fill"
                                                          Stroke="{TemplateBinding pc:WaveProgressBarAssistant.WaveStroke}"
                                                          StrokeThickness="{TemplateBinding pc:WaveProgressBarAssistant.WaveStrokeThickness}" />
                                                    <Rectangle x:Name="PART_Rectangle" Grid.Row="1" Fill="{TemplateBinding Foreground}" />
                                                </Grid>
                                            </Grid>
                                        </VisualBrush.Visual>
                                        <VisualBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform />
                                                <RotateTransform />
                                                <TranslateTransform Y="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Value, Converter={common:ProgressBarValueToTranslateTransformY}}" />
                                            </TransformGroup>
                                        </VisualBrush.RelativeTransform>
                                    </VisualBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Canvas>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, StringFormat={}{0:F0}%}"
                                   Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:LinearProgressBarAssistant.TextColor)}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:LinearProgressBarAssistant.IsShowPercent), Converter={toolkit:BooleanToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_Ellipse">
                            <BeginStoryboard x:Name="BeginStoryboardWave" Storyboard="{StaticResource StoryboardOnLoaded}" />
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded" SourceName="PART_Ellipse">
                            <StopStoryboard BeginStoryboardName="BeginStoryboardWave" />
                        </EventTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Value}" Value="100">
                            <Setter Property="pc:WaveProgressBarAssistant.WaveHeight" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>