<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:assistant="clr-namespace:CookPopularControl.Controls.Progress"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters"
                    xmlns:commonConverters="clr-namespace:CookPopularControl.Communal.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/ValueConverter.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="LinearProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="IsIndeterminate" Value="False"/>
        <Setter Property="Foreground" Value="{DynamicResource AssistantColorTheme}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}"/>
        <Setter Property="Padding" Value="5,0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="AirFanStoryboard">
                            <DoubleAnimation Duration="0:0:1" From="0" To="360" RepeatBehavior="Forever"
                                             Storyboard.TargetProperty="Angle" Storyboard.TargetName="ariFan"/>
                            <DoubleAnimation Duration="0:0:2" From="0" To="-500" RepeatBehavior="Forever"
                                             Storyboard.TargetProperty="X" Storyboard.TargetName="leafTranslate"/>
                            <!--<MatrixAnimationUsingPath Storyboard.TargetName="leafMatrix"
                                                      Storyboard.TargetProperty="Matrix"
                                                      DoesRotateWithTangent="True"
                                                      Duration="0:0:5"                                                      
                                                      RepeatBehavior="Forever">
                                <MatrixAnimationUsingPath.PathGeometry>
                                    <PathGeometry Figures="M 10,100 C 35,0 135,0 160,100 180,190 285,200 310,100"/>
                                </MatrixAnimationUsingPath.PathGeometry>
                            </MatrixAnimationUsingPath>-->
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" SnapsToDevicePixels="True" Effect="{TemplateBinding attached:FrameworkElementBaseAttached.ShadowEffect}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard x:Name="HorizontalStoryboard" RepeatBehavior="Forever">
                                        <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                                            <EasingPointKeyFrame KeyTime="0:0:0" Value="0.0,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid>
                            <Border x:Name="border" Background="{TemplateBinding Background}" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ProgressBar},Path=(attached:FrameworkElementBaseAttached.CornerRadius)}">
                                <Grid x:Name="IconGrid" Visibility="{TemplateBinding assistant:LinearProgressBarAssistant.IsShowIcon,Converter={toolsConverters:BooleanToVisibilityConverter}}">
                                    <Path Width="{TemplateBinding assistant:LinearProgressBarAssistant.IconSize}" 
                                          Height="{TemplateBinding assistant:LinearProgressBarAssistant.IconSize}" 
                                          Data="{DynamicResource AirFanGeometry}" 
                                          HorizontalAlignment="Right" VerticalAlignment="Center"
                                          Stroke="White" StrokeThickness="1" Fill="White" Stretch="Uniform"
                                          RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <RotateTransform x:Name="ariFan"/>
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path Width="{TemplateBinding assistant:LinearProgressBarAssistant.IconSize}" 
                                          Height="{TemplateBinding assistant:LinearProgressBarAssistant.IconSize}" 
                                          x:Name="IconLeaf" Data="{DynamicResource LeafGeometry}" 
                                          HorizontalAlignment="Right" VerticalAlignment="Center"
                                          Stroke="White" StrokeThickness="1" Fill="White" Stretch="Uniform"
                                          RenderTransformOrigin="0.5,0.5" Visibility="Collapsed">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <MatrixTransform x:Name="leafMatrix"/>
                                                <TranslateTransform x:Name="leafTranslate"/>
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Border>
                            <Border x:Name="PART_Track"/>
                            <Grid x:Name="PART_Indicator" ClipToBounds="True" HorizontalAlignment="Left">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="width1"/>
                                    <ColumnDefinition x:Name="width2" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="Animation" RenderTransformOrigin="0.5,0.5">
                                    <Grid.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="-1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Grid.RenderTransform>
                                    <Border Background="{TemplateBinding Foreground}" CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ProgressBar},Path=(attached:FrameworkElementBaseAttached.CornerRadius)}">
                                        <Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ProgressBar},Path=(assistant:LinearProgressBarAssistant.TextColor)}" 
                                                           SnapsToDevicePixels="True" FontSize="{TemplateBinding FontSize}" 
                                                           VerticalAlignment="{TemplateBinding VerticalAlignment}" RenderTransformOrigin="0.5,0.5"
                                                           Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Value,StringFormat={}{0:F0}%}"
                                                           Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ProgressBar},Path=(assistant:LinearProgressBarAssistant.IsShowPercent),Converter={toolsConverters:BooleanToVisibilityConverter}}">
                                                    <TextBlock.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                                            <SkewTransform AngleX="0" AngleY="0"/>
                                                            <RotateTransform Angle="0"/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </TextBlock.RenderTransform>
                                                </TextBlock>
                                            </StackPanel>
                                        </Viewbox>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Value,Converter={toolsConverters:ValueBetweenZeroAnd100}}" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="IconLeaf"/>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard x:Name="AirFanStoryboard" Storyboard="{StaticResource AirFanStoryboard}"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Value}" Value="100">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="IconGrid"/>
                            <DataTrigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="AirFanStoryboard"/>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" TargetName="border"></Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Width" Value="0.25*" TargetName="width1"></Setter>
                            <Setter Property="Width" Value="0.75*" TargetName="width2"></Setter>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CircularProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource AssistantColorTheme}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminateStoryboard">
                            <DoubleAnimation Storyboard.TargetName="PathProgressRotateTransform" Storyboard.TargetProperty="Angle"
                                             Duration="0:0:2" From="0" To="360" RepeatBehavior="Forever"/>
                        </Storyboard>
                        <Storyboard x:Key="FullyCircularStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="FullyGridScaleTransform"
                                                           Storyboard.TargetProperty="ScaleX"
                                                           RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1.1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation Storyboard.TargetName="PathProgressRotateTransform"
                                             Storyboard.TargetProperty="Angle" 
                                             RepeatBehavior="Forever"
                                             From="0" To="360" Duration="0:0:1.25" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="TemplateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Ellipse x:Name="PART_Background" Stretch="Fill" Stroke="{DynamicResource UnEnabledBrush}" StrokeThickness="{TemplateBinding assistant:CircularProgressAssistant.ArcThickness}"/>
                            <Grid x:Name="PathGrid"
                                  Margin="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(assistant:CircularProgressAssistant.ArcThickness),
                                           Converter={commonConverters:DoubleToThickness},ConverterParameter=0.5,Mode=OneWay}">
                                <Grid>
                                    <Grid.RenderTransform>
                                        <ScaleTransform x:Name="FullyGridScaleTransform" ScaleX="0" />
                                    </Grid.RenderTransform>
                                </Grid>
                                <Canvas>
                                    <Path x:Name="PART_PGOGRESS" Stroke="{TemplateBinding Foreground}" StrokeThickness="{TemplateBinding assistant:CircularProgressAssistant.ArcThickness}" 
                                          Fill="{TemplateBinding Background}" Stretch="None" StrokeStartLineCap="Round" StrokeEndLineCap="Round">
                                        <Path.Data>
                                            <GeometryGroup>
                                                <PathGeometry>
                                                    <PathGeometry.Figures>
                                                        <PathFigureCollection>
                                                            <PathFigure StartPoint="{Binding ElementName=PathGrid,Path=ActualWidth, Converter={StaticResource ArcStartPointConverter}, Mode=OneWay}">
                                                                <!--Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcCircularSizeConverter}, Mode=OneWay}"-->
                                                                <ArcSegment SweepDirection="Clockwise" IsSmoothJoin="True">
                                                                    <ArcSegment.Size>
                                                                        <MultiBinding Converter="{commonConverters:ArcEllipseSizeConverter}" Mode="OneWay">
                                                                            <Binding ElementName="PathGrid" Path="ActualWidth"/>
                                                                            <Binding ElementName="PathGrid" Path="ActualHeight"/>
                                                                        </MultiBinding>
                                                                    </ArcSegment.Size>
                                                                    <ArcSegment.Point>
                                                                        <MultiBinding Converter="{commonConverters:ArcEndPointConverter}"
                                                                              ConverterParameter="{x:Static commonConverters:ArcEndPointConverter.IsParameterMidPoint}">
                                                                            <Binding ElementName="PathGrid" Path="ActualWidth"/>
                                                                            <Binding ElementName="PathGrid" Path="ActualHeight"/>
                                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Value"/>
                                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Minimum"/>
                                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Maximum"/>
                                                                            <Binding ElementName="FullyGridScaleTransform" Path="ScaleX" />
                                                                        </MultiBinding>
                                                                    </ArcSegment.Point>
                                                                </ArcSegment>
                                                                <!--Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcCircularSizeConverter}, Mode=OneWay}"-->
                                                                <ArcSegment SweepDirection="Clockwise" IsSmoothJoin="True">
                                                                    <ArcSegment.Size>
                                                                        <MultiBinding Converter="{commonConverters:ArcEllipseSizeConverter}" Mode="OneWay">
                                                                            <Binding ElementName="PathGrid" Path="ActualWidth"/>
                                                                            <Binding ElementName="PathGrid" Path="ActualHeight"/>
                                                                        </MultiBinding>
                                                                    </ArcSegment.Size>
                                                                    <ArcSegment.Point>
                                                                        <MultiBinding Converter="{commonConverters:ArcEndPointConverter}">
                                                                            <Binding ElementName="PathGrid" Path="ActualWidth"/>
                                                                            <Binding ElementName="PathGrid" Path="ActualHeight"/>
                                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Value"/>
                                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Minimum"/>
                                                                            <Binding RelativeSource="{RelativeSource Mode=TemplatedParent}" Path="Maximum"/>
                                                                            <Binding ElementName="FullyGridScaleTransform" Path="ScaleX" />
                                                                        </MultiBinding>
                                                                    </ArcSegment.Point>
                                                                </ArcSegment>
                                                            </PathFigure>
                                                        </PathFigureCollection>
                                                    </PathGeometry.Figures>
                                                </PathGeometry>
                                            </GeometryGroup>
                                        </Path.Data>
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <RotateTransform x:Name="PathProgressRotateTransform"
                                                         CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=0.5, Mode=OneWay}" 
                                                         CenterY="{Binding ElementName=PathGrid, Path=ActualHeight, Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=0.5, Mode=OneWay}" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                                <TextBlock x:Name="PART_CONTENT" Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Value,StringFormat={}{0:F0}%}" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center" 
                                       Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(assistant:LinearProgressBarAssistant.TextColor)}"
                                       Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(assistant:LinearProgressBarAssistant.IsShowPercent),Converter={toolsConverters:BooleanToVisibilityConverter}}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource AssistantColorTheme}" />
                            <Setter Property="IsIndeterminate" Value="False" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Background"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Value}" Value="0">
                            <Setter Property="StrokeStartLineCap" Value="Flat" TargetName="PART_PGOGRESS"/>
                            <Setter Property="StrokeEndLineCap" Value="Flat" TargetName="PART_PGOGRESS"/>
                        </DataTrigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Background"/>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="IsIndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminateStoryboard}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard"/>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Value" Value="0" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Background"/>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FullyCircularStoryboard}"
                                                 x:Name="FullyCircularStoryboard"/>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="FullyCircularStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WaveProgressBarBaseStyle" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{DynamicResource AssistantColorTheme}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardOnLoaded">
                            <DoubleAnimation Storyboard.TargetName="PART_Ellipse"
                                             Storyboard.TargetProperty="(Shape.Fill).(Brush.RelativeTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" 
                                             RepeatBehavior="Forever" From="0" To="1" Duration="0:0:1"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Canvas>
                            <Ellipse x:Name="PART_Ellipse" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                                     Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=BorderThickness.Left}">
                                <Ellipse.Fill>
                                    <VisualBrush TileMode="Tile" Viewport="0,-1,1,5" Stretch="None" AutoLayoutContent="True">
                                        <VisualBrush.Visual>
                                            <Grid Width="{TemplateBinding Width,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=3}" 
                                                  Height="{TemplateBinding Height,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=3}">
                                                <Border Background="{TemplateBinding Background}"/>
                                                <Grid x:Name="PART_Wave">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assistant:WaveProgressBarAssistant.WaveHeight)}"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <Path Grid.Row="0" Stretch="Fill" Fill="{TemplateBinding Foreground}" 
                                                          Stroke="{TemplateBinding assistant:WaveProgressBarAssistant.WaveStroke}"
                                                          StrokeThickness="{TemplateBinding assistant:WaveProgressBarAssistant.WaveStrokeThickness}"
                                                          Data="{DynamicResource ArchGeometry}"/>
                                                    <Rectangle Grid.Row="1" x:Name="PART_Rectangle" Fill="{TemplateBinding Foreground}"/>
                                                </Grid>
                                            </Grid>
                                        </VisualBrush.Visual>
                                        <VisualBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform />
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform Y="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Value,Converter={commonConverters:ProgressBarValueToTranslateTransformY}}"  />
                                            </TransformGroup>
                                        </VisualBrush.RelativeTransform>
                                    </VisualBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Canvas>
                        <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Value,StringFormat={}{0:F0}%}"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Foreground="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(assistant:LinearProgressBarAssistant.TextColor)}"
                                   Visibility="{Binding RelativeSource={RelativeSource TemplatedParent},Path=(assistant:LinearProgressBarAssistant.IsShowPercent),Converter={toolsConverters:BooleanToVisibilityConverter}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="PART_Ellipse">
                            <BeginStoryboard x:Name="BeginStoryboardWave" Storyboard="{StaticResource StoryboardOnLoaded}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="FrameworkElement.Unloaded" SourceName="PART_Ellipse">
                            <StopStoryboard BeginStoryboardName="BeginStoryboardWave"/>
                        </EventTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=Value}" Value="100">
                            <Setter Property="assistant:WaveProgressBarAssistant.WaveHeight" Value="0" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>