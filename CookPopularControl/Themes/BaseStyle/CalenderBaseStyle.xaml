<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:CookPopularControl.Communal"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/ButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="CalendarButtonStyle" TargetType="{x:Type CalendarButton}">
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="Transparent"
                                   Opacity="0"
                                   RadiusX="1" RadiusY="1" />
                        <Rectangle x:Name="TodayBackground"
                                   Fill="Transparent"
                                   Opacity="0"
                                   RadiusX="1" RadiusY="1" />
                        <ContentPresenter x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                        <Rectangle x:Name="CalendarButtonFocusVisual"
                                   IsHitTestVisible="false" RadiusX="1" RadiusY="1"
                                   Stroke="{DynamicResource PrimaryThemeBrush}"
                                   Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                        <!--<ColorAnimation Duration="0:0:0.2" To="{DynamicResource AssistantForegroundColor}"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>-->
                                        <ColorAnimation Storyboard.TargetName="TodayBackground"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{DynamicResource ButtonBaseMouseOverColor}"
                                                        Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Unselected" />
                                <VisualState Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                        <ColorAnimation Storyboard.TargetName="SelectedBackground"
                                                        Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                        To="{DynamicResource PrimaryThemeColor}"
                                                        Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity"
                                                         To="0" Duration="0:0:0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0:0:0.2">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="CalendarButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0:0:0.2">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsInactive" Value="True">
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="MaxHeight" Value="0" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                    <Grid>
                        <Rectangle x:Name="TodayBackground"
                                   Fill="{DynamicResource PrimaryThemeBrush}"
                                   Opacity="0"
                                   RadiusX="1" RadiusY="1" />
                        <Rectangle x:Name="SelectedBackground"
                                   Fill="{DynamicResource PrimaryThemeBrush}"
                                   Opacity="0"
                                   RadiusX="1" RadiusY="1" />
                        <Rectangle x:Name="HighlightBackground"
                                   Fill="{DynamicResource ButtonBaseMouseOverBackground}"
                                   Opacity="0"
                                   RadiusX="1" RadiusY="1" />
                        <ContentPresenter x:Name="NormalText"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          TextElement.Foreground="{TemplateBinding Foreground}" />
                        <Rectangle x:Name="DayButtonFocusVisual"
                                   IsHitTestVisible="false" RadiusX="1" RadiusY="1"
                                   Stroke="{DynamicResource PrimaryThemeBrush}"
                                   Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HighlightBackground" Storyboard.TargetProperty="Opacity"
                                                         To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="SelectedBackground" Storyboard.TargetProperty="Opacity"
                                                         To="0.5" Duration="0:0:0.2" />
                                        <!--<ColorAnimation Duration="0:0:0.2" To="{DynamicResource AssistantForegroundColor}"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="Active" />
                                <VisualState Name="Inactive" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.2" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0:0:0.2">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Visible}" KeyTime="0:0:0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DayButtonFocusVisual" Storyboard.TargetProperty="Visibility" Duration="0:0:0.2">
                                            <DiscreteObjectKeyFrame Value="{x:Static Visibility.Collapsed}" KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="RegularDay" />
                                <VisualState Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="TodayBackground" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.2" />
                                        <!--<ColorAnimation Duration="0:0:0.2" To="{DynamicResource AssistantForegroundColor}"
                                                        Storyboard.TargetName="NormalText"
                                                        Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState Name="NormalDay" />
                                <VisualState Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="NormalText" Storyboard.TargetProperty="Opacity"
                                                         To="0.25" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsInactive" Value="True">
                <Setter Property="MinHeight" Value="0" />
                <Setter Property="MaxHeight" Value="0" />
            </Trigger>
            <Trigger Property="IsBlackedOut" Value="True">
                <Setter Property="Cursor" Value="No" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
        <Grid Width="30" Height="30"
              Background="Transparent"
              Cursor="Hand">
            <Path Width="10" Height="15"
                  Data="{DynamicResource LeftTriangleGeometry}"
                  Fill="{DynamicResource AssistantForegroundBrush}"
                  Stretch="Fill" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
        <Grid Width="30" Height="30"
              Background="Transparent"
              Cursor="Hand">
            <Path Width="10" Height="15"
                  Data="{DynamicResource RightTriangleGeometry}"
                  Fill="{DynamicResource AssistantForegroundBrush}"
                  Stretch="Fill" />
        </Grid>
    </ControlTemplate>

    <Style x:Key="CalendarItemStyle" TargetType="{x:Type CalendarItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=Background}" />
        <Setter Property="Margin" Value="0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <SineEase x:Key="EasingFunctionOut" EasingMode="EaseOut" />
                        <CubicEase x:Key="EasingFunctionIn" EasingMode="EaseIn" />
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Text="{Binding [0]}"
                                       Foreground="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=(pc:CalendarAssistant.WeekForegroundBrush)}"
                                       FontWeight="DemiBold"
                                       Margin="0,5"
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       FontFamily="Verdana" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=(common:FrameworkElementBaseAttached.CornerRadius)}">
                            <Grid Background="{TemplateBinding Background}" RenderOptions.ClearTypeHint="Enabled">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="30" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border Grid.Row="0"
                                        Grid.ColumnSpan="3"
                                        Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=(pc:CalendarAssistant.TitleBackgroundBrush)}"
                                        CornerRadius="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=(common:FrameworkElementBaseAttached.CornerRadius)}"
                                        Margin="2" />
                                <Button x:Name="PART_HeaderButton" Grid.Row="0" Grid.Column="0"
                                        Foreground="{DynamicResource AssistantForegroundBrush}"
                                        Background="Transparent"
                                        FontSize="16" FontWeight="DemiBold"
                                        Focusable="False"
                                        HorizontalAlignment="Center" VerticalAlignment="Center"
                                        common:FrameworkElementBaseAttached.CornerRadius="0"
                                        Style="{StaticResource ButtonTransparentStyle}">
                                    <Button.RenderTransform>
                                        <TranslateTransform X="0" />
                                    </Button.RenderTransform>
                                </Button>
                                <Button x:Name="PART_PreviousButton" Grid.Row="0" Grid.Column="1"
                                        Margin="30,0,0,0" Focusable="False"
                                        HorizontalAlignment="Right"
                                        Template="{StaticResource PreviousButtonTemplate}" />
                                <Button x:Name="PART_NextButton" Grid.Row="0" Grid.Column="2"
                                        Margin="0,0,10,0" Focusable="False"
                                        HorizontalAlignment="Right"
                                        Template="{StaticResource NextButtonTemplate}" />
                                <Viewbox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                                    <Grid x:Name="PART_MonthView"
                                          Margin="10,0"
                                          HorizontalAlignment="Center"
                                          Visibility="Visible">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" />
                                        </Grid.RenderTransform>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Viewbox>
                                <Viewbox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3">
                                    <Grid x:Name="PART_YearView"
                                          Margin="10,0"
                                          HorizontalAlignment="Center"
                                          Visibility="Hidden">
                                        <Grid.RenderTransform>
                                            <TranslateTransform X="0" />
                                        </Grid.RenderTransform>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Viewbox>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="#A5FFFFFF"
                                   Stretch="Fill"
                                   Opacity="1"
                                   RadiusX="2" RadiusY="2" Stroke="#A5FFFFFF"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_DisabledVisual" Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_DisabledVisual" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=DisplayMode}" Value="Year">
                            <Setter Property="Visibility" Value="Hidden" TargetName="PART_MonthView" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_YearView" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Calendar}, Path=DisplayMode}" Value="Decade">
                            <Setter Property="Visibility" Value="Hidden" TargetName="PART_MonthView" />
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_YearView" />
                        </DataTrigger>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="PART_PreviousButton">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HeaderButton"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-240" To="0" Duration="0:0:0.3"
                                                     AccelerationRatio="0.1" DecelerationRatio="0.9"
                                                     EasingFunction="{StaticResource EasingFunctionOut}" />
                                    <DoubleAnimation Storyboard.TargetName="PART_MonthView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-270" To="0" Duration="0:0:0.3"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                    <DoubleAnimation Storyboard.TargetName="PART_YearView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-240" To="0" Duration="0:0:0.3"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Button.Click" SourceName="PART_NextButton">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="PART_HeaderButton"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="240" To="0" Duration="0:0:0.3"
                                                     AccelerationRatio="0.1" DecelerationRatio="0.9"
                                                     EasingFunction="{StaticResource EasingFunctionIn}" />
                                    <DoubleAnimation Storyboard.TargetName="PART_MonthView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="270" To="0" Duration="0:0:0.3"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                    <DoubleAnimation Storyboard.TargetName="PART_YearView"
                                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="240" To="0" Duration="0:0:0.3"
                                                     AccelerationRatio="0.3" DecelerationRatio="0.7" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CalenderBaseStyle" TargetType="{x:Type Calendar}">
        <Setter Property="CalendarButtonStyle" Value="{StaticResource CalendarButtonStyle}" />
        <Setter Property="CalendarDayButtonStyle" Value="{StaticResource CalendarDayButtonStyle}" />
        <Setter Property="CalendarItemStyle" Value="{StaticResource CalendarItemStyle}" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="DodgerBlue" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Calendar}">
                    <AdornerDecorator CacheMode="{DynamicResource DefaultBitmapCache}" ClipToBounds="True" Effect="{DynamicResource ComboxBoxShadow}">
                        <StackPanel x:Name="PART_Root" Width="234">
                            <CalendarItem x:Name="PART_CalendarItem"
                                          BorderBrush="{TemplateBinding BorderBrush}"
                                          BorderThickness="{TemplateBinding BorderThickness}"
                                          Background="{TemplateBinding Background}"
                                          Style="{TemplateBinding CalendarItemStyle}" />
                        </StackPanel>
                    </AdornerDecorator>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>