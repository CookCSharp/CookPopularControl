<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:commonConverters="clr-namespace:CookPopularControl.Communal.Converters">

    <Style x:Key="DatePickerButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="20" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <Path x:Name="PathButton" Data="{DynamicResource DateGeometry}" Fill="{DynamicResource PrimaryColorTheme}" Stretch="Fill"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource ButtonBaseMouseOverBackground}" TargetName="PathButton"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{DynamicResource ButtonBasePressBackground}" TargetName="PathButton"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DatePickerBaseStyle" TargetType="{x:Type DatePicker}">
        <Setter Property="BorderBrush" Value="{DynamicResource FieldBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Padding" Value="8,0,0,0" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="CalendarStyle" Value="{DynamicResource {x:Type Calendar}}" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorBaseTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border x:Name="RootBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                            CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1"
                                                         Storyboard.TargetName="PART_DisabledVisual"
                                                         Storyboard.TargetProperty="Opacity"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <DatePickerTextBox Grid.Column="0" x:Name="PART_TextBox"
                                               Foreground="{TemplateBinding Foreground}" Background="Transparent" 
                                               Style="{DynamicResource DefaultTextBoxStyle}"
                                               attached:TextElementAttached.PlaceHolder="请选择日期" Focusable="{TemplateBinding Focusable}"/>
                            <Button Grid.Column="1" x:Name="PART_Button"                   
                                    Foreground="{TemplateBinding Foreground}" Focusable="False" Margin="5,0"
                                    Style="{DynamicResource DatePickerButtonStyle}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid Grid.Column="0" Grid.ColumnSpan="2" x:Name="PART_DisabledVisual" IsHitTestVisible="False" Opacity="0.2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusX="1" RadiusY="1"/>
                                <Rectangle Grid.Column="1" Width="20" Height="20" Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Margin="5,0" />
                                <Popup x:Name="PART_Popup" StaysOpen="False" AllowsTransparency="True"
                                       Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FieldValidationErrorBrush}" TargetName="RootBorder"/>
                            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=BorderThickness,Converter={commonConverters:ThicknessToThickness},ConverterParameter=1.2}" TargetName="RootBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>