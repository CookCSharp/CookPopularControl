<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
                    xmlns:commonConverters="clr-namespace:CookPopularControl.Communal.Converters">

    <!--ListBoxItem, ListViewItem，ComboBoxItem子项定义-->

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=Foreground}"/>
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.ItemWidth)}"/>
        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.ItemHeight)}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="ItemBorder" Background="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=(attached:SelectorAttached.ItemsListBackground)}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="7*" />
                                <ColumnDefinition Width="2*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Text="{TemplateBinding Content}"   
                                       Padding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=Padding}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Grid Grid.Column="1" x:Name="ItemGrid"
                                  Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.ItemControlWidth)}"
                                  Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.ItemControlHeight)}">
                                <CheckBox x:Name="ItemCheckBox" Focusable="True" Width="{Binding ElementName=ItemGrid,Path=Width}" Height="{Binding ElementName=ItemGrid,Path=Height}"
                                          IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsSelected,Mode=TwoWay}"
                                          Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.SelectorItemType),
                                                      Converter={commonConverters:SelectorItemTypeToVisibilityConverter},ConverterParameter=CheckBox}"/>
                                <Button x:Name="ItemButton" Width="{Binding ElementName=ItemGrid,Path=Width}" Height="{Binding ElementName=ItemGrid,Path=Height}"
                                        Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.ButtonContent)}" 
                                        attached:FrameworkElementBaseAttached.CornerRadius="2" Focusable="True"
                                        attached:ButtonBaseAttached.ButtonBaseMouseOverBackground="{DynamicResource AssistantForeground}"
                                        attached:ButtonBaseAttached.ButtonBasePressBackground="{DynamicResource AssistantForeground}"
                                        Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.SelectorItemType),
                                                    Converter={commonConverters:SelectorItemTypeToVisibilityConverter},ConverterParameter=Button}"/>
                                <Path x:Name="ItemIcon" Width="{Binding ElementName=ItemGrid,Path=Width}" Height="{Binding ElementName=ItemGrid,Path=Height}" Stretch="Uniform"
                                      Data="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:FrameworkElementBaseAttached.IconGeometry)}" 
                                      Fill="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.IconFill)}" 
                                      Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.SelectorItemType),
                                                  Converter={commonConverters:SelectorItemTypeToVisibilityConverter},ConverterParameter=Icon}"/>
                                <Image x:Name="ItemImageGif" Width="{Binding ElementName=ItemGrid,Path=Width}" Height="{Binding ElementName=ItemGrid,Path=Height}"
                                       gif:AnimationBehavior.AutoStart="True"
                                       gif:AnimationBehavior.SourceUri="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.GifSource)}"
                                       Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.ImageSource)}" 
                                       Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.SelectorItemType),
                                                    Converter={commonConverters:SelectorItemTypeToVisibilityConverter},ConverterParameter=Image}"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ItemsControl},Path=(attached:SelectorAttached.SelectorItemType)}" Value="Default">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemGrid"/>
                        </DataTrigger>-->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=(attached:SelectorAttached.ItemMouseOverBackground)}" TargetName="ItemBorder"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource AssistantForeground}" TargetName="ItemCheckBox"/>
                            <Setter Property="Background" Value="{DynamicResource AssistantForeground}" TargetName="ItemButton"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryColorTheme}" TargetName="ItemButton"/>
                            <Setter Property="Fill" Value="{DynamicResource AssistantForeground}" TargetName="ItemIcon"/>
                            
                            <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ComboBox},Path=(attached:SelectorAttached.ItemMouseOverBackground)}" TargetName="ItemBorder"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>