<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:behavior="clr-namespace:CookPopularControl.Communal.Behaviors"
                    xmlns:assistant="clr-namespace:CookPopularControl.Controls.PasswordBox"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ControlsBaseStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/ToggleButtonStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="PasswordBoxBaseStyle" TargetType="{x:Type PasswordBox}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FontFamily" Value="Times New Roman"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="Padding" Value="8,0,0,0"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="CaretBrush" Value="{Binding RelativeSource={RelativeSource Self},Path=Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="BorderBrush" Value="{DynamicResource FieldBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="RootBorder"
                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                            Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="Commstates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled"/>
                                <VisualState x:Name="MouseOver"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False"
                                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                                          UseLayoutRounding="{TemplateBinding UseLayoutRounding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <TextBlock x:Name="PART_PlaceHolder"
                                       Text="{TemplateBinding attached:TextElementAttached.PlaceHolder}" 
                                       Foreground="{TemplateBinding attached:TextElementAttached.PlaceHolderBrush}" 
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Padding="{TemplateBinding Padding}"/>
                            <TextBox x:Name="PART_VisiblePassword" Visibility="Collapsed" Padding="{TemplateBinding Padding}"
                                     Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assistant:PasswordBoxAssistant.Password),Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" 
                                     BorderThickness="0" Foreground="{TemplateBinding Foreground}" Background="Transparent"
                                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                     InputMethod.IsInputMethodEnabled="False" Focusable="True" MaxLength="{TemplateBinding MaxLength}"/>
                            <ToggleButton x:Name="PART_Icon" Grid.Column="1" 
                                          Style="{DynamicResource TransparentIconToggleButtonStyle}"
                                          attached:FrameworkElementBaseAttached.CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                          attached:FrameworkElementBaseAttached.IconWidth="{TemplateBinding attached:FrameworkElementBaseAttached.IconWidth}"
                                          attached:FrameworkElementBaseAttached.IconHeight="{TemplateBinding attached:FrameworkElementBaseAttached.IconHeight}"
                                          attached:FrameworkElementBaseAttached.IconGeometry="{DynamicResource LockGeometry}"
                                          Margin="{TemplateBinding attached:FrameworkElementBaseAttached.IconMargin}"
                                          Foreground="{DynamicResource PrimaryColorTheme}" Background="Transparent" BorderThickness="0"
                                          Visibility="{TemplateBinding assistant:PasswordBoxAssistant.IsShowIcon,Converter={toolsConverters:BooleanToVisibilityConverter}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},Path=(assistant:PasswordBoxAssistant.Password),Converter={toolsConverters:ValueIsEmptyOrNullConverter}}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_PlaceHolder"/>
                        </DataTrigger>
                        <Trigger Property="IsChecked" Value="True" SourceName="PART_Icon">
                            <Setter Property="assistant:PasswordBoxAssistant.IsShowPassword" Value="True"/>
                            <Setter Property="attached:FrameworkElementBaseAttached.IconGeometry" Value="{DynamicResource EyeGeometry}" TargetName="PART_Icon"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_ContentHost"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_VisiblePassword"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False" SourceName="PART_Icon">
                            <Setter Property="assistant:PasswordBoxAssistant.IsShowPassword" Value="False"/>
                            <Setter Property="attached:FrameworkElementBaseAttached.IconGeometry" Value="{DynamicResource LockGeometry}" TargetName="PART_Icon"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="PART_ContentHost"/>
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_VisiblePassword"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="RootBorder" Value="{StaticResource {x:Static SystemColors.ControlBrushKey}}"/>
                            <Setter Property="Foreground" Value="{StaticResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="ChanceCustomPasswordBox" TargetType="{x:Type PasswordBox}">
        <Setter Property="PasswordChar" Value="●"/>
        <Setter Property="MaxLength" Value="20" />
        <Setter Property="attached:TextElementAttached.PlaceHolder" Value="请输入密码"/>
        <Setter Property="attached:FrameworkElementBaseAttached.CornerRadius" Value="10"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForeground}"/>
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}"/>
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="8,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border">
                        <Grid VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <PasswordBox x:Name="pb" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}"
                                         BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Cursor="{TemplateBinding Cursor}"
                                         Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" CaretBrush="{TemplateBinding CaretBrush}"
                                         Style="{StaticResource passwordbox}"                              
                                         assistant:PasswordBoxAssistant.IsShowIcon="{TemplateBinding IsEyeVisible}"
                                         assistant:PasswordBoxAssistant.IsTrigger="True"   
                                         assistant:PasswordBoxAssistant.Password="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=Password,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                         PasswordChar="{TemplateBinding PasswordChar}" MaxLength="{TemplateBinding MaxLength}">
                            </PasswordBox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>