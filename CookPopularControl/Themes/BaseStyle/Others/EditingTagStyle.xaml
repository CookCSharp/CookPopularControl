<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:common="clr-namespace:CookPopularControl.Communal"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls"
                    xmlns:pt="https://Chance.CookPopularCSharpToolkit/2021/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ControlBaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <pc:EditorTypeToVisibilityConverter x:Key="EditorTypeToVisibilityConverter" />

    <!--<Style x:Key="DefaultEditingTagStyle1" TargetType="{x:Type pc:EditingTag}" BasedOn="{StaticResource InputControlBaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HeaderMargin" Value="0,0,6,0" />
        <Setter Property="HeaderHorizontalAlignment" Value="Right" />
        <Setter Property="HeaderVerticalAlignment" Value="Center" />
        <Setter Property="common:FrameworkElementBaseAttached.IconWidth" Value="15" />
        <Setter Property="common:FrameworkElementBaseAttached.IconHeight" Value="15" />
        <Setter Property="common:FrameworkElementBaseAttached.CornerRadius" Value="2" />
        <Setter Property="common:FrameworkElementBaseAttached.IconMargin" Value="0,0,4,0" />
        <Setter Property="common:TextElementAttached.PlaceHolder" Value="{x:Null}" />
        <Setter Property="common:TextElementAttached.IsAddClearButton" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:EditingTag}">
                    <Border x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding common:FrameworkElementBaseAttached.CornerRadius}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{TemplateBinding HeaderWidth}" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_Header" Grid.Column="0"
                                              Content="{TemplateBinding Header}"
                                              Margin="{TemplateBinding HeaderMargin}"
                                              HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                            <pc:SimpleGrid Grid.Column="1">
                                <TextBox x:Name="PART_TextBox"
                                         Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Mode=TwoWay}"
                                         BorderBrush="{TemplateBinding BorderBrush}"
                                         BorderThickness="{TemplateBinding BorderThickness}"
                                         Padding="{TemplateBinding Padding}"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         common:FrameworkElementBaseAttached.CornerRadius="2"
                                         common:FrameworkElementBaseAttached.IconHeight="{TemplateBinding common:FrameworkElementBaseAttached.IconHeight}"
                                         common:FrameworkElementBaseAttached.IconMargin="{TemplateBinding common:FrameworkElementBaseAttached.IconMargin}"
                                         common:FrameworkElementBaseAttached.IconWidth="{TemplateBinding common:FrameworkElementBaseAttached.IconWidth}"
                                         common:TextElementAttached.IsAddClearButton="{TemplateBinding common:TextElementAttached.IsAddClearButton}"
                                         common:TextElementAttached.PlaceHolder="{TemplateBinding common:TextElementAttached.PlaceHolder}"
                                         Visibility="{TemplateBinding EditorType, Converter={StaticResource EditorTypeToVisibilityConverter}, ConverterParameter={x:Static pc:EditorType.TextBox}}" />
                                <TextBlock Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Mode=TwoWay}"
                                           Padding="{TemplateBinding Padding}"
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                           TextAlignment="{TemplateBinding HorizontalContentAlignment}"
                                           Visibility="{TemplateBinding EditorType, Converter={StaticResource EditorTypeToVisibilityConverter}, ConverterParameter={x:Static pc:EditorType.TextBlock}}" />
                                <pc:NumericUpDown x:Name="PART_NumericUpDown"
                                                  Height="{TemplateBinding Height}"
                                                  BorderBrush="{TemplateBinding BorderBrush}"
                                                  BorderThickness="{TemplateBinding BorderThickness}"
                                                  Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content, Mode=TwoWay}"
                                                  Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:EditingTagAssistant.NumericMinimum)}"
                                                  Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(pc:EditingTagAssistant.NumericMaximum)}"
                                                  Padding="{TemplateBinding Padding}"
                                                  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  common:FrameworkElementBaseAttached.CornerRadius="{TemplateBinding common:FrameworkElementBaseAttached.CornerRadius}"
                                                  common:FrameworkElementBaseAttached.IconHeight="{TemplateBinding common:FrameworkElementBaseAttached.IconHeight}"
                                                  common:FrameworkElementBaseAttached.IconMargin="{TemplateBinding common:FrameworkElementBaseAttached.IconMargin}"
                                                  common:FrameworkElementBaseAttached.IconWidth="{TemplateBinding common:FrameworkElementBaseAttached.IconWidth}"
                                                  common:TextElementAttached.IsAddClearButton="{TemplateBinding common:TextElementAttached.IsAddClearButton}"
                                                  common:TextElementAttached.PlaceHolder="{TemplateBinding common:TextElementAttached.PlaceHolder}"
                                                  Visibility="{TemplateBinding EditorType, Converter={StaticResource EditorTypeToVisibilityConverter}, ConverterParameter={x:Static pc:EditorType.NumericUpDown}}" />
                                <ContentPresenter x:Name="PART_Content"
                                                  Content="{TemplateBinding Content}"
                                                  Margin="{TemplateBinding Padding}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Visibility="{TemplateBinding EditorType, Converter={StaticResource EditorTypeToVisibilityConverter}, ConverterParameter={x:Static pc:EditorType.Other}}" />
                            </pc:SimpleGrid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" TargetName="PART_TextBox" />
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" TargetName="PART_NumericUpDown" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FieldValidationErrorBrush}" />
                            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness.Left, Converter={pt:DoubleToThicknessConverter}, ConverterParameter=1.5}" TargetName="RootBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="0" TargetName="RootBorder" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <!--<Style x:Key="EditingTagAddClearButtonStyle" TargetType="{x:Type pc:EditingTag}" BasedOn="{StaticResource DefaultEditingTagStyle1}">
        <Setter Property="common:TextElementAttached.IsAddClearButton" Value="True" />
    </Style>-->


    <Style x:Key="DefaultEditingTagStyle" TargetType="{x:Type pc:EditingTag}" BasedOn="{StaticResource ControlBaseStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HeaderVerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pc:EditingTag}">
                    <Border x:Name="RootBorder"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding common:FrameworkElementBaseAttached.CornerRadius}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="{TemplateBinding HeaderHeight}" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{TemplateBinding HeaderWidth}" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="PART_Header"
                                              Grid.RowSpan="2"
                                              Content="{TemplateBinding Header}"
                                              ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              Margin="{TemplateBinding HeaderMargin}"
                                              HorizontalAlignment="{TemplateBinding HeaderHorizontalAlignment}"
                                              VerticalAlignment="{TemplateBinding HeaderVerticalAlignment}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                            <ContentPresenter x:Name="PART_Content" Grid.Column="1"
                                              Grid.RowSpan="2"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Aligment" Value="Top">
                            <Setter Property="Height" Value="Auto" />
                            <Setter Property="HeaderMargin" Value="0,0,0,6" />
                            <Setter Property="HeaderHorizontalAlignment" Value="Center" />
                            <Setter Property="Grid.RowSpan" Value="1" TargetName="PART_Header" />
                            <Setter Property="Grid.ColumnSpan" Value="2" TargetName="PART_Header" />
                            <Setter Property="Grid.Row" Value="1" TargetName="PART_Content" />
                            <Setter Property="Grid.RowSpan" Value="1" TargetName="PART_Content" />
                            <Setter Property="Grid.ColumnSpan" Value="2" TargetName="PART_Content" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource FieldValidationErrorBrush}" />
                            <Setter Property="BorderThickness" Value="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness.Left, Converter={pt:DoubleToThicknessConverter}, ConverterParameter=1.5}" TargetName="RootBorder" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="0" TargetName="RootBorder" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>