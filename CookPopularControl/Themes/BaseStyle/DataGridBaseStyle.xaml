<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pc="clr-namespace:CookPopularControl.Controls"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"                 
                    xmlns:assistant="clr-namespace:CookPopularControl.Controls.Grid"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/CheckBoxStyle.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/ValidationErrorBaseTemplate.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=BorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectedAll" Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <Button x:Name="Border" Content="全选" Command="{x:Static DataGrid.SelectAllCommand}"
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType=DataGrid},Path=Foreground}"
                                    Background="Transparent" SnapsToDevicePixels="True" 
                                    attached:FrameworkElementBaseAttached.CornerRadius="0"/>
                            <Polygon x:Name="Arrow" Fill="{DynamicResource PrimaryColorTheme}" Points="0,10 10,10 10,0"                                                                                                                                                         
                                     HorizontalAlignment="Right" VerticalAlignment="Bottom" Stretch="Uniform"/>
                        </Grid>
                        <!--<CheckBox x:Name="SelectedAll" Content="全选" 
                                  Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid},Path=ColumnHeaderHeight,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=0.45}"                                 
                                  IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGrid}},Path=(assistant:DataGridAssistant.IsSelectedAll),Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                  Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=Foreground}"
                                  BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=Foreground}"
                                  HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HorizontalContentAlignment}"
                                  VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=VerticalContentAlignment}"                                   
                                  Command="{x:Static DataGrid.SelectAllCommand}" Style="{StaticResource DefaultCheckBoxStyle}"/>-->
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ValidationErrorTemplate" Value="{x:Null}" />
        <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ValidationErrorBaseTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"                            
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <VisualStateManager.VisualStateGroups >
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Normal_AlternatingRow"/>
                                <!--行交替背景色状态-->
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowSelectedColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Editing">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowSelectedColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowSelectedColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Editing">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowMouseOverSelected}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Unfocused_Editing">
                                    <!--测试未发现啊-->
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowSelectedColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused_Editing">
                                    <!--测试未发现啊-->
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowSelectedColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowMouseOverColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowMouseOverSelected}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Unfocused_Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGridRowSelectedColor}"
                                                        Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Row="0" Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <DataGridDetailsPresenter Grid.Row="1" Grid.Column="1" Visibility="{TemplateBinding DetailsVisibility}"
                                                      SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=AreRowDetailsFrozen,
                                                                                                                     Converter={x:Static DataGrid.RowDetailsScrollingConverter},ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"/>
                            <DataGridRowHeader Grid.RowSpan="2" x:Name="PART_DataGridRowHeader" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HeadersVisibility,
                                                                    Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.Row}}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8" />
        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRowHeader}},Path=Width}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridRowHeaderStyle" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=BorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_CurrentRow" />
                                <VisualState x:Name="Unfocused_EditingRow" />
                                <VisualState x:Name="Normal_EditingRow" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="MouseOver_CurrentRow" />
                                <VisualState x:Name="MouseOver_Unfocused_EditingRow" />
                                <VisualState x:Name="MouseOver_EditingRow" />
                                <VisualState x:Name="MouseOver_Unfocused_Selected" />
                                <VisualState x:Name="MouseOver_Selected" />
                                <VisualState x:Name="MouseOver_Unfocused_CurrentRow_Selected" />
                                <VisualState x:Name="MouseOver_CurrentRow_Selected" />
                                <VisualState x:Name="Unfocused_Selected" />
                                <VisualState x:Name="Unfocused_CurrentRow_Selected" />
                                <VisualState x:Name="Normal_CurrentRow_Selected" />
                                <VisualState x:Name="Normal_Selected" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>
                            <CheckBox x:Name="PART_RowCheckBox"
                                      Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=Foreground}"
                                      Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid},Path=RowHeight,Converter={toolsConverters:ValueTranslateConverter},ConverterParameter=0.45}"                                 
                                      IsChecked="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGridRow},Path=IsSelected,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"                                      
                                      BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=Foreground}"                              
                                      HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HorizontalContentAlignment}"
                                      VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=VerticalContentAlignment}"
                                      Style="{StaticResource DefaultCheckBoxStyle}"/>
                            <Control SnapsToDevicePixels="False" Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=ValidationErrorTemplate}"
                                     Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}},Path=(Validation.HasError),Converter={toolsConverters:BooleanToVisibilityConverter}}"/>
                            <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Style="{StaticResource DataGridRowHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{StaticResource DataGridRowHeaderGripperStyle}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DataGridColumHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=Foreground}" />
        <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=BorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HorizontalContentAlignment}"
                                              VerticalAlignment="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource DataGridColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource DataGridColumnHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type DataGrid}},Path=Foreground}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=HorizontalContentAlignment}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},Path=VerticalContentAlignment}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border x:Name="CellBorder" BorderBrush="Transparent" BorderThickness="1.5" Margin="-1,-1.5,-1,-1"                          
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <ColorAnimation Duration="0:0:0.2" To="{DynamicResource DataGirdCellFocusedColor}" 
                                                        Storyboard.TargetName="CellBorder"  
                                                        Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},Path=IsSelected}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},Path=IsMouseOver}" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridBaseStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle}" />
        <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle}" />
        <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumHeaderStyle}" />
        <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle}" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Width="{Binding CellsPanelHorizontalOffset,  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                Focusable="false" Command="{x:Static DataGrid.SelectAllCommand}"
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,TypeInTargetAssembly={x:Type DataGrid}}}"
                                                Visibility="{Binding HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.All}}"/>
                                        <DataGridColumnHeadersPresenter Grid.Column="1" x:Name="PART_ColumnHeadersPresenter"                                                
                                                                        Visibility="{Binding HeadersVisibility, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}},
                                                                                     Converter={x:Static DataGrid.HeadersVisibilityConverter},ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                                        <ScrollContentPresenter Grid.Row="1"
                                                                Grid.ColumnSpan="2"
                                                                x:Name="PART_ScrollContentPresenter"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" />
                                        <ScrollBar Grid.Row="1"
                                                   Grid.Column="2"                             
                                                   x:Name="PART_VerticalScrollBar"
                                                   Orientation="Vertical"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset,  RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Grid.Column="1"
                                                       x:Name="PART_HorizontalScrollBar"
                                                       Orientation="Horizontal"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>