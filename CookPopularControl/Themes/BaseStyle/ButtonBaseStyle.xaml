<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ripple="clr-namespace:CookPopularControl.Controls.Ripple"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:behavior="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
                    xmlns:buttonassist="clr-namespace:CookPopularControl.Controls.Button">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Backcolors/DefaultPopularColor.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/GeometryFigure.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/ValueConverter.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/FontFamily.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/EffectShadow.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/SystemConstValue.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/RippleStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="BaseButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Effect" Value="{StaticResource CustomShadowDepth1}" />
        <Setter Property="ripple:RippleAssist.Feedback" Value="#FFFFFF" />
        <Setter Property="attached:ButtonBaseAttached.ButtonBaseMouseOverBackground" Value="{StaticResource ButtonBaseMouseOverBackground}" />
        <Setter Property="attached:ButtonBaseAttached.ButtonBasePressBackground" Value="{StaticResource ButtonBasePressBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{TemplateBinding CacheMode}">
                            <Grid>
                                <Border x:Name="border" CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Effect="{TemplateBinding attached:FrameworkElementBaseAttached.ShadowEffect}"/>
                                <DockPanel Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Path x:Name="PART_ICON" Stretch="Uniform" SnapsToDevicePixels="True" 
                                          DockPanel.Dock="{TemplateBinding attached:FrameworkElementBaseAttached.IconDirection}"
                                          Width="{TemplateBinding attached:FrameworkElementBaseAttached.IconWidth}"
                                          Height="{TemplateBinding attached:FrameworkElementBaseAttached.IconHeight}"
                                          Data="{TemplateBinding attached:FrameworkElementBaseAttached.IconGeometry}"
                                          Fill="{TemplateBinding Foreground}"/>
                                    <Image x:Name="PART_Gif" Stretch="Uniform"
                                           Width="{TemplateBinding buttonassist:ButtonAssist.GifWidth}" Height="{TemplateBinding buttonassist:ButtonAssist.GifHeight}"
                                           DockPanel.Dock="{TemplateBinding attached:FrameworkElementBaseAttached.IconDirection}"
                                           gif:AnimationBehavior.RepeatBehavior="0x" gif:AnimationBehavior.AutoStart="True"
                                           gif:AnimationBehavior.SourceUri="{TemplateBinding buttonassist:ButtonAssist.GifSource}"
                                           gif:AnimationBehavior.SourceStream="{TemplateBinding buttonassist:ButtonAssist.GifStream}"/>
                                    <ContentPresenter VerticalAlignment="Center" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      Margin="{TemplateBinding attached:FrameworkElementBaseAttached.IconMargin}"/>
                                </DockPanel>
                            </Grid>
                        </AdornerDecorator>
                        <ripple:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Padding="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ripple:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </ripple:Ripple.Clip>
                        </ripple:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ButtonBase},Path=(attached:ButtonBaseAttached.ButtonBaseMouseOverBackground)}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ButtonBase},Path=(attached:ButtonBaseAttached.ButtonBasePressBackground)}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ButtonBase}" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource BaseButtonBaseStyle}"/>

</ResourceDictionary>