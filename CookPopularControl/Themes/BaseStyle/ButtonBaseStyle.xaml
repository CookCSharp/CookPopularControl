<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:assistant="clr-namespace:CookPopularControl.Controls.Button"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
                    xmlns:ripple="clr-namespace:CookPopularControl.Controls.Ripple"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Backcolors/DefaultPopularColor.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/GeometryFigure.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/ValueConverter.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/FontFamily.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/EffectShadow.xaml" />
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/SystemConstValue.xaml" />

        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/RippleStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="DefaultButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource AssistantForegroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryThemeBrush}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Effect" Value="{x:Null}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ripple:RippleAssist.Feedback" Value="#FFFFFF" />
        <Setter Property="attached:ButtonBaseAttached.ButtonBaseMouseOverBackground" Value="{StaticResource ButtonBaseMouseOverBackground}" />
        <Setter Property="attached:ButtonBaseAttached.ButtonBasePressBackground" Value="{StaticResource ButtonBasePressBackground}" />
        <Setter Property="gif:AnimationBehavior.RepeatBehavior" Value="0x" />
        <Setter Property="gif:AnimationBehavior.AutoStart" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{StaticResource DefaultBitmapCache}">
                            <Border x:Name="RootBorder"
                                    CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                    Effect="{TemplateBinding attached:FrameworkElementBaseAttached.ShadowEffect}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <DockPanel Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Path x:Name="PART_Icon"
                                          Data="{TemplateBinding attached:FrameworkElementBaseAttached.IconGeometry}"
                                          DockPanel.Dock="{TemplateBinding attached:FrameworkElementBaseAttached.IconDirection}"
                                          Fill="{TemplateBinding Foreground}"
                                          SnapsToDevicePixels="True" Stretch="Uniform"
                                          Width="{TemplateBinding attached:FrameworkElementBaseAttached.IconWidth}"
                                          Height="{TemplateBinding attached:FrameworkElementBaseAttached.IconHeight}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    <Image x:Name="PART_Image_Gif"
                                           gif:AnimationBehavior.AutoStart="{TemplateBinding gif:AnimationBehavior.AutoStart}"
                                           gif:AnimationBehavior.RepeatBehavior="{TemplateBinding gif:AnimationBehavior.RepeatBehavior}"
                                           gif:AnimationBehavior.SourceStream="{TemplateBinding assistant:ButtonAssist.GifStream}"
                                           gif:AnimationBehavior.SourceUri="{TemplateBinding assistant:ButtonAssist.GifSource}"
                                           DockPanel.Dock="{TemplateBinding attached:FrameworkElementBaseAttached.IconDirection}"
                                           Source="{TemplateBinding assistant:ButtonAssist.ImageSource}"
                                           Stretch="Uniform"
                                           Width="{TemplateBinding assistant:ButtonAssist.ImageWidth}"
                                           Height="{TemplateBinding assistant:ButtonAssist.ImageHeight}" />
                                    <Grid x:Name="ContentGrid">
                                        <ProgressBar x:Name="PART_Progress"
                                                     attached:FrameworkElementBaseAttached.CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                                     Style="{TemplateBinding assistant:ButtonAssist.ProgressBarStyle}"
                                                     Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(assistant:ButtonAssist.IsShowProgress), Converter={toolsConverters:BooleanToVisibilityConverter}}"
                                                     Width="{TemplateBinding Width}"
                                                     Height="{TemplateBinding Height}"
                                                     BorderThickness="0"
                                                     Foreground="{TemplateBinding assistant:ButtonAssist.ProgressBarBrush}"
                                                     Background="Transparent"
                                                     Value="{TemplateBinding assistant:ButtonAssist.ProgressValue}"
                                                     HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        <ContentPresenter RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          Margin="{TemplateBinding attached:FrameworkElementBaseAttached.IconMargin}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Grid>
                                </DockPanel>
                            </Border>
                        </AdornerDecorator>
                        <ripple:Ripple ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                       ContentTemplate="{TemplateBinding ContentTemplate}"
                                       Focusable="False"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       Visibility="{TemplateBinding attached:ButtonBaseAttached.IsShowRipple,
                                                                    Converter={toolsConverters:BooleanToVisibilityConverter}}"
                                       Padding="{TemplateBinding Padding}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ripple:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="RootBorder" Path="ActualWidth" />
                                    <Binding ElementName="RootBorder" Path="ActualHeight" />
                                    <Binding ElementName="RootBorder" Path="CornerRadius" />
                                    <Binding ElementName="RootBorder" Path="BorderThickness" />
                                </MultiBinding>
                            </ripple:Ripple.Clip>
                        </ripple:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(assistant:ButtonAssist.IsShowProgress)}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(assistant:ButtonAssist.ProgressValue), Converter={toolsConverters:ValueBetweenZeroAnd100}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False" />
                                <!--<Setter Property="Foreground" Value="#22000000" TargetName="PART_Progress"/>-->
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attached:FrameworkElementBaseAttached.IconDirection" Value="Left" />
                                <Condition Property="HorizontalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentGrid" Property="HorizontalAlignment" Value="Right" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attached:FrameworkElementBaseAttached.IconDirection" Value="Right" />
                                <Condition Property="HorizontalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentGrid" Property="HorizontalAlignment" Value="Left" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attached:FrameworkElementBaseAttached.IconDirection" Value="Top" />
                                <Condition Property="VerticalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentGrid" Property="VerticalAlignment" Value="Bottom" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="attached:FrameworkElementBaseAttached.IconDirection" Value="Bottom" />
                                <Condition Property="VerticalContentAlignment" Value="Stretch" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ContentGrid" Property="VerticalAlignment" Value="Top" />
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}, Path=(attached:ButtonBaseAttached.ButtonBaseMouseOverBackground)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="RootBorder" Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ButtonBase}, Path=(attached:ButtonBaseAttached.ButtonBasePressBackground)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledBrush}" />
                            <Setter Property="Foreground" Value="{DynamicResource AssistantForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>