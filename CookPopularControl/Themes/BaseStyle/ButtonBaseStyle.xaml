<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ripple="clr-namespace:CookPopularControl.Controls.Ripple"
                    xmlns:attached="clr-namespace:CookPopularControl.Communal.Attached"
                    xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
                    xmlns:assistant="clr-namespace:CookPopularControl.Controls.Button"
                    xmlns:toolsConverters="clr-namespace:CookPopularControl.Tools.Windows.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Backcolors/DefaultPopularColor.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/GeometryFigure.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/ValueConverter.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/FontFamily.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/EffectShadow.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Resources/Dictionaries/SystemConstValue.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/CookPopularControl;component/Themes/BaseStyle/RippleStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="{x:Type ButtonBase}" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="Foreground" Value="{DynamicResource AssistantForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryColorTheme}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Effect" Value="{StaticResource CustomShadowDepth1}" />
        <Setter Property="ripple:RippleAssist.Feedback" Value="#FFFFFF" />
        <Setter Property="attached:ButtonBaseAttached.ButtonBaseMouseOverBackground" Value="{StaticResource ButtonBaseMouseOverBackground}" />
        <Setter Property="attached:ButtonBaseAttached.ButtonBasePressBackground" Value="{StaticResource ButtonBasePressBackground}" />
        <Setter Property="gif:AnimationBehavior.RepeatBehavior" Value="0x" />
        <Setter Property="gif:AnimationBehavior.AutoStart" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Grid>
                        <AdornerDecorator CacheMode="{TemplateBinding CacheMode}">
                            <Grid>
                                <Border x:Name="border" CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                        BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                                        Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Effect="{TemplateBinding attached:FrameworkElementBaseAttached.ShadowEffect}">
                                    <DockPanel Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                        <Path x:Name="PART_ICON" Stretch="Uniform" SnapsToDevicePixels="True" 
                                              DockPanel.Dock="{TemplateBinding attached:FrameworkElementBaseAttached.IconDirection}"
                                              Width="{TemplateBinding attached:FrameworkElementBaseAttached.IconWidth}"
                                              Height="{TemplateBinding attached:FrameworkElementBaseAttached.IconHeight}"
                                              Data="{TemplateBinding attached:FrameworkElementBaseAttached.IconGeometry}"
                                              Fill="{TemplateBinding Foreground}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        <Image x:Name="PART_IMGAE_Gif" Stretch="Uniform"
                                               Source="{TemplateBinding assistant:ButtonAssist.ImageSource}"
                                               Width="{TemplateBinding assistant:ButtonAssist.ImageWidth}" Height="{TemplateBinding assistant:ButtonAssist.ImageHeight}"
                                               DockPanel.Dock="{TemplateBinding attached:FrameworkElementBaseAttached.IconDirection}"
                                               gif:AnimationBehavior.RepeatBehavior="{TemplateBinding gif:AnimationBehavior.RepeatBehavior}" 
                                               gif:AnimationBehavior.AutoStart="{TemplateBinding gif:AnimationBehavior.AutoStart}"
                                               gif:AnimationBehavior.SourceUri="{TemplateBinding assistant:ButtonAssist.GifSource}"
                                               gif:AnimationBehavior.SourceStream="{TemplateBinding assistant:ButtonAssist.GifStream}"/>
                                        <Grid>
                                            <ProgressBar x:Name="PART_PROGRESS" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Margin="-2"
                                                         Value="{TemplateBinding assistant:ButtonAssist.ProgressValue}"
                                                         Style="{DynamicResource LinearProgressBarBaseStyle}" BorderThickness="0" Effect="{x:Null}"
                                                         attached:FrameworkElementBaseAttached.CornerRadius="{TemplateBinding attached:FrameworkElementBaseAttached.CornerRadius}"
                                                         Foreground="#00000000" Background="Transparent"
                                                         Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent},Path=(assistant:ButtonAssist.IsShowProgress),Converter={toolsConverters:BooleanToVisibilityConverter}}"/>
                                            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"                                                              
                                                              RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              Margin="{TemplateBinding attached:FrameworkElementBaseAttached.IconMargin}"/>
                                        </Grid>
                                    </DockPanel>
                                </Border>
                            </Grid>
                        </AdornerDecorator>
                        <ripple:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False"
                                       ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                       HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Padding="{TemplateBinding Padding}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                       Visibility="{TemplateBinding attached:ButtonBaseAttached.IsShowRipple,Converter={toolsConverters:BooleanToVisibilityConverter}}">
                            <ripple:Ripple.Clip>
                                <MultiBinding Converter="{StaticResource BorderClipConverter}">
                                    <Binding ElementName="border" Path="ActualWidth" />
                                    <Binding ElementName="border" Path="ActualHeight" />
                                    <Binding ElementName="border" Path="CornerRadius" />
                                    <Binding ElementName="border" Path="BorderThickness" />
                                </MultiBinding>
                            </ripple:Ripple.Clip>
                        </ripple:Ripple>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=(assistant:ButtonAssist.IsShowProgress)}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=Self},Path=(assistant:ButtonAssist.ProgressValue),Converter={toolsConverters:ValueBetweenZeroAnd100}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False"/>
                                <Setter Property="Foreground" Value="#22000000" TargetName="PART_PROGRESS"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="BorderBrush" Value="{DynamicResource UnEnabledColor}" />
                            <Setter Property="Background" Value="{DynamicResource UnEnabledColor}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ButtonBase},Path=(attached:ButtonBaseAttached.ButtonBaseMouseOverBackground)}" TargetName="border"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ButtonBase},Path=(attached:ButtonBaseAttached.ButtonBasePressBackground)}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultButtonBaseStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource {x:Type ButtonBase}}"/>

</ResourceDictionary>